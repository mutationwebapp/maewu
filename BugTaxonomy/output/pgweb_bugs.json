[{"subject": "pgweb", "link": "https://github.com/sosedoff/pgweb/issues/503", "title": "Request: Push docker images to Gihub Container Registry", "status": "Open", "labels": "'None yet',", "priority": null, "description": ["<td class=\"d-block comment-body markdown-body js-comment-body\">\n<p>Hi <g-emoji alias=\"wave\" class=\"g-emoji\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f44b.png\">\ud83d\udc4b</g-emoji></p>\n<p>Would it be possible to push the Docker image also to the <a href=\"https://docs.github.com/en/packages/guides/about-github-container-registry\">Gihub Container Registry</a> (ghcr.io)?</p>\n<p>It would help avoid the new pull limits and some possible network restrictions from DockerHub.</p>\n<p>It can be easily done with a Github Action. Is this on the roadmap?</p>\n<p><a class=\"user-mention\" data-hovercard-type=\"organization\" data-hovercard-url=\"/orgs/Tecnativa/hovercard\" href=\"https://github.com/Tecnativa\">@Tecnativa</a> TT27819<br/>\ncc <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/Yajo/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/Yajo\">@Yajo</a></p>\n</td>"]}, {"subject": "pgweb", "link": "https://github.com/sosedoff/pgweb/issues/502", "title": "colum header freeze in the \"Rows\" tab", "status": "Open", "labels": "'None yet',", "priority": null, "description": ["<td class=\"d-block comment-body markdown-body js-comment-body\">\n<p>Hi,</p>\n<p>In the \"Rows\" tab on the top, in which the table/view row's contents are displayed, might there be a way to freeze the \"column headings\" such that when we scroll down the \"column headings\" continue to be visible?</p>\n<p>right now, when rows are many, when we scroll down the page, the \"column headings\" scroll out of view</p>\n<p>thanks!</p>\n</td>"]}, {"subject": "pgweb", "link": "https://github.com/sosedoff/pgweb/pull/501", "title": "Show empty schemes as well", "status": "Open", "labels": "'None yet',", "priority": null, "description": ["<td class=\"d-block comment-body markdown-body js-comment-body\">\n<h1>What does this PR do?</h1>\n<p>Empty schemes are shown in the ui as well.</p>\n<h1>Motivation</h1>\n<p>We are providing postgres databases to other developers inside the Daimler Group and currently recommending pgweb as a client. We got the feedback that it is a little bit confusing that you do not see empty schemes in the ui. Users might only learn about schemes when trying to create them via SQL. I was wondering if there is any special reason for this behaviour?</p>\n<p>Best regards</p>\n<p><sub>Mathias Zeller <a href=\"mailto:mathia.zeller@daimler.com\">mathias.zeller@daimler.com</a> Daimler TSS GmbH (<a href=\"https://github.com/Daimler/daimler-foss/blob/master/LEGAL_IMPRINT.md\">Imprint</a>)</sub></p>\n</td>"]}, {"subject": "pgweb", "link": "https://github.com/sosedoff/pgweb/pull/500", "title": "Add Github actions workflow", "status": "Open", "labels": "'None yet',", "priority": null, "description": ["<td class=\"d-block comment-body markdown-body js-comment-body\">\n<p class=\"text-gray\">\n<em>No description provided.</em>\n</p>\n</td>"]}, {"subject": "pgweb", "link": "https://github.com/sosedoff/pgweb/pull/499", "title": "Switch to go modules", "status": "Open", "labels": "'None yet',", "priority": null, "description": ["<td class=\"d-block comment-body markdown-body js-comment-body\">\n<p class=\"text-gray\">\n<em>No description provided.</em>\n</p>\n</td>"]}, {"subject": "pgweb", "link": "https://github.com/sosedoff/pgweb/pull/498", "title": "Check Travis", "status": "Closed", "labels": "'None yet',", "priority": null, "description": ["<td class=\"d-block comment-body markdown-body js-comment-body\">\n<p>Dummy PR to see if travis runs the CI suite</p>\n</td>"]}, {"subject": "pgweb", "link": "https://github.com/sosedoff/pgweb/pull/497", "title": "Add arm64 v7 option", "status": "Merged", "labels": "'None yet',", "priority": null, "description": ["<td class=\"d-block comment-body markdown-body js-comment-body\">\n<p>Add build options for arm64. Tested on a raspberry pi4 8 gb running Raspberry Pi OS 64 bit.</p>\n<p>Should <span aria-label=\"This pull request closes issue #496.\" class=\"issue-keyword tooltipped tooltipped-se\">Fix</span> <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-hovercard-type=\"issue\" data-hovercard-url=\"/sosedoff/pgweb/issues/496/hovercard\" data-id=\"755784783\" data-permission-text=\"Title is private\" data-url=\"https://github.com/sosedoff/pgweb/issues/496\" href=\"https://github.com/sosedoff/pgweb/issues/496\">#496</a></p>\n</td>"]}, {"subject": "pgweb", "link": "https://github.com/sosedoff/pgweb/issues/496", "title": "Arm64  builds", "status": "Closed", "labels": "'None yet',", "priority": null, "description": ["<td class=\"d-block comment-body markdown-body js-comment-body\">\n<p>I wanted to give this a try on my raspberry pi server running arm64 but the build and dockerfile fails. It's not listed as a target in the makefile</p>\n</td>", "<td class=\"d-block comment-body markdown-body js-comment-body\">\n<p>There is a ARMv5 build but i'm not sure if its the right one. What kind of RPI do you have?</p>\n</td>", "<td class=\"d-block comment-body markdown-body js-comment-body\">\n<blockquote>\n<p>There is a ARMv5 build but i'm not sure if its the right one. What kind of RPI do you have?</p>\n</blockquote>\n<p>Raspberry pi 4 8GB running the latest 64bit Raspbian. Architecture list as Arm64</p>\n</td>", "<td class=\"d-block comment-body markdown-body js-comment-body\">\n<blockquote>\n<p>There is a ARMv5 build but i'm not sure if its the right one. What kind of RPI do you have?</p>\n</blockquote>\n<p>I finally got it to work by converting it to a go modules project with <code>go mod init</code> and running a <code>go mod tidy</code>. Finally just a <code>go build</code> in go 1.15. Might have been a few other commands in there but the go compiler listed them. Works fine like this. Not sure why you aren't using go modules yet.</p>\n<p><a href=\"https://github.com/camccar/pgweb\">https://github.com/camccar/pgweb</a></p>\n</td>", "<td class=\"d-block comment-body markdown-body js-comment-body\">\n<p>RE modules: This is an old project so i just haven't gotten a chance to upgrade to modules.</p>\n<p>RE build: I don't see you having binary build instructions added here <a href=\"https://github.com/camccar/pgweb/blob/master/Makefile#L57-L59\">https://github.com/camccar/pgweb/blob/master/Makefile#L57-L59</a>, if you have them feel free to submit a PR and i will incorporate those builds into target releases.</p>\n</td>", "<td class=\"d-block comment-body markdown-body js-comment-body\">\n<p>I\u2019ll try to get to making a PR this weekend. If all the test still pass</p>\n</td>", "<td class=\"d-block comment-body markdown-body js-comment-body\">\n<p>I just didn't understand how to use dep. I can build it now without modules. but it is missing the arm64 target. I added that in the PR. Would be awesome if you got an arm64 version in docker hub. In the mean time I just wrote another dockerfile to reference it locally.</p>\n</td>"]}, {"subject": "pgweb", "link": "https://github.com/sosedoff/pgweb/issues/495", "title": "Running Pgweb on ECS Fargate", "status": "Closed", "labels": "'None yet',", "priority": null, "description": ["<td class=\"d-block comment-body markdown-body js-comment-body\">\n<p>Is it possible to run pgweb on ECS Fargate with connectivity to a Postgres DB?</p>\n<p>I have tried to get pgweb up and running with the <code>sosedoff/pgweb</code> image, however it fails to resolve the host name of the database. I assume this is related to pgweb listening on localhost?</p>\n<p>Has anyone been able to deploy it to ECS Fargate?</p>\n</td>", "<td class=\"d-block comment-body markdown-body js-comment-body\">\n<p>I've run pgweb on ecs fargate so its definitely possible. Your issue is not clear, if you want me to troubleshoot you need to provide at least something, like ecs task definition or a command. You mention it fails to resolve the db hostname - it has nothing to do with pgweb and everything with how you're running the containers, so some context is a must in order to figure out your setup.</p>\n<p>basically the ecs setup boils down to the following:</p>\n<ul>\n<li>make sure your pgweb task runs in the same vpc as the postgres database (presumably rds) in order to use the internal dns</li>\n<li>postgres database security groups allow access from the pgweb ecs container</li>\n<li>pgweb task container has outbout rules to access the rds instance/ postgres database</li>\n</ul>\n</td>", "<td class=\"d-block comment-body markdown-body js-comment-body\">\n<p>Thanks <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/sosedoff/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/sosedoff\">@sosedoff</a>, it turns out that I need to add the RDS security group to the outbound ECS Task security group. Thanks for the pointer!</p>\n</td>"]}, {"subject": "pgweb", "link": "https://github.com/sosedoff/pgweb/pull/494", "title": "Adjust error message matching for dump spec", "status": "Merged", "labels": "'None yet',", "priority": null, "description": ["<td class=\"d-block comment-body markdown-body js-comment-body\">\n<p>This is currently failing on localhost</p>\n</td>"]}, {"subject": "pgweb", "link": "https://github.com/sosedoff/pgweb/pull/493", "title": "Use regular expression for checking some of the connection errors", "status": "Merged", "labels": "'None yet',", "priority": null, "description": ["<td class=\"d-block comment-body markdown-body js-comment-body\">\n<p>Continuation of <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/sosedoff/pgweb/pull/461/hovercard\" data-id=\"596672586\" data-permission-text=\"Title is private\" data-url=\"https://github.com/sosedoff/pgweb/issues/461\" href=\"https://github.com/sosedoff/pgweb/pull/461\">#461</a></p>\n</td>"]}, {"subject": "pgweb", "link": "https://github.com/sosedoff/pgweb/pull/492", "title": "Disable autocomplete on database search field", "status": "Merged", "labels": "'None yet',", "priority": null, "description": ["<td class=\"d-block comment-body markdown-body js-comment-body\">\n<p>Removes the pesky autocomplete artifact on the database search field - we already have autocomplete powered by the js</p>\n</td>"]}, {"subject": "pgweb", "link": "https://github.com/sosedoff/pgweb/pull/491", "title": "Run specs on go1.15", "status": "Merged", "labels": "'None yet',", "priority": null, "description": ["<td class=\"d-block comment-body markdown-body js-comment-body\">\n<p class=\"text-gray\">\n<em>No description provided.</em>\n</p>\n</td>"]}, {"subject": "pgweb", "link": "https://github.com/sosedoff/pgweb/issues/490", "title": "Prefilled connection data", "status": "Closed", "labels": "'None yet',", "priority": null, "description": ["<td class=\"d-block comment-body markdown-body js-comment-body\">\n<p>How to set default values for connection data (such as host, username, database, ...) on the connection data dialog in sessions mode?</p>\n</td>", "<td class=\"d-block comment-body markdown-body js-comment-body\">\n<p>There's no way to set default values for connections in session mode due to security concerns, however if your environment is private and trusted (ie behind a firewall or something like that) you can create a few different bookmarks (<a href=\"https://github.com/sosedoff/pgweb/wiki/Server-Connection-Bookmarks\">https://github.com/sosedoff/pgweb/wiki/Server-Connection-Bookmarks</a>) . When selecting a bookmark all the connection info is pre-filled.</p>\n</td>"]}, {"subject": "pgweb", "link": "https://github.com/sosedoff/pgweb/pull/489", "title": "feat(release): strip binary to reduce size", "status": "Merged", "labels": "'None yet',", "priority": null, "description": ["<td class=\"d-block comment-body markdown-body js-comment-body\">\n<p>Please add the <code>hacktoberfest</code> label <g-emoji alias=\"smile\" class=\"g-emoji\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f604.png\">\ud83d\ude04</g-emoji></p>\n<ul>\n<li>Add <code>-s -w</code> to strip the debugging information.</li>\n<li>Remove darwin/386 target.</li>\n</ul>\n<p>Before (using golang 1.1.5.2):</p>\n<pre><code>ls -lah bin\ntotal 255720\ndrwxr-xr-x  14 allisson  staff   448B Oct 10 11:51 .\ndrwxr-xr-x  29 allisson  staff   928B Oct 10 11:49 ..\n-rwxr-xr-x   1 allisson  staff    14M Oct 10 11:51 pgweb_darwin_amd64\n-rw-r--r--   1 allisson  staff   7.0M Oct 10 11:51 pgweb_darwin_amd64.zip\n-rwxr-xr-x   1 allisson  staff    12M Oct 10 11:51 pgweb_linux_386\n-rw-r--r--   1 allisson  staff   6.8M Oct 10 11:51 pgweb_linux_386.zip\n-rwxr-xr-x   1 allisson  staff    14M Oct 10 11:51 pgweb_linux_amd64\n-rw-r--r--   1 allisson  staff   7.0M Oct 10 11:51 pgweb_linux_amd64.zip\n-rwxr-xr-x   1 allisson  staff    12M Oct 10 11:51 pgweb_linux_arm_v5\n-rw-r--r--   1 allisson  staff   6.6M Oct 10 11:51 pgweb_linux_arm_v5.zip\n-rwxr-xr-x   1 allisson  staff    13M Oct 10 11:51 pgweb_windows_386.exe\n-rw-r--r--   1 allisson  staff   6.9M Oct 10 11:51 pgweb_windows_386.exe.zip\n-rwxr-xr-x   1 allisson  staff    14M Oct 10 11:51 pgweb_windows_amd64.exe\n-rw-r--r--   1 allisson  staff   7.0M Oct 10 11:51 pgweb_windows_amd64.exe.zip\n</code></pre>\n<p>After (using golang 1.15.2):</p>\n<pre><code>ls -lah bin\ntotal 175232\ndrwxr-xr-x  14 allisson  staff   448B Oct 10 11:53 .\ndrwxr-xr-x  30 allisson  staff   960B Oct 10 11:53 ..\n-rwxr-xr-x   1 allisson  staff    11M Oct 10 11:53 pgweb_darwin_amd64\n-rw-r--r--   1 allisson  staff   4.2M Oct 10 11:53 pgweb_darwin_amd64.zip\n-rwxr-xr-x   1 allisson  staff   8.8M Oct 10 11:53 pgweb_linux_386\n-rw-r--r--   1 allisson  staff   3.8M Oct 10 11:53 pgweb_linux_386.zip\n-rwxr-xr-x   1 allisson  staff    10M Oct 10 11:53 pgweb_linux_amd64\n-rw-r--r--   1 allisson  staff   4.0M Oct 10 11:53 pgweb_linux_amd64.zip\n-rwxr-xr-x   1 allisson  staff   8.8M Oct 10 11:53 pgweb_linux_arm_v5\n-rw-r--r--   1 allisson  staff   3.7M Oct 10 11:53 pgweb_linux_arm_v5.zip\n-rwxr-xr-x   1 allisson  staff   9.1M Oct 10 11:53 pgweb_windows_386.exe\n-rw-r--r--   1 allisson  staff   3.9M Oct 10 11:53 pgweb_windows_386.exe.zip\n-rwxr-xr-x   1 allisson  staff    11M Oct 10 11:53 pgweb_windows_amd64.exe\n-rw-r--r--   1 allisson  staff   4.0M Oct 10 11:53 pgweb_windows_amd64.exe.zip\n</code></pre>\n</td>"]}, {"subject": "pgweb", "link": "https://github.com/sosedoff/pgweb/issues/488", "title": "-bash: pgweb: command not found", "status": "Closed", "labels": "'None yet',", "priority": null, "description": ["<td class=\"d-block comment-body markdown-body js-comment-body\">\n<p>I am using linux CentOS VPS server , I have manually downloaded pgweb_linux_amd6.zip and move on the following /usr/local/bin/pgweb</p>\n<p>still I am getting</p>\n<p>-bash: pgweb: command not found</p>\n<p>while if I run manually from pgweb folder i also got</p>\n<p>-bash: pgweb: command not found</p>\n<p>I have followed these linux steps but not worked</p>\n<p><a href=\"https://github.com/sosedoff/pgweb/wiki/Installation\">https://github.com/sosedoff/pgweb/wiki/Installation</a></p>\n<p>Any help will be appreciated alot</p>\n</td>", "<td class=\"d-block comment-body markdown-body js-comment-body\">\n<p>does not appear to be an issue with archives - you probably not extracting the archive in a right place or not extracting it at all. try to download the release archive manually and run <code>unzip</code> on the file (dont move stuff around just yet). you should be able to see and execute the binary. after that is working you can move pgweb to any directly that's part of <code>PATH</code> env var so you can run <code>pgweb</code> without specifying the full path.</p>\n</td>"]}, {"subject": "pgweb", "link": "https://github.com/sosedoff/pgweb/issues/485", "title": "InsecureSkipVerify for self signed certificates", "status": "Open", "labels": "'None yet',", "priority": null, "description": ["<td class=\"d-block comment-body markdown-body js-comment-body\">\n<p>In order to use self signed certificates it would be great to set this with a command line argument, for example --ssl-skipverify</p>\n</td>", "<td class=\"d-block comment-body markdown-body js-comment-body\">\n<p>i dont remember all the options, but you can add <code>?sslmode=disable</code> to your connection string to skip any verification.<br/>\nis that what you're looking for ?</p>\n</td>", "<td class=\"d-block comment-body markdown-body js-comment-body\">\n<p>No, I need the SNI-header of the connection, but I also want to use a self-signed one, lib/pq can do this perfectly, pgweb just needs to pass this parameter</p>\n</td>", "<td class=\"d-block comment-body markdown-body js-comment-body\">\n<p>ok, i'll take a look. if you have a PR - send it over as well, would be helpful.</p>\n</td>"]}, {"subject": "pgweb", "link": "https://github.com/sosedoff/pgweb/issues/484", "title": "pgweb -D like pgcli?", "status": "Closed", "labels": "'None yet',", "priority": null, "description": ["<td class=\"d-block comment-body markdown-body js-comment-body\">\n<p>Hello there,</p>\n<p>can pgweb connect to to DSN in a configuration file?</p>\n</td>"]}, {"subject": "pgweb", "link": "https://github.com/sosedoff/pgweb/issues/483", "title": "Resize or toggle height of result", "status": "Open", "labels": "'None yet',", "priority": null, "description": ["<td class=\"d-block comment-body markdown-body js-comment-body\">\n<p>Currently the result pane taking up quite a fair bit of space and in fact most of the time we focusing on the query.</p>\n<p>Perhaps to feature to allow change of height or close it until next query runs.</p>\n<p>Oh, btw, I did noticed there's no time taken in the results pane.</p>\n<p>Would be great add-on for those who debugging queries and comparing the time taken to run those queries.</p>\n<p>Thanks!</p>\n</td>"]}, {"subject": "pgweb", "link": "https://github.com/sosedoff/pgweb/issues/482", "title": "Autoselect query block for execution", "status": "Open", "labels": "'None yet',", "priority": null, "description": ["<td class=\"d-block comment-body markdown-body js-comment-body\">\n<p>Hi, thanks for creating such helpful tool.</p>\n<p>One of the features I'd like to see is the ability to auto select query block to execute.</p>\n<p>Example:</p>\n<div class=\"highlight highlight-source-sql\"><pre><span class=\"pl-k\">SELECT</span> something <span class=\"pl-k\">FROM</span> table\n<span class=\"pl-k\">LEFT JOIN</span> table2 <span class=\"pl-k\">ON</span> ....\n\n<span class=\"pl-k\">UPDATE</span> table <span class=\"pl-k\">SET</span> xx<span class=\"pl-k\">=</span><span class=\"pl-c1\">1</span> <span class=\"pl-k\">WHERE</span> id<span class=\"pl-k\">=</span><span class=\"pl-c1\">1</span></pre></div>\n<p>Noticed above we have 2 queries but there's a few empty lines in between.</p>\n<p>When the cursor is on SELECT and press Cmd+Enter, it should run the SELECT query only, not all the queries.</p>\n<p>This will improve our productivity.</p>\n<p>Thanks in advance.</p>\n</td>", "<td class=\"d-block comment-body markdown-body js-comment-body\">\n<p>Hey, thanks for the feedback! I also found myself wanting something like this so there's a big chance a feature like it is going to make it into the next release.</p>\n</td>"]}, {"subject": "pgweb", "link": "https://github.com/sosedoff/pgweb/issues/481", "title": "Error: pq: Unsupported startup parameter: extra_float_digits", "status": "Open", "labels": "'None yet',", "priority": null, "description": ["<td class=\"d-block comment-body markdown-body js-comment-body\">\n<p>Hi,</p>\n<p>I'm trying to connect to a postgres db that's behind PGBounce. It appears that the <code>extra_float_digits</code> is incompatible PGBounce <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-hovercard-type=\"issue\" data-hovercard-url=\"/Athou/commafeed/issues/559/hovercard\" data-id=\"29129031\" data-permission-text=\"Title is private\" data-url=\"https://github.com/Athou/commafeed/issues/559\" href=\"https://github.com/Athou/commafeed/issues/559\">Athou/commafeed#559</a> . Unfortunately, I don't have control over the configs for instance PGBounce so I cannot use the <code>ignore_startup_parameters</code> fix.</p>\n<p>Is it possible for me to use <code>pgweb</code> to connect to this database?</p>\n<p>Error message:</p>\n<pre><code>$ pgweb --readonly --url \"postgresql://[redacted]?sslmode=disable\"\nPgweb v0.11.6 (git: 3e4e9c30c947ce1384c49e4257c9a3cc9dc97876) (go: go1.13.7)\nConnecting to server...\nError: pq: Unsupported startup parameter: extra_float_digits\n</code></pre>\n<p>See also: <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-hovercard-type=\"issue\" data-hovercard-url=\"/lib/pq/issues/475/hovercard\" data-id=\"166604617\" data-permission-text=\"Title is private\" data-url=\"https://github.com/lib/pq/issues/475\" href=\"https://github.com/lib/pq/issues/475\">lib/pq#475</a></p>\n</td>"]}, {"subject": "pgweb", "link": "https://github.com/sosedoff/pgweb/issues/480", "title": "Error: pq: schema \"dbms_alert\" does not exist", "status": "Open", "labels": "'None yet',", "priority": null, "description": ["<td class=\"d-block comment-body markdown-body js-comment-body\">\n<pre><code>&gt; docker run -p 8082:8081 -e DATABASE_URL='postgres://xxxxx:xxxxxx@xxxxx.xxxxx.com:5444/xxxxx?sslmode=disable' sosedoff/pgweb\nPgweb v0.11.6 (git: 3e4e9c30c947ce1384c49e4257c9a3cc9dc97876) (go: go1.13.7)\nConnecting to server...\nConnected to  \nChecking database objects...\nError: pq: schema \"dbms_alert\" does not exist\n</code></pre>\n<p>When I launch without DATABASE_URL and then login to the same db<br/>\n<code>http://localhost:8081/api/objects</code> responds with:</p>\n<pre><code>{\"error\":\"pq: schema \\\"dbms_alert\\\" does not exist\",\"status\":400}\n</code></pre>\n<p>My other database tool is Intellij IDEA.<br/>\nI don't see <code>dbms_alert</code> in any part of the db object browser in IDEA.</p>\n</td>", "<td class=\"d-block comment-body markdown-body js-comment-body\">\n<p>No idea why, maybe some permissions error? You can see the queries used in API endpoints here: <a href=\"https://github.com/sosedoff/pgweb/blob/master/pkg/statements/sql.go#L130\">https://github.com/sosedoff/pgweb/blob/master/pkg/statements/sql.go#L130</a></p>\n<p>Can you run the query and report back what you find?</p>\n</td>", "<td class=\"d-block comment-body markdown-body js-comment-body\">\n<p><code>[2020-08-03 21:04:39] [3F000] ERROR: schema \"dbms_alert\" does not exist</code></p>\n<blockquote>\n<p>No idea why, maybe some permissions error? You can see the queries used in API endpoints here: <a href=\"https://github.com/sosedoff/pgweb/blob/master/pkg/statements/sql.go#L130\">https://github.com/sosedoff/pgweb/blob/master/pkg/statements/sql.go#L130</a></p>\n<p>Can you run the query and report back what you find?</p>\n</blockquote>\n</td>", "<td class=\"d-block comment-body markdown-body js-comment-body\">\n<p><code>select * from pg_catalog.pg_namespace where nspname = 'dbms_alert';</code><br/>\nreturns one row</p>\n</td>", "<td class=\"d-block comment-body markdown-body js-comment-body\">\n<p><code>select count(*) from pg_catalog.pg_namespace;</code> returns 38<br/>\nbut IDEA only shows me one. I am assuming its the only schema the user actually has permissions to see.</p>\n</td>", "<td class=\"d-block comment-body markdown-body js-comment-body\">\n<p><code>select has_schema_privilege('dbms_alert', 'USAGE');</code><br/>\nthrows error<br/>\n<code>[3F000] ERROR: schema \"dbms_alert\" does not exist</code></p>\n</td>", "<td class=\"d-block comment-body markdown-body js-comment-body\">\n<p>looks like something is up with your permissions and i've not seen it before. what pg service are you using?</p>\n</td>", "<td class=\"d-block comment-body markdown-body js-comment-body\">\n<p><a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-hovercard-type=\"issue\" data-hovercard-url=\"/sosedoff/pgweb/issues/222/hovercard\" data-id=\"207745042\" data-permission-text=\"Title is private\" data-url=\"https://github.com/sosedoff/pgweb/issues/222\" href=\"https://github.com/sosedoff/pgweb/issues/222\">#222</a> is related</p>\n<p>IDEA is able to ignore this in its db object browser</p>\n<p>This is an enterprise postgres service managed by a whole other team.</p>\n<p>How do I find out what pg service I am using?</p>\n</td>", "<td class=\"d-block comment-body markdown-body js-comment-body\">\n<p>i don't know. you can check the pg version in IDEA somehow but i doubt it would have anything useful in the version string.<br/>\nor you can guess from the host dns name.</p>\n</td>", "<td class=\"d-block comment-body markdown-body js-comment-body\">\n<p><code>SELECT version();</code><br/>\nreturns</p>\n<pre><code>EnterpriseDB 9.6.17.24 on x86_64-pc-linux-gnu, compiled by gcc (GCC) 4.4.7 20120313 (Red Hat 4.4.7-23), 64-bit\n</code></pre>\n</td>", "<td class=\"d-block comment-body markdown-body js-comment-body\">\n<p>My recommendation is to try to come up with a way to gracefully interpret a <code>3F000</code> error on <code>has_schema_privilege</code> as <code>false</code>.<br/>\nOr maybe something along these lines: <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-hovercard-type=\"issue\" data-hovercard-url=\"/metabase/metabase/issues/10139/hovercard\" data-id=\"454979674\" data-permission-text=\"Title is private\" data-url=\"https://github.com/metabase/metabase/issues/10139\" href=\"https://github.com/metabase/metabase/issues/10139\">metabase/metabase#10139</a><br/>\nEdit: That one is an open issue as well... sigh \u00af\\_(\u30c4)_/\u00af</p>\n</td>", "<td class=\"d-block comment-body markdown-body js-comment-body\">\n<p>I see now that this is likely an issue exclusive to EnterpriseDB and not to Postgres itself. Apparently our \"Postgres\" service is more than/less than just plain old Postgres.<br/>\nsigh</p>\n</td>", "<td class=\"d-block comment-body markdown-body js-comment-body\">\n<p>Would be nice if pgweb could work around this so that EnterpriseDB would be handled despite such a small surface wrinkle, but I guess thats up to you guys or anyone who cared to fork pgweb for that purpose.</p>\n</td>", "<td class=\"d-block comment-body markdown-body js-comment-body\">\n<p>i mean if you have a workaround - feel free to send PR and i can incorporate the changes if they're not interfering with regular postgres stuff. otherwise i dont have a lot of free time to experiment with this integration (not i have access to enterprisedb)</p>\n</td>"]}, {"subject": "pgweb", "link": "https://github.com/sosedoff/pgweb/pull/479", "title": "Do not show other databases if session is locked", "status": "Merged", "labels": "'None yet',", "priority": null, "description": ["<td class=\"d-block comment-body markdown-body js-comment-body\">\n<p><span aria-label=\"This pull request closes issue #470.\" class=\"issue-keyword tooltipped tooltipped-se\">Fixes</span>: <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-hovercard-type=\"issue\" data-hovercard-url=\"/sosedoff/pgweb/issues/470/hovercard\" data-id=\"626488227\" data-permission-text=\"Title is private\" data-url=\"https://github.com/sosedoff/pgweb/issues/470\" href=\"https://github.com/sosedoff/pgweb/issues/470\">#470</a></p>\n</td>", "<td class=\"d-block comment-body markdown-body js-comment-body\">\n<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/sosedoff/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/sosedoff\">@sosedoff</a> The build fails, cause my branch can't access secrets. I guess the check should only run for branches of this repository and not forks...</p>\n</td>", "<td class=\"d-block comment-body markdown-body js-comment-body\">\n<p>Yeah you're right, i will fix it. Dont worry about failures in github actions</p>\n</td>"]}, {"subject": "pgweb", "link": "https://github.com/sosedoff/pgweb/pull/478", "title": "feat(kubernetes): Added kubernetes chart", "status": "Closed", "labels": "'not-ready',", "priority": null, "description": ["<td class=\"d-block comment-body markdown-body js-comment-body\">\n<h2>Helm Chart</h2>\n<p>Helm in the package manager for Kubernetes.</p>\n<p>Usage:</p>\n<pre><code># Install helm-git plugin.\nhelm plugin install https://github.com/aslafy-z/helm-git --version master\n\n# Add helm repository\nhelm repo add pgweb git+https://github.com/sosedoff/pgweb@contrib/helm\n\n# Install pgweb on your cluster.\nhelm install pgweb pgweb/pgweb --set databaseUrl=\"postgres://postgres:postgres@postgres:5432/postgres?sslmode=disable\"\n\n</code></pre>\n</td>", "<td class=\"d-block comment-body markdown-body js-comment-body\">\n<p>I appreciate the contribution, though im not a regular k8s user so i cant really comment on quality of the stuff you've submitted, looks alright to me. Are the example instructions in this PR the only steps necessary to get pgweb going? Might be useful to have more expanded usage.</p>\n</td>", "<td class=\"d-block comment-body markdown-body js-comment-body\">\n<blockquote>\n<p>I appreciate the contribution, though im not a regular k8s user so i cant really comment on quality of the stuff you've submitted, looks alright to me. Are the example instructions in this PR the only steps necessary to get pgweb going? Might be useful to have more expanded usage.</p>\n</blockquote>\n<p>You're right. I will update <code>Readme.md</code>  with more details of my use case on GCP.</p>\n</td>"]}, {"subject": "pgweb", "link": "https://github.com/sosedoff/pgweb/issues/477", "title": "Query tab: extranous line after service restart", "status": "Open", "labels": "'None yet',", "priority": null, "description": ["<td class=\"d-block comment-body markdown-body js-comment-body\">\n<p>I have pgweb constantly running in the background (as user-service managed by systemd), and the browser tab is pinned in Firefox. Recently I've upgraded from 0.10.0 (or 0.11.0) to the latestest 0.11.6 version. I've noticed that the query tab <em>sometimes</em> has an extra line or two the textarea:</p>\n<p><a href=\"https://user-images.githubusercontent.com/327411/86219360-5f770680-bb82-11ea-9d57-859f71932d55.png\" rel=\"noopener noreferrer\" target=\"_blank\"><img alt=\"image\" src=\"https://user-images.githubusercontent.com/327411/86219360-5f770680-bb82-11ea-9d57-859f71932d55.png\" style=\"max-width:100%;\"/></a></p>\n<p>(reenactment, the original query had about 40 lines)</p>\n<p>I'm pretty sure, I left the last query to be just <code>select 1</code>. Today I've found fragments of another query appended to that (I've pasted the <code>when</code> clause yesterday sometime prior to creating the <code>select 1</code> query).</p>\n<p>This doesn't always happen though, and I cannot reproduce it if I want to. Clearing the browser cache and storage did not help either (after deleting the local storage, it didn't happen for some days, now it's back). The FF DevTools don't show anything interesting...</p>\n<p>Any chance you've encountered this before?</p>\n</td>"]}, {"subject": "pgweb", "link": "https://github.com/sosedoff/pgweb/issues/503", "title": "Request: Push docker images to Gihub Container Registry", "status": "Open", "labels": "'None yet',", "priority": null, "description": ["<td class=\"d-block comment-body markdown-body js-comment-body\">\n<p>Hi <g-emoji alias=\"wave\" class=\"g-emoji\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f44b.png\">\ud83d\udc4b</g-emoji></p>\n<p>Would it be possible to push the Docker image also to the <a href=\"https://docs.github.com/en/packages/guides/about-github-container-registry\">Gihub Container Registry</a> (ghcr.io)?</p>\n<p>It would help avoid the new pull limits and some possible network restrictions from DockerHub.</p>\n<p>It can be easily done with a Github Action. Is this on the roadmap?</p>\n<p><a class=\"user-mention\" data-hovercard-type=\"organization\" data-hovercard-url=\"/orgs/Tecnativa/hovercard\" href=\"https://github.com/Tecnativa\">@Tecnativa</a> TT27819<br/>\ncc <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/Yajo/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/Yajo\">@Yajo</a></p>\n</td>"]}, {"subject": "pgweb", "link": "https://github.com/sosedoff/pgweb/issues/502", "title": "colum header freeze in the \"Rows\" tab", "status": "Open", "labels": "'None yet',", "priority": null, "description": ["<td class=\"d-block comment-body markdown-body js-comment-body\">\n<p>Hi,</p>\n<p>In the \"Rows\" tab on the top, in which the table/view row's contents are displayed, might there be a way to freeze the \"column headings\" such that when we scroll down the \"column headings\" continue to be visible?</p>\n<p>right now, when rows are many, when we scroll down the page, the \"column headings\" scroll out of view</p>\n<p>thanks!</p>\n</td>"]}, {"subject": "pgweb", "link": "https://github.com/sosedoff/pgweb/pull/501", "title": "Show empty schemes as well", "status": "Open", "labels": "'None yet',", "priority": null, "description": ["<td class=\"d-block comment-body markdown-body js-comment-body\">\n<h1>What does this PR do?</h1>\n<p>Empty schemes are shown in the ui as well.</p>\n<h1>Motivation</h1>\n<p>We are providing postgres databases to other developers inside the Daimler Group and currently recommending pgweb as a client. We got the feedback that it is a little bit confusing that you do not see empty schemes in the ui. Users might only learn about schemes when trying to create them via SQL. I was wondering if there is any special reason for this behaviour?</p>\n<p>Best regards</p>\n<p><sub>Mathias Zeller <a href=\"mailto:mathia.zeller@daimler.com\">mathias.zeller@daimler.com</a> Daimler TSS GmbH (<a href=\"https://github.com/Daimler/daimler-foss/blob/master/LEGAL_IMPRINT.md\">Imprint</a>)</sub></p>\n</td>"]}, {"subject": "pgweb", "link": "https://github.com/sosedoff/pgweb/pull/500", "title": "Add Github actions workflow", "status": "Open", "labels": "'None yet',", "priority": null, "description": ["<td class=\"d-block comment-body markdown-body js-comment-body\">\n<p class=\"text-gray\">\n<em>No description provided.</em>\n</p>\n</td>"]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/503", "title": "Request: Push docker images to Gihub Container Registry", "status": "open", "labels": [], "priority": null, "description": ["<p>Hi :wave: </p>\n<p>Would it be possible to push the Docker image also to the <a href=\"https://docs.github.com/en/packages/guides/about-github-container-registry\">Gihub Container Registry</a> (ghcr.io)?</p>\n<p>It would help avoid the new pull limits and some possible network restrictions from DockerHub.</p>\n<p>It can be easily done with a Github Action. Is this on the roadmap?</p>\n<p>@Tecnativa TT27819\ncc @Yajo</p>", []]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/502", "title": "colum header freeze in the \"Rows\" tab", "status": "open", "labels": [], "priority": null, "description": ["<p>Hi,</p>\n<p>In the \"Rows\" tab on the top, in which the table/view row's contents are displayed, might there be a way to freeze the \"column headings\" such that when we scroll down the \"column headings\" continue to be visible?</p>\n<p>right now, when rows are many, when we scroll down the page, the \"column headings\" scroll out of view</p>\n<p>thanks!</p>", []]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/501", "title": "Show empty schemes as well", "status": "open", "labels": [], "priority": null, "description": ["<h1>What does this PR do?</h1>\n<p>Empty schemes are shown in the ui as well.</p>\n<h1>Motivation</h1>\n<p>We are providing postgres databases to other developers inside the Daimler Group and currently recommending pgweb as a client. We got the feedback that it is a little bit confusing that you do not see empty schemes in the ui. Users might only learn about schemes when trying to create them via SQL. I was wondering if there is any special reason for this behaviour?</p>\n<p>Best regards</p>\n<p><sub>Mathias Zeller <a href=\"mailto:mathia.zeller@daimler.com\">mathias.zeller@daimler.com</a> Daimler TSS GmbH (<a href=\"https://github.com/Daimler/daimler-foss/blob/master/LEGAL_IMPRINT.md\">Imprint</a>)</sub></p>", []]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/500", "title": "Add Github actions workflow", "status": "open", "labels": [], "priority": null, "description": ["", []]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/499", "title": "Switch to go modules", "status": "open", "labels": [], "priority": null, "description": ["", []]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/498", "title": "Check Travis ", "status": "closed", "labels": [], "priority": null, "description": ["<p>Dummy PR to see if travis runs the CI suite</p>", []]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/497", "title": "Add arm64 v7 option", "status": "closed", "labels": [], "priority": null, "description": ["<p>Add build options for arm64. Tested on a raspberry pi4 8 gb running Raspberry Pi OS 64 bit.</p>\n<p>Should Fix https://github.com/sosedoff/pgweb/issues/496</p>", []]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/496", "title": "Arm64  builds", "status": "closed", "labels": [], "priority": null, "description": ["<p>I wanted to give this a try on my raspberry pi server running arm64 but the build and dockerfile fails. It's not listed as a target in the makefile</p>", ["<p>There is a ARMv5 build but i'm not sure if its the right one. What kind of RPI do you have?</p>", "<blockquote>\n<p>There is a ARMv5 build but i'm not sure if its the right one. What kind of RPI do you have?</p>\n</blockquote>\n<p>Raspberry pi 4 8GB running the latest 64bit Raspbian. Architecture list as Arm64</p>", "<blockquote>\n<p>There is a ARMv5 build but i'm not sure if its the right one. What kind of RPI do you have?</p>\n</blockquote>\n<p>I finally got it to work by converting it to a go modules project with <code>go mod init</code> and running a <code>go mod tidy</code>. Finally just a <code>go build</code> in go 1.15. Might have been a few other commands in there but the go compiler listed them. Works fine like this. Not sure why you aren't using go modules yet.  </p>\n<p>https://github.com/camccar/pgweb</p>", "<p>RE modules: This is an old project so i just haven't gotten a chance to upgrade to modules. </p>\n<p>RE build: I don't see you having binary build instructions added here https://github.com/camccar/pgweb/blob/master/Makefile#L57-L59, if you have them feel free to submit a PR and i will incorporate those builds into target releases.</p>", "<p>I\u2019ll try to get to making a PR this weekend. If all the test still pass</p>", "<p>I just didn't understand how to use dep. I can build it now without modules. but it is missing the arm64 target. I added that in the PR. Would be awesome if you got an arm64 version in docker hub. In the mean time I just wrote another dockerfile to reference it locally.</p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/495", "title": "Running Pgweb on ECS Fargate", "status": "closed", "labels": [], "priority": null, "description": ["<p>Is it possible to run pgweb on ECS Fargate with connectivity to a Postgres DB?</p>\n<p>I have tried to get pgweb up and running with the <code>sosedoff/pgweb</code> image, however it fails to resolve the host name of the database. I assume this is related to pgweb listening on localhost?</p>\n<p>Has anyone been able to deploy it to ECS Fargate?</p>", ["<p>I've run pgweb on ecs fargate so its definitely possible. Your issue is not clear, if you want me to troubleshoot you need to provide at least something, like ecs task definition or a command. You mention it fails to resolve the db hostname - it has nothing to do with pgweb and everything with how you're running the containers, so some context is a must in order to figure out your setup. </p>\n<p>basically the ecs setup boils down to the following:</p>\n<ul>\n<li>make sure your pgweb task runs in the same vpc as the postgres database (presumably rds) in order to use the internal dns</li>\n<li>postgres database security groups allow access from the pgweb ecs container</li>\n<li>pgweb task container has outbout rules to access the rds instance/ postgres database</li>\n</ul>", "<p>Thanks @sosedoff, it turns out that I need to add the RDS security group to the outbound ECS Task security group. Thanks for the pointer!</p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/494", "title": "Adjust error message matching for dump spec", "status": "closed", "labels": [], "priority": null, "description": ["<p>This is currently failing on localhost</p>", []]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/493", "title": "Use regular expression for checking some of the connection errors", "status": "closed", "labels": [], "priority": null, "description": ["<p>Continuation of #461</p>", []]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/492", "title": "Disable autocomplete on database search field", "status": "closed", "labels": [], "priority": null, "description": ["<p>Removes the pesky autocomplete artifact on the database search field - we already have autocomplete powered by the js</p>", []]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/491", "title": "Run specs on go1.15", "status": "closed", "labels": [], "priority": null, "description": ["", []]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/490", "title": "Prefilled connection data", "status": "closed", "labels": [], "priority": null, "description": ["<p>How to set default values for connection data (such as host, username, database, ...) on the connection data dialog in sessions mode?</p>", ["<p>There's no way to set default values for connections in session mode due to security concerns, however if your environment is private and trusted (ie behind a firewall or something like that) you can create a few different bookmarks (https://github.com/sosedoff/pgweb/wiki/Server-Connection-Bookmarks) . When selecting a bookmark all the connection info is pre-filled. </p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/489", "title": "feat(release): strip binary to reduce size", "status": "closed", "labels": [], "priority": null, "description": ["<p>Please add the <code>hacktoberfest</code> label \ud83d\ude04 </p>\n<ul>\n<li>Add <code>-s -w</code> to strip the debugging information.</li>\n<li>Remove darwin/386 target.</li>\n</ul>\n<p>Before (using golang 1.1.5.2):</p>\n<p><code>ls -lah bin\ntotal 255720\ndrwxr-xr-x  14 allisson  staff   448B Oct 10 11:51 .\ndrwxr-xr-x  29 allisson  staff   928B Oct 10 11:49 ..\n-rwxr-xr-x   1 allisson  staff    14M Oct 10 11:51 pgweb_darwin_amd64\n-rw-r--r--   1 allisson  staff   7.0M Oct 10 11:51 pgweb_darwin_amd64.zip\n-rwxr-xr-x   1 allisson  staff    12M Oct 10 11:51 pgweb_linux_386\n-rw-r--r--   1 allisson  staff   6.8M Oct 10 11:51 pgweb_linux_386.zip\n-rwxr-xr-x   1 allisson  staff    14M Oct 10 11:51 pgweb_linux_amd64\n-rw-r--r--   1 allisson  staff   7.0M Oct 10 11:51 pgweb_linux_amd64.zip\n-rwxr-xr-x   1 allisson  staff    12M Oct 10 11:51 pgweb_linux_arm_v5\n-rw-r--r--   1 allisson  staff   6.6M Oct 10 11:51 pgweb_linux_arm_v5.zip\n-rwxr-xr-x   1 allisson  staff    13M Oct 10 11:51 pgweb_windows_386.exe\n-rw-r--r--   1 allisson  staff   6.9M Oct 10 11:51 pgweb_windows_386.exe.zip\n-rwxr-xr-x   1 allisson  staff    14M Oct 10 11:51 pgweb_windows_amd64.exe\n-rw-r--r--   1 allisson  staff   7.0M Oct 10 11:51 pgweb_windows_amd64.exe.zip</code></p>\n<p>After (using golang 1.15.2):</p>\n<p><code>ls -lah bin\ntotal 175232\ndrwxr-xr-x  14 allisson  staff   448B Oct 10 11:53 .\ndrwxr-xr-x  30 allisson  staff   960B Oct 10 11:53 ..\n-rwxr-xr-x   1 allisson  staff    11M Oct 10 11:53 pgweb_darwin_amd64\n-rw-r--r--   1 allisson  staff   4.2M Oct 10 11:53 pgweb_darwin_amd64.zip\n-rwxr-xr-x   1 allisson  staff   8.8M Oct 10 11:53 pgweb_linux_386\n-rw-r--r--   1 allisson  staff   3.8M Oct 10 11:53 pgweb_linux_386.zip\n-rwxr-xr-x   1 allisson  staff    10M Oct 10 11:53 pgweb_linux_amd64\n-rw-r--r--   1 allisson  staff   4.0M Oct 10 11:53 pgweb_linux_amd64.zip\n-rwxr-xr-x   1 allisson  staff   8.8M Oct 10 11:53 pgweb_linux_arm_v5\n-rw-r--r--   1 allisson  staff   3.7M Oct 10 11:53 pgweb_linux_arm_v5.zip\n-rwxr-xr-x   1 allisson  staff   9.1M Oct 10 11:53 pgweb_windows_386.exe\n-rw-r--r--   1 allisson  staff   3.9M Oct 10 11:53 pgweb_windows_386.exe.zip\n-rwxr-xr-x   1 allisson  staff    11M Oct 10 11:53 pgweb_windows_amd64.exe\n-rw-r--r--   1 allisson  staff   4.0M Oct 10 11:53 pgweb_windows_amd64.exe.zip</code></p>", []]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/488", "title": "-bash: pgweb: command not found", "status": "closed", "labels": [], "priority": null, "description": ["<p>I am using linux CentOS VPS server , I have manually downloaded pgweb_linux_amd6.zip and move on the following /usr/local/bin/pgweb</p>\n<p>still I am getting </p>\n<p>-bash: pgweb: command not found</p>\n<p>while if I run manually from pgweb folder i also got </p>\n<p>-bash: pgweb: command not found</p>\n<p>I have followed these linux steps but not worked</p>\n<p>https://github.com/sosedoff/pgweb/wiki/Installation</p>\n<p>Any help will be appreciated alot</p>", ["<p>does not appear to be an issue with archives - you probably not extracting the archive in a right place or not extracting it at all. try to download the release archive manually and run <code>unzip</code> on the file (dont move stuff around just yet). you should be able to see and execute the binary. after that is working you can move pgweb to any directly that's part of <code>PATH</code> env var so you can run <code>pgweb</code> without specifying the full path. </p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/485", "title": "InsecureSkipVerify for self signed certificates", "status": "open", "labels": [], "priority": null, "description": ["<p>In order to use self signed certificates it would be great to set this with a command line argument, for example --ssl-skipverify</p>", ["<p>i dont remember all the options, but you can add <code>?sslmode=disable</code> to your connection string to skip any verification.\nis that what you're looking for ?</p>", "<p>No, I need the SNI-header of the connection, but I also want to use a self-signed one, lib/pq can do this perfectly, pgweb just needs to pass this parameter</p>", "<p>ok, i'll take a look. if you have a PR - send it over as well, would be helpful. </p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/484", "title": "pgweb -D like pgcli?", "status": "closed", "labels": [], "priority": null, "description": ["<p>Hello there,</p>\n<p>can pgweb connect to to DSN in a configuration file?</p>", []]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/483", "title": "Resize or toggle height of result", "status": "open", "labels": [], "priority": null, "description": ["<p>Currently the result pane taking up quite a fair bit of space and in fact most of the time we focusing on the query.</p>\n<p>Perhaps to feature to allow change of height or close it until next query runs.</p>\n<p>Oh, btw, I did noticed there's no time taken in the results pane.</p>\n<p>Would be great add-on for those who debugging queries and comparing the time taken to run those queries.</p>\n<p>Thanks!</p>", []]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/482", "title": "Autoselect query block for execution", "status": "open", "labels": [], "priority": null, "description": ["<p>Hi, thanks for creating such helpful tool.</p>\n<p>One of the features I'd like to see is the ability to auto select query block to execute.</p>\n<p>Example:\n```sql\nSELECT something FROM table\nLEFT JOIN table2 ON ....</p>\n<p>UPDATE table SET xx=1 WHERE id=1\n```</p>\n<p>Noticed above we have 2 queries but there's a few empty lines in between.</p>\n<p>When the cursor is on SELECT and press Cmd+Enter, it should run the SELECT query only, not all the queries.</p>\n<p>This will improve our productivity.</p>\n<p>Thanks in advance.</p>", ["<p>Hey, thanks for the feedback! I also found myself wanting something like this so there's a big chance a feature like it is going to make it into the next release. </p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/481", "title": "Error: pq: Unsupported startup parameter: extra_float_digits", "status": "open", "labels": [], "priority": null, "description": ["<p>Hi,</p>\n<p>I'm trying to connect to a postgres db that's behind PGBounce. It appears that the <code>extra_float_digits</code> is incompatible PGBounce https://github.com/Athou/commafeed/issues/559 . Unfortunately, I don't have control over the configs for instance PGBounce so I cannot use the <code>ignore_startup_parameters</code> fix.</p>\n<p>Is it possible for me to use <code>pgweb</code> to connect to this database?</p>\n<p>Error message:</p>\n<p><code>$ pgweb --readonly --url \"postgresql://[redacted]?sslmode=disable\"\nPgweb v0.11.6 (git: 3e4e9c30c947ce1384c49e4257c9a3cc9dc97876) (go: go1.13.7)\nConnecting to server...\nError: pq: Unsupported startup parameter: extra_float_digits</code>\nSee also: https://github.com/lib/pq/issues/475</p>", []]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/480", "title": "Error: pq: schema \"dbms_alert\" does not exist", "status": "open", "labels": [], "priority": null, "description": ["<p>```</p>\n<blockquote>\n<p>docker run -p 8082:8081 -e DATABASE_URL='postgres://xxxxx:xxxxxx@xxxxx.xxxxx.com:5444/xxxxx?sslmode=disable' sosedoff/pgweb\nPgweb v0.11.6 (git: 3e4e9c30c947ce1384c49e4257c9a3cc9dc97876) (go: go1.13.7)\nConnecting to server...\nConnected to<br />\nChecking database objects...\nError: pq: schema \"dbms_alert\" does not exist\n```</p>\n</blockquote>\n<p>When I launch without DATABASE_URL and then login to the same db\n<code>http://localhost:8081/api/objects</code> responds with:\n<code>{\"error\":\"pq: schema \\\"dbms_alert\\\" does not exist\",\"status\":400}</code></p>\n<p>My other database tool is Intellij IDEA.\nI don't see <code>dbms_alert</code> in any part of the db object browser in IDEA.</p>", ["<p>No idea why, maybe some permissions error? You can see the queries used in API endpoints here: https://github.com/sosedoff/pgweb/blob/master/pkg/statements/sql.go#L130 </p>\n<p>Can you run the query and report back what you find?</p>", "<p><code>[2020-08-03 21:04:39] [3F000] ERROR: schema \"dbms_alert\" does not exist</code></p>\n<blockquote>\n<p>No idea why, maybe some permissions error? You can see the queries used in API endpoints here: https://github.com/sosedoff/pgweb/blob/master/pkg/statements/sql.go#L130</p>\n<p>Can you run the query and report back what you find?</p>\n</blockquote>", "<p><code>select * from pg_catalog.pg_namespace where nspname = 'dbms_alert';</code>\nreturns one row</p>", "<p><code>select count(*) from pg_catalog.pg_namespace;</code> returns 38\nbut IDEA only shows me one. I am assuming its the only schema the user actually has permissions to see.</p>", "<p><code>select has_schema_privilege('dbms_alert', 'USAGE');</code>\nthrows error\n<code>[3F000] ERROR: schema \"dbms_alert\" does not exist</code></p>", "<p>looks like something is up with your permissions and i've not seen it before. what pg service are you using? </p>", "<p>https://github.com/sosedoff/pgweb/issues/222 is related</p>\n<p>IDEA is able to ignore this in its db object browser</p>\n<p>This is an enterprise postgres service managed by a whole other team.</p>\n<p>How do I find out what pg service I am using?</p>", "<p>i don't know. you can check the pg version in IDEA somehow but i doubt it would have anything useful in the version string.\nor you can guess from the host dns name. </p>", "<p><code>SELECT version();</code>\nreturns\n<code>EnterpriseDB 9.6.17.24 on x86_64-pc-linux-gnu, compiled by gcc (GCC) 4.4.7 20120313 (Red Hat 4.4.7-23), 64-bit</code></p>", "<p>My recommendation is to try to come up with a way to gracefully interpret a <code>3F000</code> error on <code>has_schema_privilege</code> as <code>false</code>.\nOr maybe something along these lines: https://github.com/metabase/metabase/issues/10139\nEdit: That one is an open issue as well... sigh \u00af\\_(\u30c4)_/\u00af</p>", "<p>I see now that this is likely an issue exclusive to EnterpriseDB and not to Postgres itself. Apparently our \"Postgres\" service is more than/less than just plain old Postgres.\nsigh</p>", "<p>Would be nice if pgweb could work around this so that EnterpriseDB would be handled despite such a small surface wrinkle, but I guess thats up to you guys or anyone who cared to fork pgweb for that purpose.</p>", "<p>i mean if you have a workaround - feel free to send PR and i can incorporate the changes if they're not interfering with regular postgres stuff. otherwise i dont have a lot of free time to experiment with this integration (not i have access to enterprisedb) </p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/479", "title": "Do not show other databases if session is locked", "status": "closed", "labels": [], "priority": null, "description": ["<p>Fixes: #470</p>", ["<p>@sosedoff The build fails, cause my branch can't access secrets. I guess the check should only run for branches of this repository and not forks...</p>", "<p>Yeah you're right, i will fix it. Dont worry about failures in github actions</p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/478", "title": "feat(kubernetes): Added kubernetes chart", "status": "closed", "labels": ["not-ready"], "priority": null, "description": ["<h2>Helm Chart</h2>\n<p>Helm in the package manager for Kubernetes.</p>\n<p>Usage:</p>\n<p>```</p>\n<h1>Install helm-git plugin.</h1>\n<p>helm plugin install https://github.com/aslafy-z/helm-git --version master</p>\n<h1>Add helm repository</h1>\n<p>helm repo add pgweb git+https://github.com/sosedoff/pgweb@contrib/helm</p>\n<h1>Install pgweb on your cluster.</h1>\n<p>helm install pgweb pgweb/pgweb --set databaseUrl=\"postgres://postgres:postgres@postgres:5432/postgres?sslmode=disable\"</p>\n<p>```</p>", ["<p>I appreciate the contribution, though im not a regular k8s user so i cant really comment on quality of the stuff you've submitted, looks alright to me. Are the example instructions in this PR the only steps necessary to get pgweb going? Might be useful to have more expanded usage. </p>", "<blockquote>\n<p>I appreciate the contribution, though im not a regular k8s user so i cant really comment on quality of the stuff you've submitted, looks alright to me. Are the example instructions in this PR the only steps necessary to get pgweb going? Might be useful to have more expanded usage.</p>\n</blockquote>\n<p>You're right. I will update <code>Readme.md</code>  with more details of my use case on GCP.</p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/477", "title": "Query tab: extranous line after service restart", "status": "open", "labels": [], "priority": null, "description": ["<p>I have pgweb constantly running in the background (as user-service managed by systemd), and the browser tab is pinned in Firefox. Recently I've upgraded from 0.10.0 (or 0.11.0) to the latestest 0.11.6 version. I've noticed that the query tab <em>sometimes</em> has an extra line or two the textarea:</p>\n<p><img alt=\"image\" src=\"https://user-images.githubusercontent.com/327411/86219360-5f770680-bb82-11ea-9d57-859f71932d55.png\" /></p>\n<p>(reenactment, the original query had about 40 lines)</p>\n<p>I'm pretty sure, I left the last query to be just <code>select 1</code>. Today I've found fragments of another query appended to that (I've pasted the <code>when</code> clause yesterday sometime prior to creating the <code>select 1</code> query).</p>\n<p>This doesn't always happen though, and I cannot reproduce it if I want to. Clearing the browser cache and storage did not help either (after deleting the local storage, it didn't happen for some days, now it's back). The FF DevTools don't show anything interesting...</p>\n<p>Any chance you've encountered this before?</p>", []]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/503", "title": "Request: Push docker images to Gihub Container Registry", "status": "open", "labels": [], "priority": null, "description": ["<p>Hi :wave: </p>\n<p>Would it be possible to push the Docker image also to the <a href=\"https://docs.github.com/en/packages/guides/about-github-container-registry\">Gihub Container Registry</a> (ghcr.io)?</p>\n<p>It would help avoid the new pull limits and some possible network restrictions from DockerHub.</p>\n<p>It can be easily done with a Github Action. Is this on the roadmap?</p>\n<p>@Tecnativa TT27819\ncc @Yajo</p>", []]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/502", "title": "colum header freeze in the \"Rows\" tab", "status": "open", "labels": [], "priority": null, "description": ["<p>Hi,</p>\n<p>In the \"Rows\" tab on the top, in which the table/view row's contents are displayed, might there be a way to freeze the \"column headings\" such that when we scroll down the \"column headings\" continue to be visible?</p>\n<p>right now, when rows are many, when we scroll down the page, the \"column headings\" scroll out of view</p>\n<p>thanks!</p>", []]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/501", "title": "Show empty schemes as well", "status": "open", "labels": [], "priority": null, "description": ["<h1>What does this PR do?</h1>\n<p>Empty schemes are shown in the ui as well.</p>\n<h1>Motivation</h1>\n<p>We are providing postgres databases to other developers inside the Daimler Group and currently recommending pgweb as a client. We got the feedback that it is a little bit confusing that you do not see empty schemes in the ui. Users might only learn about schemes when trying to create them via SQL. I was wondering if there is any special reason for this behaviour?</p>\n<p>Best regards</p>\n<p><sub>Mathias Zeller <a href=\"mailto:mathia.zeller@daimler.com\">mathias.zeller@daimler.com</a> Daimler TSS GmbH (<a href=\"https://github.com/Daimler/daimler-foss/blob/master/LEGAL_IMPRINT.md\">Imprint</a>)</sub></p>", []]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/500", "title": "Add Github actions workflow", "status": "open", "labels": [], "priority": null, "description": ["", []]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/499", "title": "Switch to go modules", "status": "open", "labels": [], "priority": null, "description": ["", []]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/498", "title": "Check Travis ", "status": "closed", "labels": [], "priority": null, "description": ["<p>Dummy PR to see if travis runs the CI suite</p>", []]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/497", "title": "Add arm64 v7 option", "status": "closed", "labels": [], "priority": null, "description": ["<p>Add build options for arm64. Tested on a raspberry pi4 8 gb running Raspberry Pi OS 64 bit.</p>\n<p>Should Fix https://github.com/sosedoff/pgweb/issues/496</p>", []]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/496", "title": "Arm64  builds", "status": "closed", "labels": [], "priority": null, "description": ["<p>I wanted to give this a try on my raspberry pi server running arm64 but the build and dockerfile fails. It's not listed as a target in the makefile</p>", ["<p>There is a ARMv5 build but i'm not sure if its the right one. What kind of RPI do you have?</p>", "<blockquote>\n<p>There is a ARMv5 build but i'm not sure if its the right one. What kind of RPI do you have?</p>\n</blockquote>\n<p>Raspberry pi 4 8GB running the latest 64bit Raspbian. Architecture list as Arm64</p>", "<blockquote>\n<p>There is a ARMv5 build but i'm not sure if its the right one. What kind of RPI do you have?</p>\n</blockquote>\n<p>I finally got it to work by converting it to a go modules project with <code>go mod init</code> and running a <code>go mod tidy</code>. Finally just a <code>go build</code> in go 1.15. Might have been a few other commands in there but the go compiler listed them. Works fine like this. Not sure why you aren't using go modules yet.  </p>\n<p>https://github.com/camccar/pgweb</p>", "<p>RE modules: This is an old project so i just haven't gotten a chance to upgrade to modules. </p>\n<p>RE build: I don't see you having binary build instructions added here https://github.com/camccar/pgweb/blob/master/Makefile#L57-L59, if you have them feel free to submit a PR and i will incorporate those builds into target releases.</p>", "<p>I\u2019ll try to get to making a PR this weekend. If all the test still pass</p>", "<p>I just didn't understand how to use dep. I can build it now without modules. but it is missing the arm64 target. I added that in the PR. Would be awesome if you got an arm64 version in docker hub. In the mean time I just wrote another dockerfile to reference it locally.</p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/495", "title": "Running Pgweb on ECS Fargate", "status": "closed", "labels": [], "priority": null, "description": ["<p>Is it possible to run pgweb on ECS Fargate with connectivity to a Postgres DB?</p>\n<p>I have tried to get pgweb up and running with the <code>sosedoff/pgweb</code> image, however it fails to resolve the host name of the database. I assume this is related to pgweb listening on localhost?</p>\n<p>Has anyone been able to deploy it to ECS Fargate?</p>", ["<p>I've run pgweb on ecs fargate so its definitely possible. Your issue is not clear, if you want me to troubleshoot you need to provide at least something, like ecs task definition or a command. You mention it fails to resolve the db hostname - it has nothing to do with pgweb and everything with how you're running the containers, so some context is a must in order to figure out your setup. </p>\n<p>basically the ecs setup boils down to the following:</p>\n<ul>\n<li>make sure your pgweb task runs in the same vpc as the postgres database (presumably rds) in order to use the internal dns</li>\n<li>postgres database security groups allow access from the pgweb ecs container</li>\n<li>pgweb task container has outbout rules to access the rds instance/ postgres database</li>\n</ul>", "<p>Thanks @sosedoff, it turns out that I need to add the RDS security group to the outbound ECS Task security group. Thanks for the pointer!</p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/494", "title": "Adjust error message matching for dump spec", "status": "closed", "labels": [], "priority": null, "description": ["<p>This is currently failing on localhost</p>", []]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/493", "title": "Use regular expression for checking some of the connection errors", "status": "closed", "labels": [], "priority": null, "description": ["<p>Continuation of #461</p>", []]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/492", "title": "Disable autocomplete on database search field", "status": "closed", "labels": [], "priority": null, "description": ["<p>Removes the pesky autocomplete artifact on the database search field - we already have autocomplete powered by the js</p>", []]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/491", "title": "Run specs on go1.15", "status": "closed", "labels": [], "priority": null, "description": ["", []]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/490", "title": "Prefilled connection data", "status": "closed", "labels": [], "priority": null, "description": ["<p>How to set default values for connection data (such as host, username, database, ...) on the connection data dialog in sessions mode?</p>", ["<p>There's no way to set default values for connections in session mode due to security concerns, however if your environment is private and trusted (ie behind a firewall or something like that) you can create a few different bookmarks (https://github.com/sosedoff/pgweb/wiki/Server-Connection-Bookmarks) . When selecting a bookmark all the connection info is pre-filled. </p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/489", "title": "feat(release): strip binary to reduce size", "status": "closed", "labels": [], "priority": null, "description": ["<p>Please add the <code>hacktoberfest</code> label \ud83d\ude04 </p>\n<ul>\n<li>Add <code>-s -w</code> to strip the debugging information.</li>\n<li>Remove darwin/386 target.</li>\n</ul>\n<p>Before (using golang 1.1.5.2):</p>\n<p><code>ls -lah bin\ntotal 255720\ndrwxr-xr-x  14 allisson  staff   448B Oct 10 11:51 .\ndrwxr-xr-x  29 allisson  staff   928B Oct 10 11:49 ..\n-rwxr-xr-x   1 allisson  staff    14M Oct 10 11:51 pgweb_darwin_amd64\n-rw-r--r--   1 allisson  staff   7.0M Oct 10 11:51 pgweb_darwin_amd64.zip\n-rwxr-xr-x   1 allisson  staff    12M Oct 10 11:51 pgweb_linux_386\n-rw-r--r--   1 allisson  staff   6.8M Oct 10 11:51 pgweb_linux_386.zip\n-rwxr-xr-x   1 allisson  staff    14M Oct 10 11:51 pgweb_linux_amd64\n-rw-r--r--   1 allisson  staff   7.0M Oct 10 11:51 pgweb_linux_amd64.zip\n-rwxr-xr-x   1 allisson  staff    12M Oct 10 11:51 pgweb_linux_arm_v5\n-rw-r--r--   1 allisson  staff   6.6M Oct 10 11:51 pgweb_linux_arm_v5.zip\n-rwxr-xr-x   1 allisson  staff    13M Oct 10 11:51 pgweb_windows_386.exe\n-rw-r--r--   1 allisson  staff   6.9M Oct 10 11:51 pgweb_windows_386.exe.zip\n-rwxr-xr-x   1 allisson  staff    14M Oct 10 11:51 pgweb_windows_amd64.exe\n-rw-r--r--   1 allisson  staff   7.0M Oct 10 11:51 pgweb_windows_amd64.exe.zip</code></p>\n<p>After (using golang 1.15.2):</p>\n<p><code>ls -lah bin\ntotal 175232\ndrwxr-xr-x  14 allisson  staff   448B Oct 10 11:53 .\ndrwxr-xr-x  30 allisson  staff   960B Oct 10 11:53 ..\n-rwxr-xr-x   1 allisson  staff    11M Oct 10 11:53 pgweb_darwin_amd64\n-rw-r--r--   1 allisson  staff   4.2M Oct 10 11:53 pgweb_darwin_amd64.zip\n-rwxr-xr-x   1 allisson  staff   8.8M Oct 10 11:53 pgweb_linux_386\n-rw-r--r--   1 allisson  staff   3.8M Oct 10 11:53 pgweb_linux_386.zip\n-rwxr-xr-x   1 allisson  staff    10M Oct 10 11:53 pgweb_linux_amd64\n-rw-r--r--   1 allisson  staff   4.0M Oct 10 11:53 pgweb_linux_amd64.zip\n-rwxr-xr-x   1 allisson  staff   8.8M Oct 10 11:53 pgweb_linux_arm_v5\n-rw-r--r--   1 allisson  staff   3.7M Oct 10 11:53 pgweb_linux_arm_v5.zip\n-rwxr-xr-x   1 allisson  staff   9.1M Oct 10 11:53 pgweb_windows_386.exe\n-rw-r--r--   1 allisson  staff   3.9M Oct 10 11:53 pgweb_windows_386.exe.zip\n-rwxr-xr-x   1 allisson  staff    11M Oct 10 11:53 pgweb_windows_amd64.exe\n-rw-r--r--   1 allisson  staff   4.0M Oct 10 11:53 pgweb_windows_amd64.exe.zip</code></p>", []]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/488", "title": "-bash: pgweb: command not found", "status": "closed", "labels": [], "priority": null, "description": ["<p>I am using linux CentOS VPS server , I have manually downloaded pgweb_linux_amd6.zip and move on the following /usr/local/bin/pgweb</p>\n<p>still I am getting </p>\n<p>-bash: pgweb: command not found</p>\n<p>while if I run manually from pgweb folder i also got </p>\n<p>-bash: pgweb: command not found</p>\n<p>I have followed these linux steps but not worked</p>\n<p>https://github.com/sosedoff/pgweb/wiki/Installation</p>\n<p>Any help will be appreciated alot</p>", ["<p>does not appear to be an issue with archives - you probably not extracting the archive in a right place or not extracting it at all. try to download the release archive manually and run <code>unzip</code> on the file (dont move stuff around just yet). you should be able to see and execute the binary. after that is working you can move pgweb to any directly that's part of <code>PATH</code> env var so you can run <code>pgweb</code> without specifying the full path. </p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/485", "title": "InsecureSkipVerify for self signed certificates", "status": "open", "labels": [], "priority": null, "description": ["<p>In order to use self signed certificates it would be great to set this with a command line argument, for example --ssl-skipverify</p>", ["<p>i dont remember all the options, but you can add <code>?sslmode=disable</code> to your connection string to skip any verification.\nis that what you're looking for ?</p>", "<p>No, I need the SNI-header of the connection, but I also want to use a self-signed one, lib/pq can do this perfectly, pgweb just needs to pass this parameter</p>", "<p>ok, i'll take a look. if you have a PR - send it over as well, would be helpful. </p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/484", "title": "pgweb -D like pgcli?", "status": "closed", "labels": [], "priority": null, "description": ["<p>Hello there,</p>\n<p>can pgweb connect to to DSN in a configuration file?</p>", []]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/483", "title": "Resize or toggle height of result", "status": "open", "labels": [], "priority": null, "description": ["<p>Currently the result pane taking up quite a fair bit of space and in fact most of the time we focusing on the query.</p>\n<p>Perhaps to feature to allow change of height or close it until next query runs.</p>\n<p>Oh, btw, I did noticed there's no time taken in the results pane.</p>\n<p>Would be great add-on for those who debugging queries and comparing the time taken to run those queries.</p>\n<p>Thanks!</p>", []]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/482", "title": "Autoselect query block for execution", "status": "open", "labels": [], "priority": null, "description": ["<p>Hi, thanks for creating such helpful tool.</p>\n<p>One of the features I'd like to see is the ability to auto select query block to execute.</p>\n<p>Example:\n```sql\nSELECT something FROM table\nLEFT JOIN table2 ON ....</p>\n<p>UPDATE table SET xx=1 WHERE id=1\n```</p>\n<p>Noticed above we have 2 queries but there's a few empty lines in between.</p>\n<p>When the cursor is on SELECT and press Cmd+Enter, it should run the SELECT query only, not all the queries.</p>\n<p>This will improve our productivity.</p>\n<p>Thanks in advance.</p>", ["<p>Hey, thanks for the feedback! I also found myself wanting something like this so there's a big chance a feature like it is going to make it into the next release. </p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/481", "title": "Error: pq: Unsupported startup parameter: extra_float_digits", "status": "open", "labels": [], "priority": null, "description": ["<p>Hi,</p>\n<p>I'm trying to connect to a postgres db that's behind PGBounce. It appears that the <code>extra_float_digits</code> is incompatible PGBounce https://github.com/Athou/commafeed/issues/559 . Unfortunately, I don't have control over the configs for instance PGBounce so I cannot use the <code>ignore_startup_parameters</code> fix.</p>\n<p>Is it possible for me to use <code>pgweb</code> to connect to this database?</p>\n<p>Error message:</p>\n<p><code>$ pgweb --readonly --url \"postgresql://[redacted]?sslmode=disable\"\nPgweb v0.11.6 (git: 3e4e9c30c947ce1384c49e4257c9a3cc9dc97876) (go: go1.13.7)\nConnecting to server...\nError: pq: Unsupported startup parameter: extra_float_digits</code>\nSee also: https://github.com/lib/pq/issues/475</p>", []]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/480", "title": "Error: pq: schema \"dbms_alert\" does not exist", "status": "open", "labels": [], "priority": null, "description": ["<p>```</p>\n<blockquote>\n<p>docker run -p 8082:8081 -e DATABASE_URL='postgres://xxxxx:xxxxxx@xxxxx.xxxxx.com:5444/xxxxx?sslmode=disable' sosedoff/pgweb\nPgweb v0.11.6 (git: 3e4e9c30c947ce1384c49e4257c9a3cc9dc97876) (go: go1.13.7)\nConnecting to server...\nConnected to<br />\nChecking database objects...\nError: pq: schema \"dbms_alert\" does not exist\n```</p>\n</blockquote>\n<p>When I launch without DATABASE_URL and then login to the same db\n<code>http://localhost:8081/api/objects</code> responds with:\n<code>{\"error\":\"pq: schema \\\"dbms_alert\\\" does not exist\",\"status\":400}</code></p>\n<p>My other database tool is Intellij IDEA.\nI don't see <code>dbms_alert</code> in any part of the db object browser in IDEA.</p>", ["<p>No idea why, maybe some permissions error? You can see the queries used in API endpoints here: https://github.com/sosedoff/pgweb/blob/master/pkg/statements/sql.go#L130 </p>\n<p>Can you run the query and report back what you find?</p>", "<p><code>[2020-08-03 21:04:39] [3F000] ERROR: schema \"dbms_alert\" does not exist</code></p>\n<blockquote>\n<p>No idea why, maybe some permissions error? You can see the queries used in API endpoints here: https://github.com/sosedoff/pgweb/blob/master/pkg/statements/sql.go#L130</p>\n<p>Can you run the query and report back what you find?</p>\n</blockquote>", "<p><code>select * from pg_catalog.pg_namespace where nspname = 'dbms_alert';</code>\nreturns one row</p>", "<p><code>select count(*) from pg_catalog.pg_namespace;</code> returns 38\nbut IDEA only shows me one. I am assuming its the only schema the user actually has permissions to see.</p>", "<p><code>select has_schema_privilege('dbms_alert', 'USAGE');</code>\nthrows error\n<code>[3F000] ERROR: schema \"dbms_alert\" does not exist</code></p>", "<p>looks like something is up with your permissions and i've not seen it before. what pg service are you using? </p>", "<p>https://github.com/sosedoff/pgweb/issues/222 is related</p>\n<p>IDEA is able to ignore this in its db object browser</p>\n<p>This is an enterprise postgres service managed by a whole other team.</p>\n<p>How do I find out what pg service I am using?</p>", "<p>i don't know. you can check the pg version in IDEA somehow but i doubt it would have anything useful in the version string.\nor you can guess from the host dns name. </p>", "<p><code>SELECT version();</code>\nreturns\n<code>EnterpriseDB 9.6.17.24 on x86_64-pc-linux-gnu, compiled by gcc (GCC) 4.4.7 20120313 (Red Hat 4.4.7-23), 64-bit</code></p>", "<p>My recommendation is to try to come up with a way to gracefully interpret a <code>3F000</code> error on <code>has_schema_privilege</code> as <code>false</code>.\nOr maybe something along these lines: https://github.com/metabase/metabase/issues/10139\nEdit: That one is an open issue as well... sigh \u00af\\_(\u30c4)_/\u00af</p>", "<p>I see now that this is likely an issue exclusive to EnterpriseDB and not to Postgres itself. Apparently our \"Postgres\" service is more than/less than just plain old Postgres.\nsigh</p>", "<p>Would be nice if pgweb could work around this so that EnterpriseDB would be handled despite such a small surface wrinkle, but I guess thats up to you guys or anyone who cared to fork pgweb for that purpose.</p>", "<p>i mean if you have a workaround - feel free to send PR and i can incorporate the changes if they're not interfering with regular postgres stuff. otherwise i dont have a lot of free time to experiment with this integration (not i have access to enterprisedb) </p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/479", "title": "Do not show other databases if session is locked", "status": "closed", "labels": [], "priority": null, "description": ["<p>Fixes: #470</p>", ["<p>@sosedoff The build fails, cause my branch can't access secrets. I guess the check should only run for branches of this repository and not forks...</p>", "<p>Yeah you're right, i will fix it. Dont worry about failures in github actions</p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/478", "title": "feat(kubernetes): Added kubernetes chart", "status": "closed", "labels": ["not-ready"], "priority": null, "description": ["<h2>Helm Chart</h2>\n<p>Helm in the package manager for Kubernetes.</p>\n<p>Usage:</p>\n<p>```</p>\n<h1>Install helm-git plugin.</h1>\n<p>helm plugin install https://github.com/aslafy-z/helm-git --version master</p>\n<h1>Add helm repository</h1>\n<p>helm repo add pgweb git+https://github.com/sosedoff/pgweb@contrib/helm</p>\n<h1>Install pgweb on your cluster.</h1>\n<p>helm install pgweb pgweb/pgweb --set databaseUrl=\"postgres://postgres:postgres@postgres:5432/postgres?sslmode=disable\"</p>\n<p>```</p>", ["<p>I appreciate the contribution, though im not a regular k8s user so i cant really comment on quality of the stuff you've submitted, looks alright to me. Are the example instructions in this PR the only steps necessary to get pgweb going? Might be useful to have more expanded usage. </p>", "<blockquote>\n<p>I appreciate the contribution, though im not a regular k8s user so i cant really comment on quality of the stuff you've submitted, looks alright to me. Are the example instructions in this PR the only steps necessary to get pgweb going? Might be useful to have more expanded usage.</p>\n</blockquote>\n<p>You're right. I will update <code>Readme.md</code>  with more details of my use case on GCP.</p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/477", "title": "Query tab: extranous line after service restart", "status": "open", "labels": [], "priority": null, "description": ["<p>I have pgweb constantly running in the background (as user-service managed by systemd), and the browser tab is pinned in Firefox. Recently I've upgraded from 0.10.0 (or 0.11.0) to the latestest 0.11.6 version. I've noticed that the query tab <em>sometimes</em> has an extra line or two the textarea:</p>\n<p><img alt=\"image\" src=\"https://user-images.githubusercontent.com/327411/86219360-5f770680-bb82-11ea-9d57-859f71932d55.png\" /></p>\n<p>(reenactment, the original query had about 40 lines)</p>\n<p>I'm pretty sure, I left the last query to be just <code>select 1</code>. Today I've found fragments of another query appended to that (I've pasted the <code>when</code> clause yesterday sometime prior to creating the <code>select 1</code> query).</p>\n<p>This doesn't always happen though, and I cannot reproduce it if I want to. Clearing the browser cache and storage did not help either (after deleting the local storage, it didn't happen for some days, now it's back). The FF DevTools don't show anything interesting...</p>\n<p>Any chance you've encountered this before?</p>", []]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/476", "title": "[Feature Request] Ability to use AWS RDS IAM authentication for connecting to database", "status": "closed", "labels": [], "priority": null, "description": ["<p>A very helpful feature would be the ability to connect to a database via AWS RDS IAM authentication. Currently the only workaround is custom shell scripting to implement <code>generate_db_auth_token</code> with IAM credentials then pipe that into a connection url as a pgweb argument.</p>", ["<p>Whats wrong with the approach you've described? I've been using shell+awscli scripting to access RDS databases and it seems to work fine. There was a batch of new features related to resource discovery in #391, but i've paused all the work on that branch for quite some time (got work to do). </p>\n<p>The scope of IAM auth is also a bit outside of pgweb's concern, in addition to edge cases like expiring auth tokens. You're free to fork the project and add the missing functionality if you'd like, i double i will implement anything like that in near future. </p>", "<p>Thanks for referring to the pull request, I'll go from there with any new work on this functionality.</p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/475", "title": "Errors you may encounter when upgrading the library", "status": "open", "labels": [], "priority": null, "description": ["<p>(The purpose of this report is to alert <code>sosedoff/pgweb</code> to the possible problems when <code>sosedoff/pgweb</code> try to upgrade the following dependencies)</p>\n<h2>An error will happen when upgrading library <em>gin-gonic/gin</em>:</h2>\n<h3>github.com/gin-gonic/gin</h3>\n<p>-Latest Version: v1.6.3   (Latest commit  6a8b8b6 on 3 May)\n-Where did you use it: \nhttps://github.com/sosedoff/pgweb/search?l=Go&amp;q=gin-gonic%2Fgin \n-Detail: </p>\n<blockquote>\n<p><a href=\"https://github.com/gin-gonic/gin/blob/v1.6.3/go.mod#L7\">github.com/gin-gonic/gin/go.mod</a>\n<code>module github.com/gin-gonic/gin\ngo 1.13\nrequire (\n    github.com/gin-contrib/sse v0.1.0\n    github.com/go-playground/validator/v10 v10.2.0\n    \u2026\n)</code>\n<a href=\"https://github.com/gin-gonic/gin/blob/v1.6.3/binding/default_validator.go#L11\">github.com/gin-gonic/gin/binding/default_validator.go</a>\n<code>package binding\nimport (\n    \"reflect\"\n    \"sync\"\n    \"github.com/go-playground/validator/v10\"\n)</code>\nThis problem was introduced since <strong><em>gin-gonic/gin v1.6.0</em></strong> . Now you used the version <a href=\"https://github.com/sosedoff/pgweb/blob/master/Gopkg.lock#L55\">v1.3.0</a> . If you try to upgrade  <strong>gin-gonic/gin</strong> to version <strong>v1.6.0</strong> and <strong>above</strong>, you will get an error--- <strong><em>no package exists at \"github.com/go-playground/validator/v10\"</em></strong></p>\n</blockquote>\n<h2>I investigated the libraries  (<strong>gin-gonic/gin &gt;= v1.6.0</strong>)  release information and found the root casue of this issue is that----</h2>\n<ol>\n<li>\n<p>These dependencies all added <a href=\"https://github.com/golang/go/wiki/Modules\">Go modules</a> in the recent versions.</p>\n</li>\n<li>\n<p>They all comply with the specification of \"Releasing Modules for v2 or higher\" available in the Modules documentation. Quoting the specification:</p>\n<blockquote>\n<p>A package that has migrated to Go Modules <em>must</em> include the major version in the import path to reference any v2+ modules. For example,  Repo github.com/my/module migrated to Modules on version v3.x.y.  Then this repo should declare its module path with MAJOR version suffix \"/v3\"  (e.g., module <code>github.com/my/module/v3</code>), and its downstream project should use <code>\"github.com/my/module/v3/mypkg\"</code> to import this repo\u2019s package.</p>\n</blockquote>\n</li>\n<li>\n<p>This \"github.com/my/module/v3/mypkg\" is not the <code>physical path</code>. So earlier versions of Go (including those that don't have minimal module awareness) plus all tooling (like dep, glide, govendor, etc) don't have <code>minimal module awareness</code> as of now and therefore don't handle import paths correctly See <a href=\"https://github.com/golang/dep/issues/1962\">golang/dep#1962</a>, <a href=\"https://github.com/golang/dep/issues/2139\">golang/dep#2139</a>.</p>\n<blockquote>\n<p>Note: creating a new branch is not required. If instead you have been previously releasing on master and would prefer to tag v3.0.0 on master, that is a viable option. (However, be aware that introducing an incompatible API change in master can cause issues for non-modules users who issue a go get -u given the go tool is not aware of semver prior to Go 1.11 or when module mode is not enabled in Go 1.11+).\nPre-existing dependency management solutions such as dep currently can have problems consuming a v2+ module created in this way. See for example dep#1962.\nhttps://github.com/golang/go/wiki/Modules#releasing-modules-v2-or-higher</p>\n</blockquote>\n</li>\n</ol>\n<h2>Solution</h2>\n<h3>1. Migrate to Go Modules.</h3>\n<p>Go Modules is the general trend of ecosystem, if you want a better upgrade package experience, migrating to Go Modules is a good choice.</p>\n<p>Migrate to modules will be accompanied by the introduction of virtual paths(It was discussed above).</p>\n<blockquote>\n<p>This \"github.com/my/module/v3/mypkg\" is not the <code>physical path</code>. So Go versions older than 1.9.7 and 1.10.3 plus all third-party dependency management tools (like dep, glide, govendor, etc) don't have <code>minimal module awareness</code> as of now and therefore don't handle import paths correctly.</p>\n</blockquote>\n<p>Then the downstream projects might be negatively affected in their building if they are module-unaware (Go versions older than 1.9.7 and 1.10.3; Or use third-party dependency management tools, such as: Dep, glide, govendor\u2026).</p>\n<h3>2. Maintaining v2+ libraries that use Go Modules in Vendor directories.</h3>\n<p>If <code>sosedoff/pgweb</code> want to keep using the dependency manage tools (like dep, glide, govendor, etc), and still want to upgrade the dependencies, can choose this fix strategy.\nManually download the dependencies into the vendor directory and do compatibility dispose(materialize the virtual path or delete the virtual part of the path). Avoid fetching the dependencies by virtual import paths. This may add some maintenance overhead compared to using modules.</p>\n<p>There is 1 module user downstream, such as leogsouza/meower\u2026)\nhttps://github.com/search?q=sosedoff%2Fpgweb+filename%3Ago.mod</p>\n<p>As the import paths have different meanings between the projects adopting module repos and the non-module repos, materialize the virtual path is a better way to solve the issue, while ensuring compatibility with downstream module users. A textbook example provided by repo <code>github.com/moby/moby</code> is here:\nhttps://github.com/moby/moby/blob/master/VENDORING.md\nhttps://github.com/moby/moby/blob/master/vendor.conf\nIn the vendor directory, <code>github.com/moby/moby</code> adds the <strong>/vN</strong> subdirectory in the corresponding dependencies.\n<strong>This will help more downstream module users to work well with your package.</strong></p>\n<h3>3. Request upstream to do compatibility processing.</h3>\n<p>The <code>gin-gonic/gin</code> have 2110 module-unaware users in github, such as: yogaagungk/assets-management, aduermael/dockerblog, gdevillele/calvados\u2026\nhttps://github.com/search?q=gin-gonic%2Fgin+filename%3Avendor.conf+filename%3Avendor.json+filename%3Aglide.toml+filename%3AGodep.toml+filename%3AGodep.json&amp;type=Code</p>\n<h2>Summary</h2>\n<p>You can make a choice when you meet this DM issues by balancing your own development schedules/mode against the affects on the downstream projects.</p>\n<p>For this issue, Solution 1 can maximize your benefits and with minimal impacts to your downstream projects the ecosystem. </p>\n<h2>References</h2>\n<ul>\n<li>https://github.com/golang/go/wiki/Modules#semantic-import-versioning</li>\n<li>https://golang.org/cmd/go/#hdr-Module_compatibility_and_semantic_versioning</li>\n<li>https://github.com/golang/go/wiki/Modules#releasing-modules-v2-or-higher</li>\n</ul>\n<p>Do you plan to upgrade the libraries in near future?\nHope this issue report can help you ^_^\nThank you very much for your attention.</p>\n<p>Best regards,\nKate</p>", ["<p>@sosedoff  @jc00ke  Could you help me review this issue? Thx :p</p>", "<p>Yeah i've tried to upgrade to go modules before and hit the same issue, though i didn't spend any time investigating into it.\nIm suspecting it has to do with all the dep quirks, and i think it would be easier to just nuke all deps and import modules, there aren't that many moving parts in the repo. </p>", "<p>@sosedoff  Thanks for your reply. This report is a warm prompt for you to prevent or combat this issue. Just let you know the problem if you upgrade this dependency in near future.</p>\n<p>Hope this can help you.\nThanks again.\nKate</p>", "<p>You hit the same issue when you upgrade to Modules? Could you tell me more details? :D?\n@sosedoff </p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/474", "title": "Add note to README about connecting over Unix domain sockets", "status": "closed", "labels": [], "priority": null, "description": ["", []]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/473", "title": "Support connecting over Unix Domain Sockets", "status": "closed", "labels": [], "priority": null, "description": ["<p>I'm a HUGE fan of <code>pgweb</code> so thank you for your hard work!</p>\n<p>It looks like <code>--url</code> tries to validate for a server running over a port\n<code>\u00bb pgweb --url=\"postgres://.direnv/postgres\"\nPgweb v0.11.6 (git: 3e4e9c30c947ce1384c49e4257c9a3cc9dc97876) (go: go1.13.7)\nError: Invalid URL. Valid format: postgres://user:password@host:port/db?sslmode=mode</code></p>\n<p>I've recently switched to <a href=\"https://jamey.thesharps.us/2019/05/29/per-project-postgres/\">per-project Postgres</a> over Unix Domain Socket and would love to be able to connect that way as well.</p>\n<p>I've tried variants of the <code>url</code> like <code>postgres:///absolute/path/to/.direnv/postgres</code> with no luck.</p>\n<p>Thanks!</p>", ["<p>Figured it out!</p>\n<p><code>\u00bb pgweb --url=\"postgres:///demo_dev?host=/absolute/path/to/demo/.direnv/postgres\"\nPgweb v0.11.6 (git: 3e4e9c30c947ce1384c49e4257c9a3cc9dc97876) (go: go1.13.7)\nConnecting to server...\nConnected to PostgreSQL 12.2\nChecking database objects...\nStarting server...\nTo view database open http://localhost:8081/ in browser</code></p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/472", "title": "[Feature Request] Ability to enlarge query area.", "status": "closed", "labels": [], "priority": null, "description": ["<p>The query area feels very small. I would sometimes like to expand it to be about half the vertical height of the screen when I am working on a query.</p>\n<p>Conceptual image: https://prnt.sc/stbvcl</p>", ["<p>Agreed -- @sosedoff an adjustable/draggable query pane would be very helpful to view an entire query.</p>", "<p>This is a duplicate of #118, which is sadly i dont have time to work on :(</p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/471", "title": "[Feature Request] Option to defer initClient() when connection URL is specified", "status": "open", "labels": [], "priority": null, "description": ["<p>If pgweb is started passing it a connection URL it immediately tries to open the connection to the server on startup and dies with exit code 1 if the server is not reachable.</p>\n<p>This makes it unsuitable for running it in Docker Compose alongside a Postgres container, unless I specify the connection details manually.</p>\n<p>I propose a new option to defer this function call to when the user actually starts interacting with the Web UI. If the server is not (yet) reachable it would be helpful to show an error in the UI instead of exiting.</p>", []]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/470", "title": "Do not allow searching other dbs if session is locked", "status": "closed", "labels": [], "priority": null, "description": ["<p>I would just update the GetDatabases Function to not return a list of all databases if the session is locked.\nhttps://github.com/sosedoff/pgweb/blob/61fc975ac9f47097711876971152181eb0d728a7/pkg/api/api.go#L287</p>\n<p>If you're ok with that, I can create a PR</p>", ["<p>Makes sense, please submit a PR.</p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/469", "title": "Panic during time marshalling", "status": "open", "labels": [], "priority": null, "description": ["<p><code>json: error calling MarshalJSON for type time.Time: Time.MarshalJSON: year outside of range [0,9999]\n/Users/sosedoff/go/src/github.com/sosedoff/pgweb/vendor/github.com/gin-gonic/gin/render/json.go:46 (0x15268d3)\n    JSON.Render: panic(err)\n/Users/sosedoff/go/src/github.com/sosedoff/pgweb/vendor/github.com/gin-gonic/gin/context.go:713 (0x152c53e)\n    (*Context).Render: if err := r.Render(c.Writer); err != nil {\n/Users/sosedoff/go/src/github.com/sosedoff/pgweb/vendor/github.com/gin-gonic/gin/context.go:756 (0x160d2cc)\n    (*Context).JSON: c.Render(code, render.JSON{Data: obj})\n/Users/sosedoff/go/src/github.com/sosedoff/pgweb/pkg/api/api.go:461 (0x160d26b)\n    HandleQuery: c.JSON(200, result)\n/Users/sosedoff/go/src/github.com/sosedoff/pgweb/pkg/api/api.go:271 (0x160b858)\n    RunQuery: HandleQuery(query, c)\n/Users/sosedoff/go/src/github.com/sosedoff/pgweb/vendor/github.com/gin-gonic/gin/context.go:108 (0x15290e3)\n    (*Context).Next: c.handlers[c.index](c)\n/Users/sosedoff/go/src/github.com/sosedoff/pgweb/pkg/api/middleware.go:30 (0x1610cdd)\n    dbCheckMiddleware.func1: c.Next()\n/Users/sosedoff/go/src/github.com/sosedoff/pgweb/vendor/github.com/gin-gonic/gin/context.go:108 (0x15290e3)\n    (*Context).Next: c.handlers[c.index](c)\n/Users/sosedoff/go/src/github.com/sosedoff/pgweb/vendor/github.com/gin-gonic/gin/recovery.go:48 (0x153a723)\n    RecoveryWithWriter.func1: c.Next()\n/Users/sosedoff/go/src/github.com/sosedoff/pgweb/vendor/github.com/gin-gonic/gin/context.go:108 (0x15290e3)\n    (*Context).Next: c.handlers[c.index](c)\n/Users/sosedoff/go/src/github.com/sosedoff/pgweb/vendor/github.com/gin-gonic/gin/logger.go:84 (0x1539ade)\n    LoggerWithWriter.func1: c.Next()\n/Users/sosedoff/go/src/github.com/sosedoff/pgweb/vendor/github.com/gin-gonic/gin/context.go:108 (0x15290e3)\n    (*Context).Next: c.handlers[c.index](c)\n/Users/sosedoff/go/src/github.com/sosedoff/pgweb/vendor/github.com/gin-gonic/gin/gin.go:361 (0x1531b36)\n    (*Engine).handleHTTPRequest: c.Next()\n/Users/sosedoff/go/src/github.com/sosedoff/pgweb/vendor/github.com/gin-gonic/gin/gin.go:326 (0x1531373)\n    (*Engine).ServeHTTP: engine.handleHTTPRequest(c)\n/usr/local/Cellar/go/1.13.7/libexec/src/net/http/server.go:2802 (0x12e2db3)\n/usr/local/Cellar/go/1.13.7/libexec/src/net/http/server.go:1890 (0x12de654)\n/usr/local/Cellar/go/1.13.7/libexec/src/runtime/asm_amd64.s:1357 (0x105d050)</code></p>", []]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/468", "title": "Create go.yml", "status": "closed", "labels": [], "priority": null, "description": ["", ["<p>Closing due to missing PR details. I dont know what's the purpose of this and why its needed, there's already a working CI system in place which i dont plan on changing for now. </p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/467", "title": "Delete CONTRIBUTING.md", "status": "closed", "labels": [], "priority": null, "description": ["", []]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/466", "title": "Delete CONTRIBUTING.md", "status": "closed", "labels": [], "priority": null, "description": ["", ["<p>What is this?</p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/465", "title": "Pgweb", "status": "closed", "labels": [], "priority": null, "description": ["", []]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/464", "title": "pre-build pgweb on Debian 9 can't find css and js files over nginx proxy", "status": "closed", "labels": [], "priority": null, "description": ["<p>The nginx proxy (https) for pgweb running on 8081 port works, but can't find css and js files that index page needs. so the site not workable. Try to set a root in the nginx configure and put static folder (from src) under the root, missing css, js files solved, but the index page is blank. Can you help me for this issue? Thanks.</p>", ["<p>Can you provide any configuration and pgweb startup flag? Also, which pgweb version are you running? </p>", "<p>Pgweb v0.9.7 (git: 4833a76b05338e8001eabfda632d49850cc68d25)</p>\n<p>installed at /usr/local/bin/pgweb</p>\n<p>/usr/local/bin/pgweb --bind=0.0.0.0 --listen=8081</p>\n<p>nginx configure:</p>\n<p>server {\n    listen [::]:8083 ssl;\n    listen 8083 ssl;</p>\n<pre><code>server_name www.mysite.com;\n\nssl_certificate /etc/ssl/certs/bundle.crt;\nssl_certificate_key /etc/ssl/private/site.key;\n\nssl_session_cache shared:SSL:10m;\nssl_session_timeout 10m;\n\nlocation = / {\n    proxy_pass http://127.0.0.1:8081;    \n    proxy_set_header X-Real-IP $remote_addr;\n    proxy_set_header Host $host;\n    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n}\n</code></pre>\n<p>}</p>", "<p>Try the latest version 0.11.6. 0.9.7 is way too old (from apr 2017) </p>", "<p>Tried the latest version 0.11.6 with the nginx, the same result as version 0.9.7. Switched to Apache2 2.4 with configure (proxy part) with ssl:</p>\n<p>ProxyPreserveHost On\nProxyPass / http://127.0.0.1:8081/\nProxyPassReverse / http://127.0.0.1:8081/</p>\n<p>It works!</p>", "<p>I think your issue is strictly nginx-related. If you're able to see the pgweb login screen but not the assets you should check your nginx/pgweb log to see which requests are getting proxied. </p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/463", "title": "Do not terminate if local authentication failed on start", "status": "closed", "labels": [], "priority": null, "description": ["", []]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/462", "title": "Waiting for the port being available when runing inside a docker container", "status": "open", "labels": [], "priority": null, "description": ["<p>When running pgweb with postgres via <code>docker-compose</code>, pgweb can in some cases start before the database port is available which causes the container to exit with <code>connection refused</code>.</p>\n<p>There are issues #158 and #216, but even though it now \"happens\" to work, the race condition is still there, because there's no mechanism here to actually wait for the port to be available, The <code>depends_on</code> option unfortunately doesn't do that either (see https://docs.docker.com/compose/compose-file/#depends_on).</p>\n<p>In my case, pgweb always starts before the port is ready when postgres is run for the first time, with uninitialized data directory (I also have an init script to create the schema).</p>\n<p>One possible solution I see is to create an entrypoint script which'd use <a href=\"https://github.com/vishnubob/wait-for-it\">wait-for-it.sh</a>. This way, the timeout can be configured from within <code>docker-compose.yml</code> directly via the <code>WAITFORIT_TIMEOUT</code> variable. However that script doesn't parse URIs...</p>", ["<p>For anyone with the same problem, as a workaround I currently use a separate image and <a href=\"https://github.com/vishnubob/wait-for-it\">wait-for-it.sh</a>. Here's my Dockerfile:\n```\nFROM sosedoff/pgweb</p>\n<p>RUN apk add --no-cache bash</p>\n<p>COPY wait-for-it.sh entrypoint.sh ./</p>\n<p>ENTRYPOINT [\"./entrypoint.sh\"]\nCMD [\"/usr/bin/pgweb\", \"--bind=0.0.0.0\", \"--listen=8081\"]\n```</p>\n<p>And <code>entrypoint.sh</code>:\n```</p>\n<h1>!/bin/sh</h1>\n<p>if [ -n \"$DATABASE_URL\" ]; then\n  db_host=\"${DATABASE_URL%/<em>}\"\n  db_host=\"${db_host##</em>[/@]}\"\nelse\n  db_host=\"127.0.0.1:5432\"\nfi</p>\n<p>./wait-for-it.sh \"$db_host\"</p>\n<p>\"$@\"\n```</p>\n<p>EDIT: This is not enough, sometimes I get this error:\n<code>Error: pq: the database system is starting up</code>\nI guess the only workaround for now is to use the <code>restart</code> option for docker-compose</p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/461", "title": "Handle server connection message on Windows", "status": "closed", "labels": [], "priority": null, "description": ["<p>Windows can report a slightly different message depending on the firewall configuration. This modification catches that message.</p>\n<p>macOS:\n<code>Pgweb v0.11.6 (git: 3e4e9c30c947ce1384c49e4257c9a3cc9dc97876) (go: go1.13.7)\nConnecting to server...\nError: dial tcp 127.0.0.1:5432: connect: connection refused\nStarting server...</code></p>\n<p>Windows:\n<code>Pgweb v0.11.6 (git: 3e4e9c30c947ce1384c49e4257c9a3cc9dc97876) (go: go1.13.7)\nConnecting to server...\nError: dial tcp [::1]:5432: connectex: No connection could be made because the target machine actively refused it.</code></p>", ["<p>you could use a regular expression to match all kinds of error messages</p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/460", "title": "REQUEST: Add docker support", "status": "closed", "labels": [], "priority": null, "description": ["<p>Please provide a way to pull and run pgweb image by docker.</p>", ["<p>https://github.com/sosedoff/pgweb/wiki/Installation#docker\nhttps://github.com/sosedoff/pgweb/wiki/Docker</p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/459", "title": "Run CI on 1.14", "status": "closed", "labels": [], "priority": null, "description": ["", []]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/458", "title": "Query does not work behind web application firewall", "status": "closed", "labels": [], "priority": null, "description": ["<p>I am facing with this issue when I try to run a query on Mindsphere platform. For example this query works:\n\"SELECT *  FROM blabla\" , but if I use \"where\" clause in my query,  it doesn't work. If I understand correctly, there is a web application firewall behind and it blocks my query to prevent sql injection attacks. I get 461 http status from backend.</p>\n<p>So, maybe we encode this query before sending to backend and decode once received it. </p>\n<p><img alt=\"image\" src=\"https://user-images.githubusercontent.com/3417234/76954903-38256200-6922-11ea-936e-74768372c872.png\" /></p>", ["<p>I viewed the source and it already tries to decode base64 string but on UI side query is not sent as base64 encoded</p>", "<p>I don't think this has anything to do with pgweb. If you're getting HTTP 461 then your provider or something in between is doing the filtering. Pgweb itself will never return such a code. </p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/457", "title": "Show results row context menu on custom query results", "status": "closed", "labels": [], "priority": null, "description": ["<p>Fixes #456</p>", []]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/456", "title": "Add context menu for custom query results", "status": "closed", "labels": [], "priority": null, "description": ["<p>There should be a context menu with an option to copy the cell's value.</p>", []]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/455", "title": "Remove double click action on cell", "status": "closed", "labels": [], "priority": null, "description": ["<p>Removes the confusing behavior when double clicking on the cell. Textarea was for copying data and not for editing like most people assumed. </p>", []]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/454", "title": "Testing github action workflow", "status": "closed", "labels": [], "priority": null, "description": ["", []]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/453", "title": "Build and publish binaries for git commits", "status": "closed", "labels": [], "priority": null, "description": ["<p>Would help with testing of new features / or unofficial releases</p>", []]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/452", "title": "Extended SSL options", "status": "closed", "labels": [], "priority": null, "description": ["<p>A few more options to supplement  the <code>--ssl</code> flag:</p>\n<ul>\n<li><code>--ssl-cert</code> - Path to client certificate file</li>\n<li><code>--ssl-key</code> - Path to the client certificate key file</li>\n<li><code>--ssl-root-cert</code> - Path to the certificate authority file</li>\n</ul>", []]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/451", "title": "Remove cell textarea on double click", "status": "closed", "labels": [], "priority": null, "description": ["<p>Most people think there's a way to save the column contents via textarea, however the saving does not actually work, and it's confusing. Field copy is available via context menu (right click)</p>", []]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/450", "title": "Include go version into info response", "status": "closed", "labels": [], "priority": null, "description": ["", []]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/449", "title": "Autocomplete on all database objects", "status": "closed", "labels": [], "priority": null, "description": ["<p>This will pull tables, views and materialized views into autocompletion dropdown.</p>\n<p><img width=\"475\" alt=\"Screenshot 2019-12-04 19 38 51\" src=\"https://user-images.githubusercontent.com/71051/70196261-cb1cf200-16cd-11ea-8f35-bffe7869851a.png\"></p>", []]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/448", "title": "Fix for visual glitch when schema name wider than 250px", "status": "closed", "labels": [], "priority": null, "description": ["<p>Hi, appreciate this is something of an edge case, but where I work we break large quantities of public statistical data into different schemas in a single Postgres instance. Some of these schema names are long, as they list the organisation we got the data from and what it is - eg <code>ons_uk_balance_of_trade_payments_quarterly</code></p>\n<p>This unfortunately causes a minor visual glitch in pgweb: the schema name drops onto the next line and obscures the icon, like this:</p>\n<p><img width=\"255\" alt=\"Screenshot 2019-12-04 at 14 31 38\" src=\"https://user-images.githubusercontent.com/161962/70153805-6ea6dc00-16a7-11ea-8a24-73a989c38525.png\"></p>\n<p>This change just adds a <code>white-space: nowrap</code> to the schema name, which is the same approach taken in the table names to stop this problem. With the patch applied it loks like this:</p>\n<p><img width=\"281\" alt=\"Screenshot 2019-12-04 at 14 23 14\" src=\"https://user-images.githubusercontent.com/161962/70153906-939b4f00-16a7-11ea-8aae-bed732a7cae0.png\"></p>", ["<p>Does your change allow to scroll the list horizontally? </p>", "<p>It does. Do you want me to disable that?</p>", "<p>No, its all good. Just add the missing semicolon in css file and should be\ngood to go.</p>\n<p>On Wed, Dec 4, 2019 at 11:47 AM Jim Smith <a href=\"&#109;&#97;&#105;&#108;&#116;&#111;&#58;&#110;&#111;&#116;&#105;&#102;&#105;&#99;&#97;&#116;&#105;&#111;&#110;&#115;&#64;&#103;&#105;&#116;&#104;&#117;&#98;&#46;&#99;&#111;&#109;\">&#110;&#111;&#116;&#105;&#102;&#105;&#99;&#97;&#116;&#105;&#111;&#110;&#115;&#64;&#103;&#105;&#116;&#104;&#117;&#98;&#46;&#99;&#111;&#109;</a> wrote:</p>\n<blockquote>\n<p>It does. Do you want me to disable that?</p>\n<p>\u2014\nYou are receiving this because you commented.\nReply to this email directly, view it on GitHub\n<a href=\"https://github.com/sosedoff/pgweb/pull/448?email_source=notifications&amp;email_token=AAARLC7KGEN7S3ORKQVL3ULQW7ULLA5CNFSM4JVKCMNKYY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOEF546IY#issuecomment-561762083\">https://github.com/sosedoff/pgweb/pull/448?email_source=notifications&amp;email_token=AAARLC7KGEN7S3ORKQVL3ULQW7ULLA5CNFSM4JVKCMNKYY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOEF546IY#issuecomment-561762083</a>,\nor unsubscribe\n<a href=\"https://github.com/notifications/unsubscribe-auth/AAARLC6ZJSBNHQYXH2O3ZWLQW7ULLANCNFSM4JVKCMNA\">https://github.com/notifications/unsubscribe-auth/AAARLC6ZJSBNHQYXH2O3ZWLQW7ULLANCNFSM4JVKCMNA</a>\n.\n</p>\n</blockquote>\n<p>-- \nDan Sosedoff\ndan.sosedoff@gmail.com\n312.576.1330</p>", "<p>Sure. I\u2019ll get that updated in the next hour</p>", "<p>Done</p>", "<p>\ud83d\ude47 </p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/447", "title": "Include go version into builds", "status": "closed", "labels": [], "priority": null, "description": ["", []]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/445", "title": "SSH key handling update", "status": "closed", "labels": [], "priority": null, "description": ["<ul>\n<li>return error if provided ssh key does not exist</li>\n<li>crypto/ssh dependency update</li>\n<li>ssh configuration screen update</li>\n<li>support for encrypted ssh keys (with password input)</li>\n</ul>", []]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/444", "title": "Does it work in Windows10?", "status": "closed", "labels": [], "priority": null, "description": ["<p>Hi, </p>\n<p>cool project!</p>\n<ul>\n<li>Is it working in Windows 10?\n  Tested the binary of 0.11.4 release</li>\n</ul>\n<p>I followed the procedure described <a href=\"https://github.com/sosedoff/pgweb/wiki/Installation#windows\">here</a>, but didn't work. A cmd-terminal appears but closes immediately. Does that mean that a server is running or simply a bug?</p>\n<p><em>Feedback</em> It would be cool if there is <a href=\"https://chocolatey.org/\">chocolatey</a> recipe i.e. chocolatey == brew for Windows.</p>", ["<p>Afaik, it should work fine, however, if your terminal window gets closed fast you can start pgweb with <code>./pgweb.exe</code> and see what it prints</p>", "<p>Thanks!</p>\n<p><code>.\\pgweb_windows_amd64.exe\nPgweb v0.11.4 (git: 059764d015d85a801030f9591b63dc5a8f93521c)\nConnecting to server...\nError: pq: role \"hostname\\username\" does not exist</code></p>\n<p>I believe the error is related to the fact that I don't have a table/schema called <code>username</code>. I have one called <code>template1</code>.</p>\n<p>Do you know how can I change that?</p>", "<p>You can provide your database credentials, try running <code>pgweb --help</code> to\nsee all the options.\nI guess i'll need to fix the initial start to work correctly on windows\ntoo.</p>\n<p>On Mon, Oct 21, 2019 at 9:41 PM Victor Escorcia Castillo <a href=\"&#109;&#97;&#105;&#108;&#116;&#111;&#58;&#10;&#110;&#111;&#116;&#105;&#102;&#105;&#99;&#97;&#116;&#105;&#111;&#110;&#115;&#64;&#103;&#105;&#116;&#104;&#117;&#98;&#46;&#99;&#111;&#109;\">&#10;&#110;&#111;&#116;&#105;&#102;&#105;&#99;&#97;&#116;&#105;&#111;&#110;&#115;&#64;&#103;&#105;&#116;&#104;&#117;&#98;&#46;&#99;&#111;&#109;</a> wrote:</p>\n<blockquote>\n<p>.\\pgweb_windows_amd64.exe\nPgweb v0.11.4 (git: 059764d015d85a801030f9591b63dc5a8f93521c)\nConnecting to server...\nError: pq: role \"hostname\\username\" does not exist</p>\n<p>I believe the error is related to the fact that I don't have a\ntable/scheme called username.</p>\n<p>Do you know how can I change that?</p>\n<p>\u2014\nYou are receiving this because you commented.\nReply to this email directly, view it on GitHub\n<a href=\"https://github.com/sosedoff/pgweb/issues/444?email_source=notifications&amp;email_token=AAARLCYUBIBEULTIDC7T4T3QP2ABNA5CNFSM4JDER5S2YY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOEB4QNGQ#issuecomment-544802458\">https://github.com/sosedoff/pgweb/issues/444?email_source=notifications&amp;email_token=AAARLCYUBIBEULTIDC7T4T3QP2ABNA5CNFSM4JDER5S2YY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOEB4QNGQ#issuecomment-544802458</a>,\nor unsubscribe\n<a href=\"https://github.com/notifications/unsubscribe-auth/AAARLC6PGPBPOAZDB3PJJZ3QP2ABNANCNFSM4JDER5SQ\">https://github.com/notifications/unsubscribe-auth/AAARLC6PGPBPOAZDB3PJJZ3QP2ABNANCNFSM4JDER5SQ</a>\n.\n</p>\n</blockquote>\n<p>-- \nDan Sosedoff\ndan.sosedoff@gmail.com\n312.576.1330</p>", "<p>Wow hyper prompt reply \ud83d\udcaf . I will StackOverflow it and update u later this week.</p>\n<p>Honestly, I did something non-standard when I created the database.</p>\n<ul>\n<li>\n<p>I'm using posgresql installed via a <a href=\"https://docs.conda.io/projects/conda/en/latest/index.html\">conda environment</a></p>\n</li>\n<li>\n<p>Then setup a database with <code>initdb -D data</code></p>\n</li>\n</ul>\n<p>The fact that there is not the <code>username</code> table/schema may be related to that. However, pgadmin managed to connect after adding a bit of info.</p>", "<p>Closing as I could connect without troubles via Powershell with</p>\n<p><code>.\\pgweb_windows_amd64.exe /user username /db template1</code></p>\n<p>I guess that the issue comes for the reasons listed before.</p>\n<p><em>Minor note</em>. Adding <code>\\db template1</code> isn't enough. In my case, I had to add the role or user as well.</p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/443", "title": "Add SQL keyword autocompletion", "status": "closed", "labels": [], "priority": null, "description": ["<p>Hi!\nThis pr resolves issue #285.</p>", ["<p>\ud83d\udc4doverall, just needed to make a few minor styling changes</p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/442", "title": "Code formatting and cleanup", "status": "closed", "labels": [], "priority": null, "description": ["", []]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/441", "title": "Drop unsupported pg_dump options from connection string", "status": "closed", "labels": [], "priority": null, "description": ["<p>Fixes #433 </p>", []]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/440", "title": "Show error message when API is not available", "status": "open", "labels": [], "priority": null, "description": ["<p>When pgweb is terminated any new request (or a custom query) will never seem to finish, however the backend is gone and we should print out an error message. </p>", []]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/439", "title": "Upgrade alpine to 3.10 - fix SQL export on up-to-date Postgresql", "status": "closed", "labels": [], "priority": null, "description": ["<p>On up-to-date Postgresql (11), the current version of pgweb can't SQL export because of a version mismatch : </p>\n<blockquote>\n<pre><code>   Because pg_dump is used to transfer data to newer versions of PostgreSQL, the output of pg_dump can be expected to load\n   into PostgreSQL server versions newer than pg_dump's version.  pg_dump can also dump from PostgreSQL servers older than its\n   own version. (Currently, servers back to version 8.0 are supported.) However, pg_dump cannot dump from PostgreSQL servers\n   newer than its own major version; it will refuse to even try, rather than risk making an invalid dump. Also, it is not\n   guaranteed that pg_dump's output can be loaded into a server of an older major version \u2014 not even if the dump was taken\n   from a server of that version. Loading a dump file into an older server may require manual editing of the dump file to\n   remove syntax not understood by the older server. Use of the --quote-all-identifiers option is recommended in cross-version\n   cases, as it can prevent problems arising from varying reserved-word lists in different PostgreSQL versions.\n</code></pre>\n</blockquote>\n<p>Upgrading to alpine 3.10 (latest stable) makes Postgresql 11 available (and backward compatible to older Postresql).</p>", ["<p>Thanks for the fix. Could you add <code>docker images sosedoff/pgweb</code> to <code>docker-release</code> task in Makefile? It'll print out info about freshly built image. Im curious about the image size diff.</p>", "<p>Thanks ! Don't forget my another fix : https://github.com/sosedoff/pgweb/pull/438 </p>", "<p>Yeah i will merge later today</p>\n<blockquote>\n<p>On Jul 31, 2019, at 10:23 AM, Sylvain Doignon <a href=\"&#109;&#97;&#105;&#108;&#116;&#111;&#58;&#110;&#111;&#116;&#105;&#102;&#105;&#99;&#97;&#116;&#105;&#111;&#110;&#115;&#64;&#103;&#105;&#116;&#104;&#117;&#98;&#46;&#99;&#111;&#109;\">&#110;&#111;&#116;&#105;&#102;&#105;&#99;&#97;&#116;&#105;&#111;&#110;&#115;&#64;&#103;&#105;&#116;&#104;&#117;&#98;&#46;&#99;&#111;&#109;</a> wrote:</p>\n<p>Thanks ! Don't forget another fix :</p>\n<h1>438</h1>\n<p>\u2014\nYou are receiving this because you modified the open/close state.\nReply to this email directly, view it on GitHub, or mute the thread.</p>\n</blockquote>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/438", "title": "Fix SQL export filename", "status": "closed", "labels": [], "priority": null, "description": ["<p>Hi,</p>\n<p>The browser CSV export is a bit broken because the filename passed in headers was mangled. Example :\n<code>Content-Disposition: attachment; filename=\"postgres_\"schema\".\"table\".sql.gz\"</code></p>\n<p>This PR fixes this.</p>", ["<p>Great, thanks.</p>\n<p>When do you plan to make a new release ?</p>", "<p>There's another pg_dump related bug that i need to finish first, then i can cut a new release.\nCould do that on friday.</p>", "<p>Excellent news !\nDon't hurry, I was just wondering for your releases lifecycle : )</p>", "<p>Ha, my release lifecycle is pretty much whatever i feel like.</p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/437", "title": "Add ability to see custom enum values", "status": "open", "labels": [], "priority": null, "description": ["<p>Example query:</p>\n<p><code>SELECT n.nspname AS \"schema\", t.typname, string_agg(e.enumlabel, '|' ORDER BY e.enumsortorder) AS enum_labels\nFROM   pg_catalog.pg_type t \nJOIN   pg_catalog.pg_namespace n ON n.oid = t.typnamespace \nJOIN   pg_catalog.pg_enum e ON t.oid = e.enumtypid  \nWHERE  t.typname = 'NAME'\nGROUP  BY 1,2;</code></p>", ["<p>I came here to request this exact feature.  I know, I can just issue the query above, but it would be great to have it in the UI...</p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/436", "title": "Truncate long text fields in the table view", "status": "open", "labels": ["not-ready"], "priority": null, "description": ["<p>Should fix issues with large blobs of data stored as <code>bytea</code> or <code>jsonb</code>.\nFixes #429 </p>", []]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/435", "title": "Update lib/pg to 1.1.1", "status": "closed", "labels": [], "priority": null, "description": ["<p>Update should fix #431 </p>", []]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/434", "title": "Sidebar restructure", "status": "closed", "labels": [], "priority": null, "description": ["<p>Few improvements for the sidebar.</p>\n<ul>\n<li>[x] Change styles for the table info block</li>\n<li>[x] Separate sidebar title from the rest of the sidebar</li>\n<li>[x] Add objects search box</li>\n</ul>", []]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/433", "title": "need to remove search_path from postgres url before running pg_dump", "status": "closed", "labels": [], "priority": null, "description": ["<p>I added a search_path to my postgres url to support a different default schema in pgweb.</p>\n<p>this causes an issue with the SQL export feature using pg_dump:</p>\n<p><code>{\"error\":\"error: exit status 1. output: pg_dump: [archiver (db)] connection to database \\\"\\\" failed: invalid URI query parameter: \\\"search_path\\\"\\n\",\"status\":400}</code></p>\n<p>thats the json response when I try and archive anything while search_path is in my database url setting. </p>", ["<p>Could you paste the full url here (excluding sensitive data obv)?</p>", "<p><code>postgres://newt:XXXXX@localpg:5432/yms?sslmode=disable&amp;search_path=yms</code></p>\n<p>I'm running in kubernetes, \"localpg\" is my postgresql service name.</p>", "<p>Got it, thanks for the additional info. I will fix this in the next version which im planning to release this week. </p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/432", "title": "would it be able to update data by simply clicking?", "status": "closed", "labels": [], "priority": null, "description": ["<p>just like some \"for update\" on PLSQL </p>", ["<p>I dont understand your question, @xuze1993 </p>", "<p>Modify and commit data from displaying SELECT TABLE results instead of using UPDATE TABLE stuff for quick changes. @sosedoff </p>", "<p>Oh you mean editing stuff from the results view? Yeah, this seems like the most requested feature but i don't have much time these days. Im going to close since there are a few similar tickets already. </p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/431", "title": "Add support for PostgreSQL scram-sha-256 authentication", "status": "closed", "labels": [], "priority": null, "description": ["<p>I used the following command to initialize the database, the password is 123456:\n<code>initdb.exe -A scram-sha-256 -E UTF8 --no-locale --lc-messages=\"Chinese (Simplified)_China.936\" -U 123 -W -D D:\\12345</code></p>\n<p>Then I use the following command to connect to the database, but the connection failed:\n<code>pgweb_windows_amd64.exe   /debug  /user:123 /pass:123456 /db:postgres\nPgweb v0.11.2 (git: d3aaf8f5dbe5032734aeaea9c44eb79ef61eeaec)\nCreating a new client for: postgres://123:123456@localhost:5432/postgres?sslmode=disable\nFailed query: SELECT version()\nArgs: []\nServer connection string: postgres://123:123456@localhost:5432/postgres?sslmode=disable\nConnecting to server...\nError: pq: unknown authentication response: 10</code></p>\n<p>I think the problem may be caused by scram-sha-256, just like https://github.com/grafana/grafana/issues/14662.</p>", ["<p>Interesting, they mention the change has landed in lib/pq, so i guess bumping up the dependency should fix this. </p>", "<p>Yes, I think so too.</p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/430", "title": "Unable to run behind nginx", "status": "closed", "labels": [], "priority": null, "description": ["<p>After done with the installation. i ran pgweb with below command.</p>\n<p><code>./pgweb_linux_amd64 --url \"postgres://&lt;username&gt;:&lt;password&gt;@&lt;host&gt;/&lt;db&gt;\" --ssl=require --readonly --bind &lt;ip&gt; --prefix=db --debug &amp;</code>\nand I tried to run web behind my Nginx but when hit the server, i am getting issue as:</p>\n<p><strong>\"Content-Type header [application/x-www-form-urlencoded; charset=UTF-8] is not supported\"</strong></p>\n<p>Is this the issue with Nginx config or pgweb ?</p>\n<p>Nginx config is :</p>\n<p><code>location /db {\n            default_type \"application/x-www-form-urlencoded; charset=utf-8\";\n            proxy_pass http://&lt;ip&gt;:8081/db;\n            proxy_set_header Host $host;\n            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n            proxy_set_header X-Real-IP $remote_addr;\n            proxy_set_header X-Scheme $scheme;\n            proxy_connect_timeout 1;\n            proxy_send_timeout 30;\n            proxy_read_timeout 30;\n            proxy_set_header    Authorization \"\";\n            proxy_hide_header   Authorization;\n}</code>\nAny help on this ?</p>", ["<p>@sosedoff : Can you please help here ? Am i missing anything?</p>", "<p>From what i can see here you have <code>default_type</code> set with invalid content type, like your error message states. To see if nginx is really a culprit here, run the following commands:</p>\n<p><code>curl -i http://IP:8081/db\ncurl -i http://IP/db</code></p>\n<p>These commands will print out all response headers. First returns them directly off of pgweb, second one is from nginx. If your header does come from nginx - that's your problem (most likely). </p>", "<p>@sosedoff Thanks for your quick response. I have removed the \"default_type\" from the Nginx code, still getting same error.\nAlso when i hit directly from command line as you mentioned. <code>curl -i http://IP:8081/db</code> : i am getting as </p>\n<p><code>HTTP/1.1 200 OK\nContent-Type: text/html; charset=utf-8\nDate: Wed, 29 May 2019 10:58:05 GMT\nTransfer-Encoding: chunked</code>\nAll other things are working with Nginx. Not sure what i am missing in config.\n<code>location /db {\n            proxy_pass http://172.1.102.228:8081/db;\n            proxy_set_header Host $host;\n            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n            proxy_set_header X-Real-IP $remote_addr;\n            proxy_set_header X-Scheme $scheme;\n            proxy_connect_timeout 1;\n            proxy_send_timeout 30;\n            proxy_read_timeout 30;\n            proxy_set_header    Authorization \"\";\n            proxy_hide_header   Authorization;\n}</code></p>\n<p>Any idea ?\n<img width=\"835\" alt=\"Screen Shot 2019-05-29 at 4 39 27 PM\" src=\"https://user-images.githubusercontent.com/16983530/58552650-90bf2d80-8230-11e9-8492-e388995fd5ad.png\"></p>\n<p>For any URL schema it is giving same. i have just written test in the text field for example.</p>\n<p>Some Nginx logs:\n```\n172.1.96.213 - - [29/May/2019:11:14:18 +0000] \"GET /db/api/bookmarks?<em>=1559128456781 HTTP/1.1\" <strong>400</strong> 265 \"https://<ip>/db/\" \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.169 Safari/537.36\" \"-\"\n172.1.96.213 - - [29/May/2019:11:14:18 +0000] \"GET /db/api/info?</em>=1559128456780 HTTP/1.1\" <strong>400</strong> 255 \"https://<ip>/db/\" \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.169 Safari/537.36\" \"-\"\n172.1.96.213 - - [29/May/2019:11:14:19 +0000] \"POST /db/api/connect HTTP/1.1\" <strong>406</strong> 112 \"https://<ip>/db/\" \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.169 Safari/537.36\" \"-\"</p>\n<p>```</p>\n<p>When i hit url as <code>https://&lt;ip&gt;/db/api/connection?_=1559129120417</code> using curl (GET call) i am getting error as \n<code>{\"error\":{\"root_cause\":[{\"type\":\"illegal_argument_exception\",\"reason\":\"request [/db/api/connection] contains unrecognized parameter: [_]\"}],\"type\":\"illegal_argument_exception\",\"reason\":\"request [/db/api/connection] contains unrecognized parameter: [_]\"},\"status\":400}</code>\nbut if i hit the same thing <code>https://localhost/db/api/connection?_=1559129120417</code> from the system where the pgweb server is running i am getting proper result.</p>", "<p>i got the issue there was an issue in Nginx config. There was a path which redirect /api to other place and pgweb is also using the same path to redirect. i will fix this issue.</p>\n<p>Thanks for your help.</p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/429", "title": "Pgweb hangs on rows with bytea columns", "status": "open", "labels": ["bug", "help wanted"], "priority": null, "description": ["<p>I have a table with one <code>bytea</code> column where I'm storing small images. Unfortunately, if I'm having like more than 10 rows there, <code>pgweb</code> totally hangs when I want to see the rows and it's unresponsive.</p>", ["<p>Yeah, this is the sad default behavior. I guess we could just show some kind of placeholder with the column size instead of loading binary data if the size exceeds the threshold. </p>", "<p>@sosedoff Sounds reasonable. I'm out of time right now but in a month I should have more free time so I could take a try on this. Of course, if someone would like to take this faster then just do it :smiley: </p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/428", "title": "Functionality to terminate query from the UI", "status": "closed", "labels": [], "priority": null, "description": ["<p>It would be useful to incorporate some functionality to terminate a query after a given time interval. In other words, a superuser (i.e. <code>postgres</code>) that is not connected to the database would run:\n```sql \nSELECT\n  pid,\n  now() - pg_stat_activity.query_start AS duration,\n  query,\n  state\nFROM pg_stat_activity\nWHERE (now() - pg_stat_activity.query_start) &gt; interval '[some_number_of] minutes';</p>\n<p>SELECT pg_cancel_backend(<strong>pid</strong>);\n<code>``\nAdditional functionality could be added to toggle</code>some_number_of` minutes. </p>", ["<p>@foadgr There's a way to terminate the query from UI: go to activity page and locate the query you're about to shut down, then scroll all the way to the right where you can find the button \"stop\". That should do it. </p>\n<p>I know, the UX sucks, but unfortunately i don't have any spare time to make it better at this time. Reworking the table view into something more readable has definitely been on my radar for quite some time.</p>", "<p>@sosedoff Thanks for the reply. The 'stop' button works for some processes (backend/ongoing), the query pane does still freeze up while running larger queries. But stopping the query directly from <code>psql</code> works just as well. I'm okay closing out this issue or moving to enhancements.</p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/427", "title": "Client generates invalid API call on data export", "status": "open", "labels": [], "priority": null, "description": ["<p>When I try to export data, the client seems to form an invalid API call to the backend. </p>\n<p>For example, clicking the CSV export button calls the backend with the (improperly formatted) url:\n<code>https://subdomain.mypgweb.io/?pg_host=my.postgres.location.ioapi/query?format=csv&amp;query=c2VsZWN0ICogZnJvbSBkZXZpY2VzOw..&amp;_session_id=a-session-id</code></p>\n<p>If I modify the call to remove the pg_host parameter like so:\n<code>https://subdomain.mypgweb.io/api/query?format=csv&amp;query=c2VsZWN0ICogZnJvbSBkZXZpY2VzOw..&amp;_session_id=a-session-id</code></p>\n<p>or fix the url to be properly formatted without removing the pg_host parameter:\n<code>https://subdomain.mypgweb.io/api/query?pg_host=my.postgres.location.io&amp;format=csv&amp;query=c2VsZWN0ICogZnJvbSBkZXZpY2VzOw..&amp;_session_id=a-session-id</code></p>\n<p>it works as expected.</p>\n<p>I am running 0.11.1, and I don't believe this issue was addressed in 0.11.2. </p>", ["<p>I should also note that the issue could be specific to my browser or session. I have colleagues using the same pgweb instance, connecting to the same postgres host who can successfully export data on their machines. </p>", "<p>Hi sorry i dont have much time to troubleshoot your issue, but it seems like you have a custom session, pgweb does not use the <code>pg_host</code> param. Are you setting <code>--prefix</code> option at all?</p>", "<p>No worries, I need to export so rarely that I'm fine manually changing the URL, mostly just wanted to document the potential issue.</p>\n<p>No, the only option being used is <code>--sessions</code> . This is technically being set through the environment variable, although I assume that's equivalent.</p>", "<p>I can't reproduce this issue at all. If you're running pgweb behind a reverse proxy or any other tool it might be worth checking out the configuration. I would appreciate if you could send some instructions to reproduce. </p>", "<p>I am running the published 0.11.1 docker container on Google Kubernetes Engine. The configuration file for the K8s deployment, service, and ingress is here https://github.com/lab11/PlugWatch/blob/master/powerwatch/cloud/kubernetes/pgweb/pgweb-deployment.yaml</p>\n<p>Google is running a reverse proxy for the ingress, but I don't have much control over its configuration, and I have the same ingress configuration working for many other services.</p>\n<p>I understand this might not be the easiest to replicate. I would have time to replicate/document my process on a new cluster and providing you with access in a few days if you are interested. </p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/426", "title": "Setting port in command line option has no effect in browser", "status": "closed", "labels": [], "priority": null, "description": ["<p>If I set the port command line option to a different address than 5432 does not reflect in browser</p>\n<p>My command line looks like \n<code>pgweb --sessions --skip-open --port=12345 --listen=9080 ...</code></p>\n<p>Open the browser \\&lt;host>:9080 the port field always shows 5432</p>", ["<p>When you specify <code>--port</code> CLI params its only meat to be used to configure the server connection, it does not have anything to do with what's displayed in the web UI. 5432 port in the UI is the default.</p>", "<p>For others searching for this, the <code>listen</code> option is what sets the web client's port.</p>\n<p><code>pgweb --url &lt;connectionString&gt; --listen=6969</code></p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/425", "title": "How do things like cleanupIdleSessions interplay with database/sql's connection pooling", "status": "open", "labels": [], "priority": null, "description": ["<p>This question arised from learning this one: </p>\n<p>http://go-database-sql.org/connection-pool.html</p>\n<p>I did neither careful code study nor experiments, but there is a feeling that there's no need for files like pkg/api/session_cleanup.go. Instead it should be sufficient to configure an sql's connection pool feature. Am I wrong? </p>", []]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/424", "title": "Security Warning :: Your database may be open to everyone", "status": "closed", "labels": [], "priority": null, "description": ["<p>Once you have connected to the database, you can control your database by opening the page in any other browser.</p>\n<p>https://www.shodan.io/search?query=pgweb</p>", ["<p>Please change your docker run command to \n<code>docker run -e SESSIONS=true</code></p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/423", "title": "Add script to bump Homebrew formula version", "status": "closed", "labels": [], "priority": null, "description": ["", []]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/422", "title": "CSV Import (Issue #281)", "status": "open", "labels": [], "priority": null, "description": ["", ["<p>I think I made it work finally. Maybe test suite is a bit over-engineered, which was not expected initially. Can you please review ASAP. Actually a motive beyond this work is to collect a portfolio for subsequent hiring in  a Golang-related area. So far I only have contributed to gitql, but that's too trivial and not very typical golang application. I started this project as a \"low hanging fruit\", but this become a sort of moving target hunt and I grandly underestimated the effort required for the test infratstructure :) </p>", "<ol>\n<li>ParseFieldDelimiter belongs to api/helpers.go</li>\n<li>Replace regular expression with case-insensitive and shorter version: <code>(i?)^[\\w][\\w$]*$</code></li>\n<li>Do not panic in isPostgresqlIdentifierRequiringNoQuoting, just return an error (and handle it)</li>\n</ol>", "<blockquote>\n<ol>\n<li>ParseFieldDelimiter belongs to api/helpers.go</li>\n</ol>\n</blockquote>\n<p>Done</p>\n<blockquote>\n<ol>\n<li>Replace regular expression with case-insensitive and shorter version: <code>(i?)^[\\w][\\w$]*$</code></li>\n</ol>\n</blockquote>\n<p>It is a wrong one, because \n<code>SQL identifiers and key words must begin with a letter (a-z, but also letters with diacritical marks and non-Latin letters) or an underscore (_). Subsequent characters in an identifier or key word can be letters, underscores, digits (0-9), or dollar signs ($).</code>. Your suggestion will match <code>12</code>. Took <code>^[a-zA-Z_][\\w$]*$</code></p>\n<blockquote>\n<ol>\n<li>Do not panic in isPostgresqlIdentifierRequiringNoQuoting, just return an error (and handle it)</li>\n</ol>\n</blockquote>\n<p>Done. (However I have no idea how regex matching can err)</p>", "<p>Hi! Any news? </p>", "<p>Sorry, i've been busy with other stuff. I'll definitely test drive the updated features this weekend and hopefully merge. </p>", "<p>Hi! Sorry for annoyance, but what about this one? :) </p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/421", "title": "Keyword restriction in read-only mode", "status": "closed", "labels": [], "priority": null, "description": ["<p>Another guard in case if <code>default_transaction_read_only</code> gets changed back. </p>", []]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/420", "title": "Identifier quoting is incorrect", "status": "open", "labels": [], "priority": null, "description": ["<p>Identifier quoting is incorrect and fails sometimes. Steps to reproduce:\n- run psql\n- do the following commands in the psql\n<code>postgres=# create table \"bad \"\"table\" (id int);\nCREATE TABLE\npostgres=# insert into \"bad \"\"table\" (id) values (1);\nINSERT 0 1</code>\n- run pgweb\n- try to view data in the \"bad \"\"table\"\n- see the error message instead of a data</p>", ["<p>This discussion seem to be relevant: https://github.com/golang/go/issues/18478 </p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/419", "title": "pgweb with docker in README.md", "status": "closed", "labels": [], "priority": null, "description": ["<p>should be usefull add how to run pgweb with docker in README.md</p>", ["<p>https://github.com/sosedoff/pgweb/wiki/Docker</p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/418", "title": "CSV Import", "status": "closed", "labels": [], "priority": null, "description": ["<p>Hi! I picked up a closed PR #308 for issue #281 and fixed all issues you mentioned. The only problem is that I'm unable to do <code>make text</code>. Make asks password several times and fails. I changed postgres user password, but it didn't help. I guess something is wrong with my setup. Application itself works fine. Still there are not system tests for CSV import, but I'd like to add them only when I'm sure I can run test suite. Can you please elaborate how to set things up? </p>", ["<p>Are you on OSX? It might have something to do with database credentials. Here's my <code>pg_hba.conf</code> file:</p>\n<p>```</p>\n<h1>TYPE  DATABASE        USER            ADDRESS                 METHOD</h1>\n<h1>\"local\" is for Unix domain socket connections only</h1>\n<p>local   all             all                                     trust</p>\n<h1>IPv4 local connections:</h1>\n<p>host    all             all             127.0.0.1/32            trust</p>\n<h1>IPv6 local connections:</h1>\n<p>host    all             all             ::1/128                 trust</p>\n<h1>Allow replication connections from localhost, by a user with the</h1>\n<h1>replication privilege.</h1>\n<p>local   replication     all                                     trust\nhost    replication     all             127.0.0.1/32            trust\nhost    replication     all             ::1/128                 trust\n```</p>\n<p>Make sure you have <code>postgres</code> user created. Other than that you should be able to run <code>make test</code> without any problems. </p>", "<blockquote>\n<p>Are you on OSX?</p>\n</blockquote>\n<p>I'm on Debian Stretch, but I did some manual setup when installing postgres (forgot them already). I think first of all I'll reinstall postgress afresh in an official way, and then retry. </p>", "<blockquote>\n<p>Here's my <code>pg_hba.conf</code></p>\n</blockquote>\n<p>Thanks, now tests are working. I also had issues with my non-US locale. I tried to avoid that and did some changes like SET lc_messages='C', it helps for some cases. If you like, I can add the commit with that to this PR, or as a separate PR. But I was unable to change psql's (client side) messages language, so \nfinally I had to change my Linux's locale. </p>\n<p>So I'll try to fix the rest of your notes. What goes to cleaning the table, I still suggest not to do that. Just write in the import that we are adding records, instead of calling it \"import\". But if you confirm your decision, I'll implement it. </p>", "<p>Haha, I found this one: https://www.postgresql.org/docs/\uff19.6/sql-copy.html\nIt allows to feed data via stdin and can read csv format. So it looks like we should not parse csv ourselves, but instead delegate the file contents to the psql via stdin... \nI'll experiment with it. </p>", "<p>So something simple as \n<code>/y/go/src/github.com/sosedoff/pgweb$ cat /y/a.csv | psql -c \"\\\\copy zzz (text,id) from stdin with (format csv, header true)\"</code> does the job. \\copy command is advertized to be a counterpart of copy which one can run from psql if having no permissions to call copy. Also one can use just copy, w/o backslashes - it works either. </p>\n<p>So one way to go is to simply run psql from stdin. We check that fields match, generate field order so that csv and postgres table match, direct file contents to stdin of psql and spawn psql from pgweb. We can fail however under stupid platforms like ms windows where stdin can be broken sometimes (e.g. fail to support utf-8), or if there are some bugs/limitations related to spawning. So furhter experiments are required. Can you please give a feedback about this approach? </p>", "<p>Fixed all the issues that I was able to understand and which I believe are really issues. The only thing that is missing is tests. </p>", "<p>I posted a few more notes. As for <code>COPY</code> with <code>psql</code> - im okay with that approach as long as it works with SSH tunnel (see database dump feature)</p>", "<p>Seem to fix everything. Also added refreshing of table lists and some simple input data validation. Most questionalbe is the change in css files - I removed a fixed alignment for output pane. All seem to be ok at a glance, maybe I overlooked something. Without that change import button didn't work. \nDidn't add the test for the entire import. I didn't find an essential api tests so there is no infrastructure, and so far I'm not smart enough to generate one quickly. Any hints? What goes to COPY, I decided not to go into it now - it is just another project. </p>", "<p>Added an integration test. Maybe it is horrible due to lack of understaning of pgweb's globals, but I made it work finally :) </p>", "<p>I dislike this way of testing, but I don't know how to do it better. What is actually done here is a fork of main module. After the fork, application was initialized so that testing scenario has access to both web API (can send requests and get the response), and to the database directly. When testing web api, session stuff is kind of faked, so that there is no login / call api/ logout sequence. IMO this is messy. What I really want to do here is:</p>\n<ul>\n<li>create and import the DB</li>\n<li>run pgweb as an application from the script (with Exec.Command and pipes)</li>\n<li>login into it</li>\n<li>call /import/csv api to import data</li>\n<li>call /query api </li>\n<li>logout</li>\n<li>drop db</li>\n</ul>\n<p>This way it is a sort of API testing. \nHowever, there are questions. I don't see how to do that with an embedded testing framework, because I need to build pgweb before running the test. </p>\n<p>There are options:</p>\n<p>i) make the thin layer between main() and app functionality, like <code>func main() { return Main() }</code>. For testing purposes, run Main in a goroutine, and also run a test script in a main thread. Test script only communicates with Main via HTTP and when done sends termination signal. </p>\n<p>ii) use Docker. I think that's an overkill</p>\n<p>iii) write a separated golang application and use a makefile to run it (we will be unable to use <code>go test</code>)</p>\n<p>Your ideas? </p>", "<p>Yeah, tests are kind of tricky due to the way how pgweb is written (this'll change with 1.0 version). \nI'd be interested in a test in <code>client_test.go</code> that handles the actual CSV import, don't bother too much with testing the API endpoint. If you're not sure how to proceed - do the full squash of all your changes and i can add the tests. </p>", "<p>Actually I'm in progress to test it via API endpoint and it seems that I'm not very far from obtaining a prettier test. I personally prefer integration tests because they give more value per line of test code :) I hope to finish that today and maybe will do another squashed PR. </p>", "<p>Well, now I'm satisfied with the result. Didn't do squash (too tired today), and recognized that there were no need to export initOptions. Also not sure about removing \"absolute\" from some <div>s.</p>", "<p>Superseded by #422</p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/417", "title": "Merge pull request #2 from sosedoff/master", "status": "closed", "labels": [], "priority": null, "description": ["<p>update version</p>", ["<p>@jmptrader not sure what this PR is meant to do. care to elaborate? </p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/416", "title": "auth-user & auth-pass not working", "status": "closed", "labels": [], "priority": null, "description": ["<p>It looks like the <code>auth-user</code> and <code>auth-pass</code> parameter isn't working\n<code>pgweb auth-user=myuser --auth-pass=mypass --user postgres --host 127.0.0.1 --db MyDB --bind=0.0.0.0</code>\n<img alt=\"image\" src=\"https://user-images.githubusercontent.com/19336285/52740384-c8f37680-2f87-11e9-96bd-ed0256a5c8ea.png\" /></p>\n<p>I can access the site directly with no problem without password, it goes directly to this page(I've restarted httpd &amp; pgweb, disconnected pgweb and restart, also tested in chrome incognito):\n<img alt=\"image\" src=\"https://user-images.githubusercontent.com/19336285/52740489-01935000-2f88-11e9-9215-4efa91699dc8.png\" /></p>", ["<p>I see my problem now, missed the <code>--</code> for <code>auth-user</code></p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/415", "title": "How to get pgweb to run on a subdomain?", "status": "closed", "labels": [], "priority": null, "description": ["<p>I've created a subdomain for my site <code>pgweb.mysite.com</code></p>\n<p>I'd like to attach pgweb to that subdomain, how does one do that?</p>", ["<p>In order to answer your question i'll need some details about your environment, like what web server are you running, where is it hosted, etc. </p>", "<p>It's hosted on vultr.com running on CentOS 7.6. Apache isn't running right now.</p>", "<p>If that VPS does not have any other web services you have 2 options:</p>\n<ol>\n<li>\n<p>Download and install Docker and then start pgweb with <code>docker run -d -p 80:8081 sosedoff/pgweb</code></p>\n</li>\n<li>\n<p>Download the precompiled binary from <a href=\"https://github.com/sosedoff/pgweb/releases\">releases page</a> (linux/amd64 version), unpack the archive and start pgweb process with <code>pgweb --bind=0.0.0.0 --listen=80</code>. I haven't used CentOS for a long time so im not sure what kind of system manager it runs, but if it happen to be systemd you can use a service file from here: https://github.com/sosedoff/pgweb/tree/master/config</p>\n</li>\n</ol>", "<p>Ah so pgweb isn't able run with other web services such as apache on the same VPS?</p>", "<p>It could, it just depends on how you configure apache virtual hosts file. You would still need to start the pgweb on some port (it runs on localhost:8081) and run it in the background. Then Apache would proxy traffic to it from your subdomain. </p>\n<p>There's an old comment about how to run pgweb and nginx: https://github.com/sosedoff/pgweb/issues/84#issuecomment-96741961</p>", "<p>Beautiful!</p>\n<p>Got it working with this in apache:\n```\nNameVirtualHost *:80</p>\n<p><VirtualHost *:80>\n    ServerAdmin webmaster@mysite.com\n    ServerName mysite.com\n    ServerAlias www.mysite.com\n    DocumentRoot /var/www/html/\n</VirtualHost></p>\n<p><VirtualHost *:80>\n    ServerAdmin me@mysite.com\n    ServerName pgweb.mysite.com\n    ProxyPreserveHost On</p>\n<pre><code># setup the proxy\n&lt;Proxy *&gt;\n    Order allow,deny\n    Allow from all\n&lt;/Proxy&gt;\nProxyPass / http://localhost:8081/\nProxyPassReverse / http://localhost:8081/\n</code></pre>\n<p></VirtualHost>\n```</p>\n<p>Thank you!</p>", "<p>Please make sure to password protect your subdomain. You can either enable password in pgweb (<code>pgweb --auth-user=admin --auth-pass=pa$$word</code>) or with apache's htpasswd. </p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/414", "title": "Fix estimation for camelcase schemas", "status": "closed", "labels": [], "priority": null, "description": ["<p>This should address #412, #413 </p>", []]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/413", "title": "Failed to fetch data when the table is in camelCase format", "status": "closed", "labels": [], "priority": null, "description": ["<p>I have a table named <code>classSchedule</code> and I got an error when I click in the name in sidebar:</p>\n<p><code>ERROR: pq: relation \"public.classschedule\" does not exist</code></p>\n<p><img alt=\"error\" src=\"https://user-images.githubusercontent.com/51675/52498372-caa3ef80-2bbf-11e9-9027-f1f11be3d0c5.png\" /></p>\n<p>Maybe it is related to #356</p>", ["<p>Should be fixed in 0.11.2 release</p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/412", "title": "Rows tab no longer works on tables with uppercase characters", "status": "closed", "labels": [], "priority": null, "description": ["<p>Rows tab was working in 0.10.0. Broke in 0.11.0 for tables with uppercase characters in its name. Other tabs as well as \"Table Information\" continue to work fine.</p>\n<p>For example, on a table named \"SequelizeMeta\" (created by <a href=\"https://github.com/sequelize/sequelize/blob/master/docs/migrations.md\">sequelize</a> for migrations):</p>\n<p><img alt=\"image\" src=\"https://user-images.githubusercontent.com/6182852/52424383-e926bf80-2ac7-11e9-83bb-27cb3f70690b.png\" /></p>", ["<p>Can't reproduce in 0.11.1 (latest) on OSX and with Heroku test database. Need more info: OS, Postgres version. </p>", "<p>Using docker compose:</p>\n<p><code>yml\nversion: '3'\nservices:\n  postgres:\n    image: postgres:9.6-alpine\n    ports:\n      - 5432:5432\n  pgweb:\n    restart: always\n    image: sosedoff/pgweb:0.11.1\n    ports:\n      - 8081:8081\n    links:\n      - postgres:postgres\n    environment:\n      - DATABASE_URL=postgres://postgres:postgres@postgres:5432/postgres?sslmode=disable\n    depends_on:\n      - postgres</code></p>\n<p>Create table using:\n<code>sql\nCREATE TABLE \"testTable\" (\n  id    integer PRIMARY KEY,\n  name   varchar(40)\n);</code></p>\n<p>Click on \"Rows\" tab, get following message:</p>\n<p><code>ERROR: pq: relation \"public.testtable\" does not exist</code></p>\n<p>Also tried combos of:\n<code>postgres:10.6-alpine</code>\n<code>postgres:11.1-alpine</code> \nand \n<code>sosedoff/pgweb:0.11.0</code>\n<code>sosedoff/pgweb:0.10.0</code>. </p>\n<p>\"Rows\" tab works fine on <code>sosedoff/pgweb:0.10.0</code>.</p>", "<p>Alright, thanks for the info. I'll try to fix this today.</p>", "<p>Fixed in 0.11.2. </p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/411", "title": "Can't get it to run", "status": "closed", "labels": [], "priority": null, "description": ["<p>After installing it on CentOS:</p>\n<blockquote>\n<p>curl -s https://api.github.com/repos/sosedoff/pgweb/releases/latest \\\n  | grep linux_amd64.zip \\\n  | grep download \\\n  | cut -d '\"' -f 4 \\\n  | wget -qi - \\\n  &amp;&amp; unzip pgweb_linux_amd64.zip \\\n  &amp;&amp; rm pgweb_linux_amd64.zip \\\n  &amp;&amp; mv pgweb_linux_amd64 /usr/local/bin/pgweb</p>\n</blockquote>\n<p>We just execute: <code>pgweb --host localhost --user myuser --pass mypw --db mydb</code></p>\n<p>and it should run on port 8081?</p>\n<p>I keep on getting this:\n<img alt=\"image\" src=\"https://user-images.githubusercontent.com/19336285/52380602-4c124b00-2a23-11e9-814e-6772168acd1b.png\" /></p>", ["<p>Well, if the authentication credentials are correct - yes, you should be able to start pgweb and access it on port 8081. Looks like you might have some modifications made to authentication methods in your <code>pg_hba.conf</code> file, which produces the error you're seeing. </p>", "<p>Thanks for that, it's running now and it looks like it's listening but I can't seem to connect. (I can connect to port 5432) just fine.\n<img alt=\"image\" src=\"https://user-images.githubusercontent.com/19336285/52394168-4dad3480-2a5e-11e9-95fb-f1ae130de40e.png\" /></p>\n<p><img alt=\"image\" src=\"https://user-images.githubusercontent.com/19336285/52394196-64538b80-2a5e-11e9-8aec-bdd42c8b2daa.png\" /></p>\n<p>I can connect to port 5432 just fine:\n<img alt=\"image\" src=\"https://user-images.githubusercontent.com/19336285/52394544-7b46ad80-2a5f-11e9-8ccd-181dabf29235.png\" /></p>\n<p>my firewall is open on port 8081 as well:\n<img alt=\"image\" src=\"https://user-images.githubusercontent.com/19336285/52394330-cd3b0380-2a5e-11e9-9b3b-90efe4e61381.png\" /></p>\n<p>Any idea why it's not working?</p>", "<p>Got it to run with <code>--bind=0.0.0.0</code></p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/410", "title": "\nFix error formatting based on best practices from Code Review Comments\n", "status": "closed", "labels": [], "priority": null, "description": ["<p>Use <a href=\"https://codelingo.io\">CodeLingo</a> to automatically fix function comments following the\n<a href=\"https://github.com/golang/go/wiki/CodeReviewComments#error-strings\">Code Review Comments guidelines</a>.</p>\n<p>This patch was generated by running the CodeLingo Rewrite Flow over the \"<a href=\"https://github.com/codelingo/codelingo/blob/master/tenets/codelingo/code-review-comments/go-error-fmt/codelingo.yaml\">go-error-fmt</a>\" Tenet. Note: the same Tenet can be used to automate PR reviews and generate contributor docs.</p>\n<p><a href=\"https://github.com/apps/codelingo\">Install CodeLingo to drive Continuous Higher Standards</a></p>\n<p><a href=\"https://codelingo.io\">Learn about CodeLingo</a></p>", ["<p>Spam.</p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/409", "title": "Switch to github.com/go-bindata/go-bindata fork", "status": "closed", "labels": [], "priority": null, "description": ["<p>Project github.com/jteeuwen/go-bindata is no longer maintained and has been archived.</p>", []]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/408", "title": "Fix error when automatic user detection fails", "status": "closed", "labels": [], "priority": null, "description": ["<p>Resolves the issue when pgweb uses a default localhost server and cant detect the default username (happens in docker container)</p>", []]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/407", "title": "Could not detect default username", "status": "closed", "labels": [], "priority": null, "description": ["<p>Getting this error when run docker container.</p>\n<p><code>$ docker pull sosedoff/pgweb</code>\n<code>$ docker run -p  8081:8081 sosedoff/pgweb</code></p>\n<blockquote>\n<p>pq: Could not detect default username. Please provide one explicitly</p>\n</blockquote>\n<p><code>docker -v</code>\nDocker version 18.09.1, build 4c52b90</p>\n<p><code>$ cat /etc/*-release</code>\nFedora release 29 (Twenty Nine)\nNAME=Fedora\nVERSION=\"29 (Twenty Nine)\"\nID=fedora</p>\n<p><code>$ uname -a</code>\nLinux aspire5315.lostroom 4.19.10-300.fc29.x86_64 #1 SMP Mon Dec 17 15:34:44 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux</p>", ["<p>Found the issue. Basically, the pgweb docker image does not have <code>USER</code> env var and <code>libpq</code> library fails to detect the current user, which we use as a default like <code>psql</code> does. Will fix.</p>", "<p>The issue with docker image has been fixed in pgweb v0.11.1. </p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/406", "title": "Fix startup error when DATABASE_URL is set", "status": "closed", "labels": [], "priority": null, "description": ["<p>Fixes #404 </p>", []]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/405", "title": "Add custome base64 encode to handle special characters on query to export result", "status": "closed", "labels": [], "priority": null, "description": ["<p>Issue: when exporting result with query contains special characters (like Chinese characters), the <code>window.btoa()</code> throw invalid string error.</p>\n<p>Simple solution: using <code>window.btoa(unescape(encodeURIComponent(query))</code>. However, <code>unescape</code> is deprecated from here (https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/unescape)</p>\n<p>The solution is to have the custom base64 encode. The code is taken from http://www.webtoolkit.info/ </p>\n<p>Thanks.</p>", ["<p>What's with the blank space in the base64 file? Also, i don't see it being included in the main <code>index.html</code> file. </p>", "<p>Hi @sosedoff. \nFor the script, I take it from http://www.webtoolkit.info/, so not sure if I am allowed to remove the space. But of course space is redundant, I will remove it.</p>\n<p>For the <code>index.html</code>, it's a mistake. So sorry about that. I will update in my commit.</p>", "<p>@sosedoff  Hi Dan, any chance you could help look on this?</p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/404", "title": "Pgweb forgets configured url if postgres is down when pgweb starts", "status": "closed", "labels": [], "priority": null, "description": ["<p>I have the following snippet in my <code>docker-compose.yml</code>:</p>\n<p><code>postgresql:\n    image: postgres:9-alpine\n    volumes:\n      - postgres-data:/var/lib/postgresql/data:rw\n  pgweb:\n    image: sosedoff/pgweb\n    environment:\n      DATABASE_URL: postgres://postgres:postgres@postgresql:5432/postgres?sslmode=disable\n    depends_on:\n      - postgresql\n    restart: always</code></p>\n<p>When starting up containers with <code>docker-compose up</code>, <code>pgweb</code> will sometimes try to connect to <code>postgresql</code> before it can accept connections. Even with the <code>depends_on</code>, which causes <code>postgresql</code> to be started before <code>pgweb</code>, there's no guarantee it'll be listening when <code>pgweb</code> tries to connect to it. In previous pgweb versions, this would cause the <code>pgweb</code> container to exit and it would get restarted by the configured restart policy.</p>\n<p>Recently this behavior has changed. As far as I can tell, if <code>postgresql</code> isn't ready when <code>pgweb</code> tries to connect to it, <code>pgweb</code> won't exit, but it seems to then completely forget the configured <code>DATABASE_URL</code>. Even after <code>postgresql</code> is up and running, when visiting <code>pgweb</code>'s web UI, the user is prompted to enter database connection information in order to proceed.</p>\n<p>Ideally, I think that <code>pgweb</code> should retry connecting to the configured <code>DATABASE_URL</code> when the user visits the web UI (falling back to requesting connection information if it can't connect to it). Alternatively, reverting to the previous behavior makes it much easier to handle connection errors (by using restart policies in docker/docker-compose, kubernetes, systemd, supervisord or whatever system people are using to run pgweb).</p>", ["<p>The change in behavior described above was perhaps caused by #399</p>", "<p>Are you using the latest docker image (sosedoff/pgweb:0.11) ? In any case - i'll have  a look. </p>", "<p>I'm using <code>sosedoff/pgweb:latest</code> which seems to be pointing to the same image id (81c2f0ef3f5a) as <code>sosedoff/pgweb:0.11.0</code>.</p>", "<p>I just tried to replicate your issue by having pgweb started using <code>DATABASE_URL</code> env var:</p>\n<ul>\n<li>started postgres</li>\n<li>started pgweb with <code>DATABASE_URL</code></li>\n<li>made a few queries</li>\n<li>killed postgres</li>\n<li>pgweb now shows the login screen</li>\n<li>started postgres again</li>\n<li>refreshed the pgweb page, seeing the same database objects again after a few seconds</li>\n</ul>\n<p>The change you've mentioned (#399) does not make any difference here since it only runs during the start up. </p>", "<p>The issue I described occurs if postgres is down when pgweb is starting. So the steps to reproduce would be the following:\n- started pgweb with <code>DATABASE_URL</code>\n- started postgress\n- pgweb will display the login screen</p>", "<p>Oh i see what you mean, i just noticed that when i was running another test. </p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/403", "title": "[Feature Request] Show view definition in Structure tab", "status": "open", "labels": [], "priority": null, "description": ["<p>The ability to see a pretty printed, syntax highlighted display of the definition of a given view / materialized view in the Structure tab would be extremely handy. The command <code>select pg_get_viewdef('{{view_name}}', true);</code> is easy enough to remember, but I wind up needing to copy and paste the output into a text editor to see everything, especially for views with large definitions. </p>", []]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/402", "title": "0.11.0 release missing windows amd64", "status": "closed", "labels": [], "priority": null, "description": ["<p>Just a heads up that the Windows amd64 version is missing in the 0.11.0 release. I was able to get up and running on 386 without issue as a temporary workaround. Thanks for all the hard work on such an amazing tool! I have to switch back and forth between Macs and Windows for work and the state of Postgres client apps on Windows is <em>abysmal</em> - I was so happy to find pgweb.</p>", ["<p>Thanks! I re-uploaded the win/amd64 release</p>", "<p>Excellent thanks!</p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/401", "title": "Tweak sidebar database object counters styles", "status": "closed", "labels": [], "priority": null, "description": ["", []]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/400", "title": "Add support for building snaps", "status": "closed", "labels": [], "priority": null, "description": ["<p>Hi Dan, following up on what we discussed, the exact details on how to publish the snap.</p>\n<ol>\n<li>Install snapcraft &amp; build snap</li>\n</ol>\n<p>snap install snapcraft --classic --beta\ngit clone https://github.com/igorljubuncic/pgweb.git\ncd pgweb\ngit checkout add-snapcraft\nsnapcraft</p>\n<p>This command will generate a <pgweb-version>.snap file, something like pgweb_1.0_amd64.snap.</p>\n<ol>\n<li>Test locally</li>\n</ol>\n<p>This snap can be installed and tested locally with:</p>\n<p>snap install pgweb_1.0_amd64.snap --dangerous</p>\n<p>The --dangerous flag is necessary because the app (snap) hasn\u2019t gone through the snap store review process and is not signed.</p>\n<p>Once installed, the pgweb command can be executed, e.g.: snap run pgweb</p>\n<ol>\n<li>Register dev account and pgweb name in the store</li>\n</ol>\n<p>https://snapcraft.io/account.</p>\n<p>snapcraft login\nsnapcraft register</p>\n<ol>\n<li>Upload snap to the store. We use channels for diff levels of risk/stability. Edge is as the name implies, usually built from master, stable for the most stable release, you can also use beta and candidate.</li>\n</ol>\n<p>snapcraft push pgweb_1.0_amd64.snap --release edge</p>\n<ol>\n<li>Install from store</li>\n</ol>\n<p>snap install pgweb --edge</p>\n<p>That's it. Let me know if you have any questions.</p>", ["<p>Thanks for the PR, i'll give it a try some time this week. </p>", "<p>Hey Dan,</p>\n<p>Happy new year!</p>\n<p>Did you get a chance to test the snaps? Do you have any questions or need any clarifications?</p>", "<p>I did try to run the installation steps on OSX but had issues getting the snapcraft running (something to do with homebrew). Are those steps for linux only or they're exactly the same for OSX? \nI'll have some time this week to test again. </p>", "<p>It should be straightforward:</p>\n<p>brew install snapcraft\nsnapcraft (in the directory containing snapcraft.yaml)</p>", "<p>Hey. Just a quick follow up. Anything I can do to help here and get you up and running with snaps?</p>", "<p>Im afraid that snap support isnt going to be part of this repo. Maybe a better place for things like snap (or even homebrew) is <code>pgweb-distribution</code> repo or something like that. Current scope is to only release binaries and docker images. There is another PR that introduces K8S Helm that falls under same umbrella of installation instructions, so maybe it's a good time to revisit. </p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/399", "title": "Do not exit with error if local server is not running", "status": "closed", "labels": [], "priority": null, "description": ["", []]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/398", "title": "SSH connection fix", "status": "closed", "labels": [], "priority": null, "description": ["<p>Due to updated dependencies, <code>x/crypto/ssh</code> requires HostKeyCallback function.</p>", []]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/397", "title": "Scope activity list to current database", "status": "closed", "labels": [], "priority": null, "description": ["<p>The activity view will only include running queries that belong to current database. \nThis was an issue with Heroku where multiple apps share the same database server.</p>", []]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/396", "title": "Show current release and check for updates", "status": "closed", "labels": [], "priority": null, "description": ["<p>Current pgweb version is now displayed on the connection screen.\nIn addition to that, pgweb will check for the latest published release on Github and show a prompt to update. </p>", []]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/395", "title": "Force switch back to default connection settings view", "status": "closed", "labels": [], "priority": null, "description": ["<p>When switching between bookmarks that use SSH and non-SSH settings the SSH connection fields are not properly cleared out. This PR fixes it. </p>", []]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/394", "title": "Fix row estimation bug", "status": "closed", "labels": [], "priority": null, "description": ["<p>The variable <code>table</code> is mutated from <code>schema.tablename</code> to <code>tablename</code>\nbefore being passed to other functions, which try to parse the schema\nfrom the name. This results in schema name being <code>public</code> because it's\nmissing from the given table name.</p>", []]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/393", "title": "Print out failed query SQL and args with --debug flag", "status": "closed", "labels": [], "priority": null, "description": ["", []]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/392", "title": "Latest version as of 12/5/2018 triggers antivirus", "status": "closed", "labels": [], "priority": null, "description": ["<p>Hi, the latest windows version executable (as of 12/05/2018) gets quarantined by AVG as Win32:Xpaj-gen. This variant has known aliases: \nVirus:Win32/Xpaj.gen!C (Microsoft)\nW32/Xpaj.b (McAfee)\nW32.Xpaj.B (Symantec)\nVirus.Win32.Xpaj.gen (Kaspersky)\nVirus.Win32.Xpaj.A (v) (Sunbelt)\nWin32/Xpaj (AVG)</p>\n<p>From MS Security encyclopedia:\nSummary\nVirus:Win32/Xpaj is a family of viruses that spread by infecting local files and removable and network drives. The virus attempts to download arbitrary files which may be detected as other trojans.\nThe virus is capable of infecting executable (EXE), driver (DLL), screen saver (SCR) and system (SYS) files.\nIn the wild, we have observed this virus distributed via file sharing sites, masquerading as a key generator. It may also arrive on your computer via a drive-by download.</p>\n<p>-JNFoo</p>", ["<p>This is quite interesting. Nothing has changed in regards to the build/distribution process in years.\nI don't have a windows machine around, but i'll ask someone to look into this. </p>", "<p>I have ran the binary through Windows Defender Security Intelligence reporting tool as well as VirusTotal database, both reports came back clean. The trigger could be related to the fact that pgweb has embedded content (html/css/js). Closing due to false positive. </p>", "<p>Attaching the review from Microsoft.</p>\n<p><img width=\"928\" alt=\"screenshot 2019-01-25 15 52 00\" src=\"https://user-images.githubusercontent.com/71051/51774809-344cd580-20b9-11e9-9038-029995aa26ac.png\"></p>", "<p>Good to hear! Thank you for closing the loop on this. \nBest,\n-JNFoo</p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/391", "title": "Discover database resources with third-party providers", "status": "open", "labels": ["not-ready"], "priority": null, "description": ["<p>Initial pass at Discovery feature. </p>\n<ul>\n<li>Heroku</li>\n<li>AWS (partially, no way to get db/user/pass for RDS instance)</li>\n</ul>\n<p>This is highly experimental feature and still work-in-process.</p>", ["<p>Hey, love the discovery stuff. Since i don't use Heroku i can't comment on that, but here are my thoughts on the AWS bits:\n* You currently require passing access_key and secret_key for AWS authentication. That is quite limiting in a lot of situations. I'd suggest that instead of failing if either one of those is not passed via CLI or ENV to fall back on the default credential chain in the AWS SDK. It takes into account several ENV variables, the aws-cli config files (~/.aws/config and ~/.aws/credentials) as well as EC2 instance profiles and ECS container profiles if you deploy inside your AWS account. It can deal with assumed roles and the required additional tokens (AWS auth can be quite complex ...). It would be kinda like you already read the HEROKU_TOKEN from .netrc.\n* It'd be cool if in addition to the plain postgres instances the discovery would also list the aurora-postgres clusters (see my original PR) ideally, although not strictly required, with the ability to connect to the read-only endpoint if pgweb is running in read-only mode.\n* As a long term goal, definitely out of scope for the basic discovery feature, it'd be cool to support IAM authentication towards the database although tbh i have no practical experience with that yet.</p>\n<p>Anyway, really excited about this feature and can't wait to see where it goes. Feel free to take whatever bits you need from the PR with my attempt at this and then close #359. Thanks for looking into this!</p>", "<p>@bsx thanks for  the feedback. i'll add the missing aurora stuff (i've used your code as a base) and aws config file support. </p>", "<p>@bsx have a look at the latest build here, i've added AWS config support (with profiles). It does work, although it's kinda limited because there's no way to switch AWS profiles using the web UI. </p>", "<p>@bsx ping</p>", "<p>Hey, sorry for the delay. For the AWS config files i'd really recommend against parsing them yourself. I'd say if the access_key and secret_key aren't passed via CLI flags just hand of the credential acquisition to the SDK. It's way more flexible in its capabilities and can deal with all sorts of weird auth configs.</p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/390", "title": "Cleanup and refactor", "status": "closed", "labels": [], "priority": null, "description": ["<p>Bunch of changes/lint/etc</p>", []]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/389", "title": "Fix startup behavior when user did not provide a database name", "status": "closed", "labels": [], "priority": null, "description": ["<p>This change fixes the behavior when starting Pgweb with no database/hostname provided. If the database for current user does not exist we still allow user to connect from the UI instead of exiting.</p>", []]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/388", "title": "Fix JSON marshal panic when dealing with NaN values", "status": "closed", "labels": [], "priority": null, "description": ["", []]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/387", "title": "Allow settings url prefix with URL_PREFIX env var", "status": "closed", "labels": [], "priority": null, "description": ["", []]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/385", "title": "json: unsupported value: NaN", "status": "closed", "labels": ["bug"], "priority": null, "description": ["<p>2018/10/26 21:56:40 [Recovery] panic recovered:\nGET /api/tables/public.some_table/rows?limit=100&amp;offset=0&amp;_=1540562079027 HTTP/1.1\nHost: localhost:8081\nAccept: <em>/</em>\nAccept-Encoding: gzip, deflate, br\nAccept-Language: zh-CN,zh;q=0.9,en;q=0.8\nConnection: keep-alive\nReferer: http://localhost:8081/\nUser-Agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.67 Safari/537.36\nX-Requested-With: XMLHttpRequest\nX-Session-Id: 901e4e84-05a3-9fda-d945-3210f8c653fb</p>\n<p>json: unsupported value: NaN\n/usr/local/Cellar/go/1.10/libexec/src/runtime/panic.go:505 (0x4298d8)\n/Users/sosedoff/go/src/github.com/sosedoff/pgweb/vendor/github.com/gin-gonic/gin/render/json.go:26 (0x75ecff)\n/Users/sosedoff/go/src/github.com/sosedoff/pgweb/vendor/github.com/gin-gonic/gin/context.go:477 (0x764e22)\n/Users/sosedoff/go/src/github.com/sosedoff/pgweb/vendor/github.com/gin-gonic/gin/context.go:501 (0x764ffb)\n/Users/sosedoff/go/src/github.com/sosedoff/pgweb/vendor/github.com/gin-gonic/gin/context.go:501 (0x764ffb)\n/Users/sosedoff/go/src/github.com/sosedoff/pgweb/pkg/api/middleware.go:77 (0x823cd7)\n/Users/sosedoff/go/src/github.com/sosedoff/pgweb/pkg/api/api.go:364 (0x821339)\n/Users/sosedoff/go/src/github.com/sosedoff/pgweb/vendor/github.com/gin-gonic/gin/context.go:98 (0x763392)\n/Users/sosedoff/go/src/github.com/sosedoff/pgweb/pkg/api/middleware.go:31 (0x824fbe)\n/Users/sosedoff/go/src/github.com/sosedoff/pgweb/vendor/github.com/gin-gonic/gin/context.go:98 (0x763392)\n/Users/sosedoff/go/src/github.com/sosedoff/pgweb/vendor/github.com/gin-gonic/gin/recovery.go:45 (0x7719b9)\n/Users/sosedoff/go/src/github.com/sosedoff/pgweb/vendor/github.com/gin-gonic/gin/context.go:98 (0x763392)\n/Users/sosedoff/go/src/github.com/sosedoff/pgweb/vendor/github.com/gin-gonic/gin/logger.go:77 (0x770dd6)\n/Users/sosedoff/go/src/github.com/sosedoff/pgweb/vendor/github.com/gin-gonic/gin/context.go:98 (0x763392)\n/Users/sosedoff/go/src/github.com/sosedoff/pgweb/vendor/github.com/gin-gonic/gin/gin.go:290 (0x768fec)\n/Users/sosedoff/go/src/github.com/sosedoff/pgweb/vendor/github.com/gin-gonic/gin/gin.go:271 (0x768a02)\n/usr/local/Cellar/go/1.10/libexec/src/net/http/server.go:2694 (0x67110b)\n/usr/local/Cellar/go/1.10/libexec/src/net/http/server.go:1830 (0x66d330)\n/usr/local/Cellar/go/1.10/libexec/src/runtime/asm_amd64.s:2361 (0x456a60)</p>", ["<p>I'll have a look.</p>", "<p>Which pgweb version are you using?</p>", "<p>Pgweb v0.9.12 (git: 9af721176bf7b41366f0de8251fff0b47da8fce3)</p>", "<p>Should be fixed with latest 0.10.0 release</p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/384", "title": "Unable to edit table data", "status": "closed", "labels": [], "priority": null, "description": ["<p>It seems that edits to table data aren't sticking. Any info I could collect that could help pinpoint what's going wrong?</p>", ["<p>Nothing is wrong :) The edit feature was never implemented, what you're seeing is a helper functionality to copy the cell contents. </p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/383", "title": "Can't seem to access tables not on \"public\"", "status": "closed", "labels": [], "priority": null, "description": ["<p>Hi there,</p>\n<p>I recently started a new instance on Heroku, but I'm not able to access tables under schemas other than <code>public</code>. For example, I'm trying to access a table named <code>event</code> on a schema named <code>blanket</code>, but I get this error on the <strong>Rows</strong> tab:</p>\n<blockquote>\n<p><strong>ERROR: pq: relation \"public.event\" does not exist</strong></p>\n</blockquote>\n<p>Has anyone seen this issue before? Happy to share more information if needed.</p>\n<p>Thanks in advance.</p>", ["<p>Which version of pgweb are you using ?</p>", "<p>@sosedoff I used the \"Deploy to Heroku\" button, so I'm guessing I'm on the latest version.</p>", "<p>I'll have a look</p>", "<p>@ric2z The schema and table should appear in the database browser when a table is created in a schema other than the <code>public</code> schema:\n<code>create schema as blanket;\ncreate table blanket.event as ([your_table_here]);</code>\nMight be an issue with <a href=\"https://www.postgresql.org/docs/9.3/ddl-schemas.html\">schema DDL syntax</a>. </p>", "<p>@ric2z  is this still an issue for you? i tried to replicate your setup, but i had no problem seeing different schemas in my test db on heroku.</p>", "<p>Same here:</p>\n<pre><code>Pgweb v0.10.0 (git: 54da27ef70b1d2ae9297cc5ea65158148b36107d)\n</code></pre>\n<p>The schema and its tables do appear in the left sidebar, but if I click one of them, instead of seeing the table's contents, I get an error:</p>\n<blockquote>\n<p>ERROR: pq: relation \"public.tablename\" does not exist</p>\n</blockquote>\n<p>Indeed it doesn't, because <code>tablename</code> is not in the <code>public</code> schema and pgweb shouldn't be looking for it there.</p>\n<p><img alt=\"2018-12-12-145106_1063x668_scrot\" src=\"https://user-images.githubusercontent.com/90930/49873920-606c0a00-fe1d-11e8-9a61-54e9e0e5c603.png\" /></p>", "<p>Finally was able to replicate the issue on my machine. There's a bug with row estimation query that causes this error. Will fix.</p>", "<p>This issue has been fixed, please upgrade to 0.11.0</p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/382", "title": "Would be nice to have the url-prefix as an environment variable.", "status": "closed", "labels": [], "priority": null, "description": ["", ["<p>Yes, a possibility to define the base URL would be a thing.</p>", "<p>New env var <code>URL_PREFIX</code> is available in 0.10.0 release</p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/381", "title": "Table row context menu", "status": "closed", "labels": [], "priority": null, "description": ["<p>Adds the following actions:</p>\n<ul>\n<li>Copy value (copies raw cell contents)</li>\n<li>Filter by value: allows quick filter of the current table by selected column and value</li>\n</ul>", []]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/380", "title": "Make localhost to be a default db host", "status": "closed", "labels": [], "priority": null, "description": ["<p>This changes the default behavior to connect to localhost by default.\nAs a result it reduced the amount of CLI flags necessary to connect to a local database:</p>\n<p><code>pgweb --db=mydb</code></p>", []]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/379", "title": "Include rows count to numeric stats view on table column", "status": "closed", "labels": [], "priority": null, "description": ["<p>This adds an extra column to the numeric stats  view to account for row count in the table.</p>", []]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/378", "title": "Fix issues with connection string builder", "status": "closed", "labels": [], "priority": null, "description": ["<p>This should address #362 </p>", []]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/377", "title": "Add column context menu item to get numeric stats", "status": "closed", "labels": [], "priority": null, "description": ["<p>Always handy to get min/max/avg values of a column without need to write a query.</p>", []]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/376", "title": "Windows version won't even connect when insecure....", "status": "closed", "labels": [], "priority": null, "description": ["<p>Hi,</p>\n<p>Started a basic cluster on windows with:</p>\n<p><code>cockroach start --insecure --http-port=8101\ncockroach start --insecure --store=node2 --host=localhost --port=26258 --http-port=8102 --join=localhost:26257\ncockroach start --insecure --store=node3 --host=localhost --port=26259 --http-port=8103 --join=localhost:26257</code>\nI can connect with DBeaver, Visual Studio Enterprise but pgWeb throws an error of:</p>\n<blockquote>\n<p>Cannot access virtual schema in anonymous database</p>\n</blockquote>\n<p>Screenshot has the details:</p>\n<p><img alt=\"image\" src=\"https://user-images.githubusercontent.com/4738140/45359907-574a8180-b611-11e8-91f4-f1a3d19c9c45.png\" /></p>", ["<p>Yeah i think i've seen this error, you need to connect to a valid user schema, not the virtual one like in your screenshot. I have ran only basic tests with cockroach, so its not officially supported by pgweb at this time, although they're compatible</p>", "<p>Closing this for now: feel free to reopen if you'd like to improve integration with cockroachdb</p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/375", "title": "Dependencies update and switch to dep", "status": "closed", "labels": [], "priority": null, "description": ["<ul>\n<li>Replaced godep (deprecated) in favor of dep</li>\n<li>Updated all dependencies</li>\n<li>CI is now only running on latest 2 versions of go, no point in going earlier</li>\n<li>Test fixes to support updated dependencies</li>\n</ul>", []]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/374", "title": "Greenplum support", "status": "closed", "labels": [], "priority": null, "description": ["<p>https://greenplum.org/</p>\n<p>Please support Greenplum Database 4.3.x and 5.X</p>", ["<p>What error(s) do you get when using Greenplum?</p>", "<p>@leotu could you be more specific with your request?</p>", "<p>Closing until there's some background for this issue. Personally, i don't have time to research into Greenplum integration, so cant really add any useful info. </p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/373", "title": "Customizing Login Form for Simplicity", "status": "closed", "labels": [], "priority": null, "description": ["<p>Right now if pgweb is launched in multisession mode, login form is overcomplicated:\n* Tabs: Scheme/Standard/SSH\n* On Tab \"Standard\": Host,  Username,  Password, Show, Database, SSL Mode</p>\n<p>One of the most popular case, is running pgweb on the same host where Postgresql launched, and in that case users should only know about their login/password, and may be database name (ideally, users should make database choice after login, from list of available databases for the users, and allow easy switching).</p>\n<p>Users should not know about \"127.0.0.1\", \"SSL Mode\", etc.</p>\n<p>So please, let somehow implement it. </p>\n<p>May be support some config or commandline params to \"hardcode\" like this:\n<code>pgweb  --sessions --connection-standard --dbhost=127.0.0.1 --dbport=15432 --dbssl=disable</code>\nMay be config, that point to some HTML/Jinja/... template, where we can hardcode params in login form.</p>\n<p>May be another solution....  but please, lets simplify login form anyway.</p>", ["<p>I don't see what's the problem with current connection screen, you have a very simple (schema) view with a single field to enter Postgres URI. The bare minimum is <code>postgres://localhost/dbname</code>. The standard connection screen covers all the needs for local / remote browsing. For SSH there's no way around, you need all that info. So yeah, users should definitely know about host/port stuff.</p>\n<p>Most users don't even need multi-session mode when working with pgweb locally, you can already connect to the db with: <code>pgweb --host=localhost --db=name</code>.  Maybe i can go a bit further and set <code>--host</code> parameter to be localhost by default, similar to default <code>psql</code> behavior. </p>\n<p>There's also bookmarks, you can create a bunch of files with connection details and then pick the bookmark to connect to with UI or with <code>pgweb -b my_db_bookmark</code>. </p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/372", "title": "Trying to pull the docker image fails....", "status": "closed", "labels": [], "priority": null, "description": ["<p>Hi,</p>\n<p><img alt=\"image\" src=\"https://user-images.githubusercontent.com/4738140/44402689-dfe77c00-a595-11e8-9755-dfad59e23a68.png\" /></p>\n<p>What am I missing here?</p>", ["<p>No idea, the pgweb image is public so it should work. What version of docker are you running? Also, try <code>docker login</code> with your docker user and see if that works. </p>", "<p>I logged in and was then able to pull. Strange. Anyway I am now trying to use the docker image to connect to a CockroachDB instance (<a href=\"https://github.com/sosedoff/pgweb/issues/371#issuecomment-414987905\">see here for details</a>) running <strong>outside</strong> of Docker.</p>\n<p>So how to I modify the example given in <a href=\"https://github.com/sosedoff/pgweb/wiki/Docker#example\">your instructions</a> to link to the cluster?</p>", "<p>I think you can start the container with <code>--network=host</code> so pgweb can talk to locally running server.</p>", "<p><code>docker run -p 8181:8181 --link db:db -e DATABASE_URL=\"postgresql://root@localhost:26257?sslcert=certs%5Cclient.root.crt&amp;sslkey=certs%5Cclient.root.key&amp;sslmode=verify-full&amp;sslrootcert=certs%5Cca.crt\" sosedoff/pgweb --network=host\nC:\\Program Files\\Docker\\Docker\\Resources\\bin\\docker.exe: Error response from daemon: Cannot link to a non running container: /reverent_wiles AS /peaceful_hawking/db.</code></p>\n<p>The docker daemon is running as verified with <code>docker info</code></p>", "<p>The way you start container does not look right. The error says that the container you're trying to link is not running. Also, when you're starting container with host network you dont need to specify ports because they map to the host automatically. Finally, when you're using certs with pgweb you have to make sure they're in container, or at least they're mounted via a volume. </p>\n<p>Alternatively, you can run pgweb without host network, but you will need to change the DATABASE_URL from <code>postgresql://root@localhost</code> to <code>postgres://root@db</code>. I'd try that first</p>", "<p>@natiki Im closing this issue for now. Seems like a docker problem. I just tested the pull with a fresh DO server and was able to pull the image without any login. Also, here's the issue for reference: https://github.com/docker/hub-feedback/issues/1098. </p>", "<p>I think <code>--network=host</code> needs to come before the image name.</p>", "<p><code>docker run -p 8181:8181 --link db:db -e DATABASE_URL=\"postgresql://root@localhost:26257?sslcert=certs%5Cclient.root.crt&amp;sslkey=certs%5Cclient.root.key&amp;sslmode=verify-full&amp;sslrootcert=certs%5Cca.crt\" --network=host sosedoff/pgweb\ndocker: Error response from daemon: conflicting options: host type networking can't be used with links. This would result in undefined behavior.\nSee 'docker run --help'.</code>\nand then:</p>\n<p><code>docker run -p 8181:8181 -e DATABASE_URL=\"postgresql://root@localhost:26257?sslcert=certs%5Cclient.root.crt&amp;sslkey=certs%5Cclient.root.key&amp;sslmode=verify-full&amp;sslrootcert=certs%5Cca.crt\" --network=host sosedoff/pgweb\nWARNING: Published ports are discarded when using host network mode\nPgweb v0.9.12 (git: 9af721176bf7b41366f0de8251fff0b47da8fce3)\nConnecting to server...\nError: dial tcp [::1]:26257: connect: connection refused</code></p>", "<p>Here's the baseline script for you to get started with pgweb and cockroach db using docker containers:</p>\n<p>```\ndocker run -d --name=cockroach-server -p 26257:26257 -p 8080:8080 cockroachdb/cockroach:v2.0.5 start --insecure</p>\n<p>docker exec -it cockroach-server ./cockroach sql --insecure -e 'CREATE DATABASE test'</p>\n<p>docker run -p 8081:8081 --link=cockroach-server -d -e DATABASE_URL=postgres://root@cockroach-server:26257/test?sslmode=disable sosedoff/pgweb\n```</p>\n<p>Also, host networking might not work on mac (or win) the same way it works on linux so i cant really say if whatever you're doing is going to succeed. But the example i provided works and should be the same across all stacks. </p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/371", "title": "When running a windows client using SSL there are some commands not recognised?", "status": "closed", "labels": [], "priority": null, "description": ["<p>Hi,</p>\n<p>I am trying to get this working under Windows 10 using SSL. However when I make a connection I get:</p>\n<p><code>'sslkey' is not recognized as an internal or external command,\n'sslmode' is not recognized as an internal or external command,\n'sslrootcert' is not recognized as an internal or external command,</code></p>\n<p>On a Windows system where do I get those binaries?</p>", ["<p>How are you connecting to the postgres server?</p>", "<p>I have spun up a local development cluster of CockroachDB using the secure mode by following the instructions found at https://www.cockroachlabs.com/docs/stable/secure-a-cluster.html</p>\n<p>This talks PostgreSQL on the wire and according to a Cockroach forum post people have had success using pgweb to connect to it.</p>\n<p>So according to the primary node my connection string is:\n<code>postgresql://root@localhost:26257?sslcert=certs%5Cclient.root.crt&amp;sslkey=certs%5Cclient.root.key&amp;sslmode=verify-full&amp;sslrootcert=certs%5Cca.crt</code>\nSo I attempt to call that as follows:</p>\n<p><img alt=\"image\" src=\"https://user-images.githubusercontent.com/4738140/44458662-4201b900-a64a-11e8-8746-a66efd2bcbcb.png\" /></p>", "<p>I dont have a windows machine around to test this, but could you wrap your connection string with single quotes? At least that is required on mac/linux because of <code>&amp;</code> symbol</p>", "<p>OK we are getting somewhere - double quotes is what is needed:</p>\n<p>```\nC:\\CockroachDB&gt;pgweb --url 'postgresql://root@localhost:26257?sslcert=certs%5Cclient.root.crt&amp;sslkey=certs%5Cclient.root.key&amp;sslmode=verify-full&amp;sslrootcert=certs%5Cca.crt'\nPgweb v0.9.12 (git: 9af721176bf7b41366f0de8251fff0b47da8fce3)\nError: Invalid URL. Valid format: postgres://user:password@host:port/db?sslmode=mode\n'sslkey' is not recognized as an internal or external command,\noperable program or batch file.\n'sslmode' is not recognized as an internal or external command,\noperable program or batch file.\n'sslrootcert' is not recognized as an internal or external command,\noperable program or batch file.</p>\n<p>C:\\CockroachDB&gt;pgweb --url \"postgresql://root@localhost:26257?sslcert=certs%5Cclient.root.crt&amp;sslkey=certs%5Cclient.root.key&amp;sslmode=verify-full&amp;sslrootcert=certs%5Cca.crt\"\nPgweb v0.9.12 (git: 9af721176bf7b41366f0de8251fff0b47da8fce3)\nConnecting to server...\nError: pq: Private key file has group or world access. Permissions should be u=rw (0600) or less.\n```</p>\n<p>So as this is a windows machine I am not sure how you would like the permissions to avoid the <code>0600</code> error?</p>", "<p>0600 is not an error, its the required permissions mode on those certs. most likely you have too open permissions right now, so try changing that first. you're almost there.</p>", "<p>I understand it is a permissions issue. However this is a Windows system so what are you expecting the permissions to be on Windows?</p>", "<p>I dont know, the error is coming from the pgweb's dependency (postgres driver) so you'd have to research on the required permissions level. For the reference: https://github.com/lib/pq/issues/489</p>", "<p>Any luck getting everything running properly?</p>", "<p>Not as of yet. Basically even if I set the files to read only on Windows then it is still not happy. I tried same as the original reporter some other restrictions on the permissions of the files with no joy either.  According to that issue it appears that the fix is in to work around this in pq. Is it possible that pgweb / pg don't know what OS they are running on?</p>", "<p>Godeps is pinned to a lib/pq version from ~3 years ago. The fix for Windows permissions was merged ~2 years ago.</p>", "<p>Cool, i'll update the dep</p>", "<p>Cool. Will test new version when you release it and then hopefully I can close this out.</p>", "<p>@natiki 0.10.0 is released with updated dependencies.</p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/370", "title": "Automatically set table filter option to 'equals' if its not set", "status": "closed", "labels": [], "priority": null, "description": ["", []]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/369", "title": "fixed logo link", "status": "closed", "labels": [], "priority": null, "description": ["", []]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/368", "title": "SSH through tunneling bastian host", "status": "closed", "labels": [], "priority": null, "description": ["<p>Hello,</p>\n<p>I would like to use SSH Tunneling through Bastian host together with pdweb.</p>\n<p>111.111.111.0+111.111.111.1+database</p>\n<p>Would this work?</p>", ["<p>While the basic ssh proxy feature is available in pgweb, there's no way to configure a ssh jump-host (bastion) at this time. You would probably need to configure the local ssh tunnel through your bastion server using your local ssh configuration files. What's your current setup look like ? </p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/367", "title": "Getting \"bad gateway\"", "status": "closed", "labels": [], "priority": null, "description": ["<p>Error \"Bad Gateway\"\nFollowing is my docker setup</p>\n<p><strong>Traefic Reverse proxy</strong>\n```\nversion: \"3.2\"\nReverse Proxy\nservices:\n  traefik:\n    container_name: traefik\n    restart: unless-stopped\n    image: traefik:1.6.4\n    ports:\n      - \"80:80\"\n      - \"443:443\"\n    volumes:\n      - \"/var/run/docker.sock:/var/run/docker.sock\"\n      - \"/mnt/traefik:/etc/traefik/\"\n    command: traefik --docker --docker.domain=docker.localhost --logLevel=INFO --docker.watch --acme --acme.onhostrule --acme.httpchallenge.entrypoint=http --acme.storage=/etc/traefik/acme/acme.json --acme.email=dev@jas.bio --acme.entryPoint=https --entryPoints='Name:http Address::80 Redirect.EntryPoint:https' --entryPoints='Name:https Address::443 TLS' --defaultentrypoints=http,https\n    #command: traefik --web --docker --docker.domain=docker.localhost --loglevel=INFO\n    networks: \n      - gateway</p>\n<p>networks:\n  gateway:\n    driver: bridge\n<code>**pgweb**</code>\n  pgweb:\n    container_name: pgweb\n    image: sosedoff/pgweb\n    restart: unless-stopped\n    networks: \n      - traefik_gateway\n    labels:\n      - \"traefik.enable=true\"\n      - \"traefik.frontend.rule=Host:db.abc.com\"\n      - \"traefik.acme.domains=db.abc.com\"\n      - \"traefik.port=8081\"\n    command: pgweb --host postgres.abc.com --user abc --pass abc --db abc --ssl disable</p>\n<p>```</p>\n<p>Lemme know if you have further questions</p>\n<p>Thx</p>", ["<p>You need to bind to 0.0.0.0, pgweb is listening on localhost only by default.</p>\n<blockquote>\n<p>On Jun 17, 2018, at 1:26 PM, Jaspreet Singh <a href=\"&#109;&#97;&#105;&#108;&#116;&#111;&#58;&#110;&#111;&#116;&#105;&#102;&#105;&#99;&#97;&#116;&#105;&#111;&#110;&#115;&#64;&#103;&#105;&#116;&#104;&#117;&#98;&#46;&#99;&#111;&#109;\">&#110;&#111;&#116;&#105;&#102;&#105;&#99;&#97;&#116;&#105;&#111;&#110;&#115;&#64;&#103;&#105;&#116;&#104;&#117;&#98;&#46;&#99;&#111;&#109;</a> wrote:</p>\n<p>Error \"Bad Gateway\"\nFollowing is my docker setup</p>\n<p>Traefic Reverse proxy</p>\n<p>version: \"3.2\"\nReverse Proxy\nservices:\n  traefik:\n    container_name: traefik\n    restart: unless-stopped\n    image: traefik:1.6.4\n    ports:\n      - \"80:80\"\n      - \"443:443\"\n    volumes:\n      - \"/var/run/docker.sock:/var/run/docker.sock\"\n      - \"/mnt/traefik:/etc/traefik/\"\n    command: traefik --docker --docker.domain=docker.localhost --logLevel=INFO --docker.watch --acme --acme.onhostrule --acme.httpchallenge.entrypoint=http --acme.storage=/etc/traefik/acme/acme.json --acme.email=dev@jas.bio --acme.entryPoint=https --entryPoints='Name:http Address::80 Redirect.EntryPoint:https' --entryPoints='Name:https Address::443 TLS' --defaultentrypoints=http,https\n    #command: traefik --web --docker --docker.domain=docker.localhost --loglevel=INFO\n    networks: \n      - gateway</p>\n<p>networks:\n  gateway:\n    driver: bridge\npgweb</p>\n<p>pgweb:\n    container_name: pgweb\n    image: sosedoff/pgweb\n    restart: unless-stopped\n    networks: \n      - traefik_gateway\n    labels:\n      - \"traefik.enable=true\"\n      - \"traefik.frontend.rule=Host:db.abc.com\"\n      - \"traefik.acme.domains=db.abc.com\"\n      - \"traefik.port=8081\"\n    command: pgweb --host postgres.abc.com --user abc --pass abc --db abc --ssl disable</p>\n<p>Lemme know if you have further questions</p>\n<p>Thx</p>\n<p>\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub, or mute the thread.</p>\n</blockquote>", "<p>Didn't work for me, but I am considering something weird might be with my reverse proxy; I am gonna stash this for later on my todo list to figure I out.</p>\n<p>I will post here once I do, anyways thx for suggestion @sosedoff </p>", "<p>@jas99 btw was that a traefik config or docker compose or something else? i was replying from email after looking at your sample config, which didnt really ring a bell. </p>", "<p>@sosedoff Yup those are docker compose files, the traefik configuration is actually done with <code>command</code> in compose file itself.\n<code>command: traefik --docker \n--docker.domain=docker.localhost \n--logLevel=INFO \n--docker.watch \n--acme \n--acme.onhostrule \n--acme.httpchallenge.entrypoint=http \n--acme.storage=/etc/traefik/acme/acme.json \n--acme.email=dev@jas.bio \n--acme.entryPoint=https \n--entryPoints='Name:http Address::80 Redirect.EntryPoint:https' \n--entryPoints='Name:https Address::443 TLS' \n--defaultentrypoints=http,https</code></p>", "<p>@jas99 i was able to start both services with a modified config:</p>\n<p>```yaml\nversion: \"3.2\"</p>\n<p>services:\n  traefik:\n    container_name: traefik\n    restart: unless-stopped\n    image: traefik:1.6.4\n    ports:\n      - \"80:80\"\n      - \"443:443\"\n    volumes:\n      - \"/var/run/docker.sock:/var/run/docker.sock\"\n      - \"/Users/sosedoff/docker/traefik:/etc/traefik/\"\n    #command: traefik --docker --docker.domain=docker.localhost --logLevel=INFO --docker.watch --acme --acme.onhostrule --acme.httpchallenge.entrypoint=http --acme.storage=/etc/traefik/acme/acme.json --acme.email=dev@jas.bio --acme.entryPoint=https --entryPoints='Name:http Address::80 Redirect.EntryPoint:https' --entryPoints='Name:https Address::443 TLS' --defaultentrypoints=http,https\n    command: traefik --web --docker --docker.domain=docker.localhost --loglevel=INFO\n    networks: \n      - gateway</p>\n<p>pgweb:\n    container_name: pgweb\n    image: sosedoff/pgweb\n    restart: unless-stopped\n    networks: \n      - gateway\n    labels:\n      - \"traefik.enable=true\"\n      - \"traefik.frontend.rule=Host:db.abc.com\"\n      - \"traefik.acme.domains=db.abc.com\"\n      - \"traefik.port=8081\"\n    command: pgweb --bind=0.0.0.0</p>\n<p>networks:\n  gateway:\n    driver: bridge\n```</p>\n<p>Had to modify my <code>/etc/hosts</code> file with <code>127.0.0.1 db.abc.com</code>. </p>\n<p>I think main reason why you got 502 error is because pgweb did not start correctly due to invalid credentials / etc. </p>", "<p>Im closing this issue since it has nothing to do with pgweb itself. To reiterate the issue: pgweb does work just fine with docker compose / kubernetes / swarm or any other container scheduler so if something does not work correctly make sure to double check the start arguments and network configuration. Also, feel free to ask any questions in this tread just in case. </p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/366", "title": "Add EstimatedTableRowsCount to avoid count in large tables", "status": "closed", "labels": [], "priority": null, "description": ["<p>Fix https://github.com/sosedoff/pgweb/issues/168</p>", ["<p>Can you provide some tests?</p>", "<p>@wiliamsouza <code>test_EstimatedTableRowsCount</code> \ud83d\udc4d </p>", "<p>Looks good, i'd add a test to verify <code>TableRowsCount</code> works with a large table, which you can create and fill dynamically. </p>", "<p>@sosedoff sounds good.</p>", "<p>@sosedoff Take a look at the tests</p>", "<p>Tests look good. I think you forgot to include schema name in the estimated row count sql query. </p>", "<p>@sosedoff done \ud83d\udc4d </p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/365", "title": "CockroachDB initial fixes", "status": "closed", "labels": [], "priority": null, "description": ["<p>This is works in progress to get Pgweb mostly working (i.e not crashing) with CockroachDB 2.0.</p>", []]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/364", "title": "How to disable full table count on rows tab", "status": "closed", "labels": [], "priority": null, "description": ["<p>when a user clicks on table names, the <code>rows</code> tab is activated, and it triggers a full table count query.\nin my case, tables have many many rows, and <a href=\"https://wiki.postgresql.org/wiki/Slow_Counting\">slow counting</a> problem appears.\nis there any way to disable full page count? or use some king of <a href=\"https://wiki.postgresql.org/wiki/Count_estimate\">count estimate</a>?</p>", ["<p>There's no way to disable the pagination (which uses count(1)) at this time. I don't think i would have any time to get this issue resolved, unfortunately. I'd rewrite a lot of backend code to get everything smooth, but that's a completely new time sucker. </p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/363", "title": "clicking on Activity in top menu causes error", "status": "closed", "labels": [], "priority": null, "description": ["<p><code>GET http://localhost:8081/api/activity?_=1527066075833 500 (Internal Server Error)\nsend @ jquery.js:4\najax @ jquery.js:4\napiCall @ app.js:59\nshowActivityPanel @ app.js:580\n(anonymous) @ app.js:937\ndispatch @ jquery.js:3\nr.handle @ jquery.js:3\nVM171:1 Uncaught SyntaxError: Unexpected end of JSON input\n    at JSON.parse (&lt;anonymous&gt;)\n    at Function.n.parseJSON (jquery.js:4)\n    at Object.error (app.js:76)\n    at j (jquery.js:2)\n    at Object.fireWith [as rejectWith] (jquery.js:2)\n    at x (jquery.js:4)\n    at XMLHttpRequest.&lt;anonymous&gt; (jquery.js:4)</code></p>", ["<p>```\n2018/05/23 17:02:22 [Recovery] panic recovered:\nGET /api/activity?_=1527066075832 HTTP/1.1\nHost: localhost:8081\nAccept: <em>/</em>\nAccept-Encoding: gzip, deflate, br\nAccept-Language: en-US,en;q=0.9\nConnection: keep-alive\nDnt: 1\nReferer: http://localhost:8081/\nUser-Agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/66.0.3359.181 Safari/537.36\nX-Requested-With: XMLHttpRequest\nX-Session-Id: 333ae22c-1f32-2aba-09ce-57de76262c2a</p>\n<p>runtime error: slice bounds out of range\n/usr/local/Cellar/go/1.10/libexec/src/runtime/panic.go:505 (0x4298d8)\n/usr/local/Cellar/go/1.10/libexec/src/runtime/panic.go:35 (0x42878d)\n/Users/sosedoff/go/src/github.com/sosedoff/pgweb/pkg/client/client.go:234 (0x814fd9)\n/Users/sosedoff/go/src/github.com/sosedoff/pgweb/pkg/api/api.go:397 (0x821908)\n/Users/sosedoff/go/src/github.com/sosedoff/pgweb/vendor/github.com/gin-gonic/gin/context.go:98 (0x763392)\n/Users/sosedoff/go/src/github.com/sosedoff/pgweb/pkg/api/middleware.go:31 (0x824fbe)\n/Users/sosedoff/go/src/github.com/sosedoff/pgweb/vendor/github.com/gin-gonic/gin/context.go:98 (0x763392)\n/Users/sosedoff/go/src/github.com/sosedoff/pgweb/vendor/github.com/gin-gonic/gin/recovery.go:45 (0x7719b9)\n/Users/sosedoff/go/src/github.com/sosedoff/pgweb/vendor/github.com/gin-gonic/gin/context.go:98 (0x763392)\n/Users/sosedoff/go/src/github.com/sosedoff/pgweb/vendor/github.com/gin-gonic/gin/logger.go:77 (0x770dd6)\n/Users/sosedoff/go/src/github.com/sosedoff/pgweb/vendor/github.com/gin-gonic/gin/context.go:98 (0x763392)\n/Users/sosedoff/go/src/github.com/sosedoff/pgweb/vendor/github.com/gin-gonic/gin/gin.go:290 (0x768fec)\n/Users/sosedoff/go/src/github.com/sosedoff/pgweb/vendor/github.com/gin-gonic/gin/gin.go:271 (0x768a02)\n/usr/local/Cellar/go/1.10/libexec/src/net/http/server.go:2694 (0x67110b)\n/usr/local/Cellar/go/1.10/libexec/src/net/http/server.go:1830 (0x66d330)\n/usr/local/Cellar/go/1.10/libexec/src/runtime/asm_amd64.s:2361 (0x456a60)</p>\n<p>[GIN] 2018/05/23 - 17:02:22 | 500 |     549.957\u00b5s |       127.0.0.1 |  GET     /api/activity</p>\n<p>2018/05/23 17:02:32 [Recovery] panic recovered:\nGET /api/activity?_=1527066075833 HTTP/1.1\nHost: localhost:8081\nAccept: <em>/</em>\nAccept-Encoding: gzip, deflate, br\nAccept-Language: en-US,en;q=0.9\nConnection: keep-alive\nDnt: 1\nReferer: http://localhost:8081/\nUser-Agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/66.0.3359.181 Safari/537.36\nX-Requested-With: XMLHttpRequest\nX-Session-Id: 333ae22c-1f32-2aba-09ce-57de76262c2a</p>\n<p>runtime error: slice bounds out of range\n/usr/local/Cellar/go/1.10/libexec/src/runtime/panic.go:505 (0x4298d8)\n/usr/local/Cellar/go/1.10/libexec/src/runtime/panic.go:35 (0x42878d)\n/Users/sosedoff/go/src/github.com/sosedoff/pgweb/pkg/client/client.go:234 (0x814fd9)\n/Users/sosedoff/go/src/github.com/sosedoff/pgweb/pkg/api/api.go:397 (0x821908)\n/Users/sosedoff/go/src/github.com/sosedoff/pgweb/vendor/github.com/gin-gonic/gin/context.go:98 (0x763392)\n/Users/sosedoff/go/src/github.com/sosedoff/pgweb/pkg/api/middleware.go:31 (0x824fbe)\n/Users/sosedoff/go/src/github.com/sosedoff/pgweb/vendor/github.com/gin-gonic/gin/context.go:98 (0x763392)\n/Users/sosedoff/go/src/github.com/sosedoff/pgweb/vendor/github.com/gin-gonic/gin/recovery.go:45 (0x7719b9)\n/Users/sosedoff/go/src/github.com/sosedoff/pgweb/vendor/github.com/gin-gonic/gin/context.go:98 (0x763392)\n/Users/sosedoff/go/src/github.com/sosedoff/pgweb/vendor/github.com/gin-gonic/gin/logger.go:77 (0x770dd6)\n/Users/sosedoff/go/src/github.com/sosedoff/pgweb/vendor/github.com/gin-gonic/gin/context.go:98 (0x763392)\n/Users/sosedoff/go/src/github.com/sosedoff/pgweb/vendor/github.com/gin-gonic/gin/gin.go:290 (0x768fec)\n/Users/sosedoff/go/src/github.com/sosedoff/pgweb/vendor/github.com/gin-gonic/gin/gin.go:271 (0x768a02)\n/usr/local/Cellar/go/1.10/libexec/src/net/http/server.go:2694 (0x67110b)\n/usr/local/Cellar/go/1.10/libexec/src/net/http/server.go:1830 (0x66d330)\n/usr/local/Cellar/go/1.10/libexec/src/runtime/asm_amd64.s:2361 (0x456a60)\n```</p>", "<p>This is while connected to CockroachDB 2.0.2</p>", "<p>Pgweb does not officially support CockroachDB, even though CDB supports the Postgres wire protocol. </p>", "<p>All these minor issues are addressed and going to be released in the next version.</p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/362", "title": "[0.9.12] do not add ?sslmode=disable if I already specified sslmode in url", "status": "closed", "labels": [], "priority": null, "description": ["<p>The standard way to connect to my db is:\n<code>postgresql://root@127.0.0.1:26257?sslcert=%2Fhome%2Fluke%2Fgit%2Fflowcrypt-deploy%2Fsecrets%2Fkeys%2Fcockroach%2Fdev%2Fclient.root.crt&amp;sslkey=%2Fhome%2Fluke%2Fgit%2Fflowcrypt-deploy%2Fsecrets%2Fkeys%2Fcockroach%2Fdev%2Fclient.root.key&amp;sslmode=verify-full&amp;sslrootcert=%2Fhome%2Fluke%2Fgit%2Fflowcrypt-deploy%2Fsecrets%2Fkeys%2Fcockroach%2Fdev%2Fca.crt</code></p>\n<p>Notice it includes <code>sslmode=verify-full</code></p>\n<p>When I submit it into <code>Enter server URL scheme</code>, I get:\n<strong>open /home/luke/git/flowcrypt-deploy/secrets/keys/cockroach/dev/ca.crt?sslmode=disable: no such file or directory</strong></p>\n<p>pgweb seems to blindly add ?sslmode=disable at the end.</p>\n<p>To work around it, I have to add a bogus parameter at the end:\n<code>postgresql://root@127.0.0.1:26257?sslcert=%2Fhome%2Fluke%2Fgit%2Fflowcrypt-deploy%2Fsecrets%2Fkeys%2Fcockroach%2Fdev%2Fclient.root.crt&amp;sslkey=%2Fhome%2Fluke%2Fgit%2Fflowcrypt-deploy%2Fsecrets%2Fkeys%2Fcockroach%2Fdev%2Fclient.root.key&amp;sslmode=verify-full&amp;sslrootcert=%2Fhome%2Fluke%2Fgit%2Fflowcrypt-deploy%2Fsecrets%2Fkeys%2Fcockroach%2Fdev%2Fca.crt&amp;bogus=none</code></p>\n<p>So that the edited parameter would not be an important one.</p>", ["<p>You're right, there's a dumb check for <code>?sslmode</code> presence in the url, so if it's not the first parameter it gets added to the url. However, i'd like to know how did you connect to the database? CLI or via web? </p>", "<p>Fixed</p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/361", "title": "[0.9.12] Connect to fresh CockroachDB: Uncaught TypeError: Cannot read property 'length' of undefined", "status": "closed", "labels": [], "priority": null, "description": ["<p>Managed to successfully connect to local CockroachDB, and I can issue SQL statements and get back results.</p>\n<p>The node has no databases yet.</p>\n<p>Error:\n<code>app.js:126 Uncaught TypeError: Cannot read property 'length' of undefined\n    at app.js:126\n    at Array.forEach (&lt;anonymous&gt;)\n    at buildSchemaSection (app.js:121)\n    at app.js:157\n    at Object.error (app.js:76)\n    at j (jquery.js:2)\n    at Object.fireWith [as rejectWith] (jquery.js:2)\n    at x (jquery.js:4)\n    at XMLHttpRequest.&lt;anonymous&gt; (jquery.js:4)</code></p>\n<p><img alt=\"image\" src=\"https://user-images.githubusercontent.com/6306961/40413214-da750cae-5ea7-11e8-9f6c-1f317aaf2b36.png\" /></p>", ["<p>Once I issue the following statement &amp; refresh the page, error goes away:\n<code>sql\nSET database = db_name;</code>\nIdeally, the app would work properly w/o a DB selected.</p>", "<p>Fix has been added to master. However, the app will require the user to specify the database name, because a lot of endpoints expect the \"correct\" environment, ie. postgres will try to use the current username as a database (and fail if it does not exist), but that's not the case with cockroach.</p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/360", "title": "Specify CA/Client certs for verify-full mode", "status": "closed", "labels": [], "priority": null, "description": ["<p>Related to issue #228 but that one was closed.</p>\n<p>Adding more information:</p>\n<p>when testing with CockroachDB 2.0 (which, AFAIK, should support pgweb) on secure mode, I can't get a self signed root cert to work:</p>\n<p>```\npgweb --url postgres://root@localhost:26257/testdb?sslmode=verify-full&amp;sslcert=client.root.crt&amp;sslkey=client.root.key&amp;sslrootcert=ca.crt</p>\n<p>Pgweb v0.9.12 (git: 9af721176bf7b41366f0de8251fff0b47da8fce3)\nConnecting to server...\nError: x509: certificate signed by unknown authority\n```</p>", ["<p>CockroachDB is not supported by pgweb. There was <a href=\"https://github.com/sosedoff/pgweb/pull/351\">a PR to add it</a> but the author closed it until they added test setup so tests get executed on that engine too.</p>", "<p>I see! However nothing on that PR points to a different treatment of the certificates on the url string, so I think the author used it without ssl. Are self signed certificates supported by pgweb in vanilla postgres?</p>", "<p>Im closing this issue for now since there's not much i can help with at this time.</p>\n<p>Pgweb uses https://github.com/lib/pq to connect to postgres, so if something regarding certs/CA stuff does not work i'd definitely look into that repo.</p>\n<p>Pgweb 0.10.0 is finally out with a bunch of updated deps (including lib/pq one) so give it a try. </p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/359", "title": "Add AWS RDS instance discovery", "status": "closed", "labels": [], "priority": null, "description": ["<p>This PR adds the possibility to automatically discover AWS RDS instances and offer them in a dropdown to prefill the host and port fields.\n* discovery is disabled by default\n* region and credentials can be automatically discovered from EC2 metadata or the usualy AWS SDK config methods (~/.aws/config, env variables, ...)\n* in read-only mode the endpoint for RDS clusters returned is the reader endpoint</p>", ["<p>Is there an issue with some background on why this feature should be added, scoping it, and discussing config plans? It seems like a fairly massive PR to dump on a project out of the blue.</p>", "<p>The size of the PR comes mainly from the inclusion of the AWS SDK. As for the background: I'm using pgweb mainly in AWS environments and thought it'd be a nice addition if it could autofill the existing instances. If you'd like to discuss scope or changes to configuration I'm happy to incorporate suggestions. If you ignore the additional libs required in <code>vendor</code>, it's actually a fairly small feature addition IMHO. :)</p>", "<p>Ah ok, I can see that it is mostly the SDK being included looking at the changes again. The files where the diff doesn't load isn't because it's a big change, it's because it's a whole new file so the diff isn't relevant. (Bad github UX)</p>\n<p>I'm just thinking (not a maintainer or anything of the kind) that if one cloud provider is added, then it would be <em>nice</em> to have it done in an adaptable system. So let's say someone wanted to add Google Cloud SQL support or some other provider, they could implement an interface, register it, and then the system could pick things up from there. However, I'm just a pgweb user and not a go author (well, to any extent that matters) so I don't know yet if this kind of system is feasible in go either. Just a random thought to make multiple clouds supported more easily if someone wanted to contribute another one.</p>", "<p>Interesting, i had a very similar use case for Heroku where i had to connect to a few databases. I made  a hacky \"addon\" for pgweb, but all this work is not open sourced.</p>", "<p>@bsx how are you running pgweb? on your dev machine or on the EC2 instance ?</p>", "<p>I'm running it on EC2 instances in multi session mode for multiple users.</p>", "<p>Im not sure i'd merge this feature as-is since it's very vendor/api specific. Why stop with AWS in that case? Heroku and other vendors have api to get list of databases for apps/accounts, etc. The goal of Pgweb is to be as simple as possible.</p>\n<p>However, i recommend you look into \"Connect\" feature that is already implemented in Pgweb and could replace your customization. Check out the wiki page here: https://github.com/sosedoff/pgweb/wiki/Connect-Backend. You can build a web page that will fetch all available databases from RDS and then list them on the page where users can simply click and connect to the database. When user opens up the special link, Pgweb will make a HTTP request to your website with the resource identifier and will expect the connection details in the response. Then it'll try to connect to the specified database and make a new session, everything else will work the same from there. I'm not sure if you tried that solution. Let me know.</p>", "<p>@bsx Checking in, did you try the approach i described above?</p>", "<p>Sorry, haven't had the time yet but I'll definitely check it out</p>", "<p>@bsx Another ping, have you tried anything that i outlined in the previous posts?</p>", "<p>I've played around with the \"Connect\" featuee a bit. Seems promising so far. I've noticed however that it is not possible to combine it with the \"Lock Session\" feature, but maybe I'm misunderstanding the session lock thing.\nI'm currently thinking about a \"companion\" app that handles auth and connection details so the user would probably never see the connection form of pgweb itself.</p>", "<p>@bsx @Garbee take a look at #391 PR.</p>\n<p>Pushed out an initial feature set with 2 providers: Heroku and AWS. Technically speaking, existing bookmarks feature could be implemented as a provider since all providers are using Bookmark model to return connection details.</p>\n<p>I find it really easy to connect to Heroku now since i don't even have to configure the API token with CLI flag, pgweb will load the token from <code>~/.netrc</code> file where Heroku CLI keeps its config. </p>\n<p>Here's how to enable the feature:</p>\n<p><code>pgweb \\\n  --sessions \\               # Turn on multi-session mode\n  --discovery \\              # Turn on discovery feature\n  --heroku \\                 # Enable Heroku provider\n  --heroku-token=... \\       # Heroku API token (optional) -&gt; HEROKU_TOKEN\n  --aws \\                    # Enable AWS provider\n  --aws-access-key=... \\     # -&gt; AWS_ACCESS_KEY\n  --aws-secret-key=... \\     # -&gt; AWS_SECRET_KEY\n  --aws-region=us-east-1     # -&gt; AWS_REGION</code></p>\n<p>You'd need to checkout git branch <code>discovery</code> to test out the feature. Just clone the repo, switch branch and run <code>make build</code>.</p>\n<p>Let me know what do you think.</p>", "<p>Ping! Would love to hear some feedback here. </p>", "<p>Cool, I'll look at it over the weekend</p>", "<p>Closing in favor of #391 </p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/358", "title": "Check if pg_dump is available before running database export", "status": "closed", "labels": [], "priority": null, "description": ["<p>In cases when pgweb is running in the docker container (sosedoff/pgweb) it's not possible\nto export the database dump because <code>pg_dump</code> is not available in the image. The backend will \nrender the JSON error message, but since the headers for the attachment are already written, browser\nwill simply show the error indicating that page can't be loaded with no good explanation.</p>\n<p>This should fix the issue and print the correct message if the dump can't be generated. </p>", []]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/357", "title": "Update Dockerfile", "status": "closed", "labels": [], "priority": null, "description": ["<ul>\n<li>Changed MAINTAINER instruction to LABEL since MAINTAINER is deprecated. See https://docs.docker.com/engine/reference/builder/#maintainer-deprecated for more info.</li>\n<li>Removed <code>apk update</code>.</li>\n<li>Added <code>--no-cache</code> parameter. As of Alpine Linux 3.3 we can utilize the <code>--no-cache</code> option for apk. It allows us to install packages with an index that is updated and used on-the-fly and not cached locally. No need to run <code>apk update</code>, <code>apk add --update</code> and remove <code>/var/cache/apk/*</code> when done installing packages.</li>\n<li>Added postgres package so we can utilize pg_dump to dump tables and databases.</li>\n</ul>", ["<p>Thanks! Good catch on missing pg_dump. </p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/356", "title": "Fixes relation not found errors when dealing with table names that have uppercase characters", "status": "closed", "labels": [], "priority": null, "description": ["<p>fixes issue that generates an error message when getting table info/schema via tabs, truncating/deleting table, and exporting data for tables with uppercase letters via right click menu</p>\n<p>fixes exporting Tables with uppercase letters #310</p>", ["<p>@sosedoff would love to see this merged</p>", "<p>@ericdagenais sorry its been a while, could you perhaps update this PR? Im planning on a new release so it you can make it in time i will include your changes.</p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/355", "title": "Add transaction support", "status": "closed", "labels": [], "priority": null, "description": ["<p>It would be nice for pgweb to support transactions and allow to toggle between auto-commit and manual begin/commit/rollback. That way you could perform a series of manipulations, check the result and commit only if you are satisfied.</p>", ["<p>Are you talking about the SQL query pane?</p>", "<p>For now - since this is the only place where I can manipulate data.\nIf pgweb gets form / table based editing support sometime in the future, that would be a good candidate for transactions as well.</p>", "<p>Closing this for now, there's no plan for transactional support for the time being. </p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/354", "title": "Option to not show connection details", "status": "closed", "labels": [], "priority": null, "description": ["<p>When using bookmarks, there should be a cli option to hide the connection details from the users.</p>", ["<p>Sorry i forgot to reply in time. Can you clarify on why the connection details should not be visible if bookmark is being used? No sensitive information is exposed on that page, and any user can actually get the same info by running a sql query themselves. </p>", "<p>No feedback, closing for now. I dont think hiding any connection details would make any sense, see my previous post in this thread. </p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/353", "title": "[How to] ldap connectivity", "status": "closed", "labels": [], "priority": null, "description": ["<p>I would like to hook this up to ldap instead of having its basic auth in place.</p>\n<p>is this possible by using apache somehow or use the backend connectivity feature?.. </p>", ["<p>You can try putting https://github.com/gopenguin/ldap-proxy in front of pgweb, i haven't tried that thought. Maybe in future pgweb can offer native LDAP authentication backend, but there's not much need for it at the moment. </p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/352", "title": "Display table and column list based on first few typed chars", "status": "open", "labels": [], "priority": null, "description": ["<p>While writing queries, I see that the table or column names are not shown for the user to select based on the first few typed characters.</p>\n<p>It would definitely help to have this feature in reducing the time while writing queries.</p>", ["<p>This could be added on top of #285, but yeah the keyword/db objects autocompletion is something that i've been meaning to implement for a long time now. Hopefully i get to it when i get a bit more of free time. </p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/351", "title": "CockroachDB support", "status": "closed", "labels": [], "priority": null, "description": ["<h2>New</h2>\n<ul>\n<li>Added database mode selection to login screen</li>\n</ul>\n<h2>Warning</h2>\n<ul>\n<li>Need regenerate bindata</li>\n</ul>\n<h2>Limitations</h2>\n<ul>\n<li>Tested with CockroachDB CCL v1.1.5</li>\n<li>Minimum version v.1.1.5</li>\n<li>Currently root user supported</li>\n<li>Login with none root user , require select role to pg_catalog tables</li>\n<li>Connection partial information, missing client network information</li>\n<li>Table information not supported ( later )</li>\n</ul>\n<h2>Supports</h2>\n<ul>\n<li>Structure view supported</li>\n<li>Indexes view supported</li>\n<li>Constraints view supported</li>\n<li>Query, Explain query supported</li>\n<li>History supported</li>\n<li>Activity showing cluster query states</li>\n<li>Activity query stop supported</li>\n<li>Rows and filtering supported</li>\n</ul>\n<h2>Bookmarks</h2>\n<ul>\n<li>Not tested</li>\n</ul>", ["<p>Thanks for the contribution. I'd love to see a set of tests that run against real Cockroach db instance, like in the <code>script/test_all.sh</code> script, which runs tests against multiple Postgres versions using Docker. At least i will be able to test all this stuff locally. </p>", "<p>Hi @sosedoff \nIclose request, and write more test for cockroachdb.\nThx</p>", "<p>@backy-io I just started some work on getting the CockroachDB integrated (partially) into Pgweb, so your contribution will be useful here. Thanks.</p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/350", "title": "[Feature] Responsive CSS for mobile view", "status": "closed", "labels": [], "priority": null, "description": ["<p>Would nice to have a more of a \"mobile feel\" when using pgweb via a mobile browser.</p>", ["<p>Mobile devices were never meant to be supported by pgweb, and there's no plan on supporting in the the current version. </p>", "<p>Hey,\n@sosedoff, although it wasn't meant to be supported, I suggest we'll keep this issue open.</p>\n<p>I did a little research... in order to make it responsible we need:</p>\n<ul>\n<li>refactor the sidebar: all sub-divs should not use fixed position only the #sidebar div<ul>\n<li>sidebar will have a \"minimize\"/\"toggle\" button that will hide it, and will expose the body</li>\n</ul>\n</li>\n<li>refactor the topbar<ul>\n<li>remove redundant \"::before\" for a selected item (just change the height to 50px)</li>\n<li>hide connect/disconnect fo mobile</li>\n<li>on mobile change the way it behaves to a hamburger menu</li>\n</ul>\n</li>\n</ul>\n<p>basically that's it... not that complicated</p>", "<p>cc @sosedoff </p>\n<p>Can we reopen this?</p>", "<p>are you asking me to implement all these mobile changes or are you going to take a lead on it?</p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/349", "title": "password with '#' in url doesnt work", "status": "closed", "labels": [], "priority": null, "description": ["<p>Issue:\nusing '#' in the password field of the URL causes pgweb to not connect.\n'#' works when used in the \"standard\" connection method.</p>\n<p>Bad Example:\npostgres://pguser:pgpass###@localhost:5433/mydb?sslmode=disable &lt;-- this causes pgweb to get confused as to where the host/port is in the url</p>\n<p>Good Example:\npostgres://pguser:pgpass@localhost:5433/mydb?sslmode=disable &lt;--- this works</p>\n<p><img alt=\"image\" src=\"https://user-images.githubusercontent.com/3737664/37153627-3d14b4a4-22d5-11e8-97a1-87512baa6207.png\" /></p>\n<p><img alt=\"image\" src=\"https://user-images.githubusercontent.com/3737664/37153732-a17e625a-22d5-11e8-93bd-9e4ca1ebfea1.png\" /></p>\n<p>Pgweb v0.9.11 (git: c32784e8aebec35c1f68e11bc004f45dedbda283)</p>", ["<p>Ah, the <code>#</code> sign must be escaped for this to work, ie <code>postgresql://user:%23password%23@hostname/database</code></p>", "<p>Yup that worked!.. btw you have amazing project here and i really appreciate it!</p>", "<p>\ud83d\udc4d</p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/348", "title": "web authenticate issue", "status": "closed", "labels": [], "priority": null, "description": ["<p>Hi,\n    If I use pgweb login to a DB, anyone can query SQL by the pgweb.\n    The stat of login seems to save on server.</p>", ["<p>need use '--sessions' options.</p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/347", "title": "Specs refactor and tweaks", "status": "closed", "labels": [], "priority": null, "description": ["<ul>\n<li>Build with Go 1.10</li>\n<li>Make ParseOptions func to take an arg and return struct so we can test it</li>\n<li>Refactor and add more tests for options parsing</li>\n<li>Run test suite on postgres 10.x branch</li>\n<li>Change format for connection idle timer from float64 to in</li>\n</ul>", []]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/346", "title": "[Feature] Allow hiding of list of tables on left-hand side   ", "status": "open", "labels": [], "priority": null, "description": ["<p>This would enable viewing of tables with many columns without need to scroll between them.</p>", []]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/345", "title": "Connection Refused to Web Server ", "status": "closed", "labels": [], "priority": null, "description": ["<p>First, this is an awesome project and I'm happy to be using it! \ud83d\ude4f </p>\n<p>I was able to get <code>pgweb</code>to run with no problem on my Mac, but when I create a brand new EC2 instance with ALL TRAFFIC open to it, I get a connection refused error.</p>\n<p>On the machine itself, I can <code>curl localhost:8081</code> and it sends back the HTML to the login screen.</p>\n<p>This is the command:</p>\n<p><code>bash\n./pgweb --host=XXX-rds.XXX.us-east-1.rds.amazonaws.com --port=5432 --user=ubuntu --db=dividend_alerter_db --pass=XXX</code></p>\n<p>The odd thing is I have another Express App running on Port 8666 and it connects with no problem.  If I create a dead simple <code>go</code> server it also works fine so I'm vexed as I'm not sure why <code>pgweb</code> is blocking outside connections when I have ALL TRAFFIC enabled in the security policy and other http servers and serving fine.</p>\n<p>Thanks for any help in advance! </p>", ["<p>@joemccann thats because by default pgweb is listening on localhost only. you can bind the server to any network interface with <code>--bind=0.0.0.0</code> flag.</p>", "<p>ahhhh sorry I didn't see that in the docs!</p>", "<p>yup that fixed it. Thanks!</p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/344", "title": "Preserve table sorting when switching between tables", "status": "open", "labels": [], "priority": null, "description": ["<p>Sure there'll be several schools of thought on this but I frequently will sort a table by a field, check a row, then browse to another table to cross-reference something, before browsing back to the original table.</p>\n<p>When I do this the original table has re-sorted itself back to default. Wondering if it would make sense to keep table sorting (and possibly highlighting of rows, editable text boxes etc.) preserved until a user deliberately refreshes or resets a table?</p>", ["<p>We can save the table filters and sorting state and restore it when switching between tables. I'll see what i can do here.</p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/343", "title": "Include constraint name under \"constraints\" tab", "status": "closed", "labels": [], "priority": null, "description": ["<p>Implements #342 </p>", []]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/342", "title": "Display full name of table constraints", "status": "closed", "labels": [], "priority": null, "description": ["<p>I was trying to remove a primary key constraint from a table but couldn't find the name of the constraint to remove it. Would it be possible to add this under the 'CONSTRAINTS' tab alongside the involved field name which is already listed?</p>", ["<p>Yeah, sure. I will add that.</p>", "<p>Added in master some time ago. </p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/341", "title": "DisableIdleTimeout is not work as expected", "status": "closed", "labels": [], "priority": null, "description": ["<p>The session still freezing when you run <code>pgweb</code> with <code>--disable-idle-timeout</code>. Maybe I do not correctly understand the meaning of that flag?</p>", ["<p>What do you mean by <code>session still freezing</code> ? </p>\n<p>There are 2 flags related to the connection idling:</p>\n<p><code>--no-idle-timeout  Disable connection idle timeout (false)\n--idle-timeout=    Set connection idle timeout in minutes (180)</code></p>\n<p>These deal with the hanging connections:  if pgweb runs in session mode and the session is abandoned it'll be automatically closed, otherwise the server will hoard the database connections.</p>", "<p>No activity - closing. </p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/340", "title": "{\"error\":\"open /app/.pgweb/bookmarks: no such file or directory\"} when trying to connect on deployed heroku version", "status": "closed", "labels": [], "priority": null, "description": ["", ["<p>How are you trying to connect ? Need a bit more info </p>", "<p>@adammoisa ping</p>", "<p>Stale issue, closing due to no activity. </p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/339", "title": "feat: add option to disable query timeout on long-running queries", "status": "closed", "labels": [], "priority": null, "description": ["", ["<p>@sosedoff what about that?</p>", "<p>I just checked the changes, not sure i want to have this checkbox on the bar. Maybe a better UX is to add a small \"wrench\" icon somewhere on the same bar (where we have \"run\", \"explain\", etc). When user clicks on it we can open up a small modal with timeout settings or anything that really belong there. Just my two cents. </p>", "<p>Honestly, i'd prefer a <code>--query-timeout</code> param in the CLI at this point. Feel free to reopen. </p>", "<p>@sosedoff if you prefer a cli param, then do it! You already said that you do not have the time to do this and would like to have an open PR for this feature, so why did you close this PR just because you did not like it? The tool needs to be like the community needs it, not how you would like it to be</p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/338", "title": "beta: integration-testing", "status": "closed", "labels": [], "priority": null, "description": ["", ["<p>And that? \ud83d\ude42 </p>", "<p>Please update the PR if still interested. Otherwise im going to close it.</p>", "<p>OK! </p>", "<p>I\u2019ll update the PR  on this week</p>", "<p>The PR is updated. Please check and give me feedback. The TravisCI pipeline fails because of TLS error during connecting to the GitHub. At the moment I don't why it fails, but I'm still thinking about it.</p>", "<p>Ok! I've resolved the issue with TLS using Alpine 3.8 as base image</p>", "<p>Are there any chances that the work will be merged in? Maybe I need to do some changes?</p>", "<p>I'm open to any constructive critic related to the code or something else, my friend =)</p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/337", "title": "Update bookmarks.go", "status": "closed", "labels": [], "priority": null, "description": ["<p>Fix typo</p>", []]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/336", "title": "[feature] backup and restore", "status": "closed", "labels": [], "priority": null, "description": ["<p>hi,</p>\n<p>how about backup and restore?</p>", ["<p>pgweb is a database browser tool so backup and restore functionality is really out of scope. use <code>pg_dump</code> / <code>pg_restore</code> commands. pgweb however offers a pretty simple way to export the database as a sql.gz dump without any options, and that's pretty much it. </p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/335", "title": "Row deletion", "status": "closed", "labels": [], "priority": null, "description": ["<p>Is is possible to delete a single row without writing a query ?</p>", ["<p>@muhammedabad sorry for the late response: no, its not possible to delete a row from the row browser UI. </p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/334", "title": "feat: check for new releases and auto-update", "status": "closed", "labels": [], "priority": null, "description": ["", ["<p>Version checking is implemented on frontend and autoupdated is not necessary for this project. </p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/333", "title": "Add ability to split the SQL query page into horizontal panes", "status": "open", "labels": ["enhancement", "ui"], "priority": null, "description": ["<p>On the custom SQL query page there should be an option to display the\neditor/results horizontally, so that the editor is on the left and query results\nare on the right. This will help a lot when writing a large SQL query.</p>", ["<p>This would indeed be my biggest UX issue. Instead of your suggested split, you could also think of leaving the current layout but to either split the window using a slider or even just have the ability to show/hide the lower/result part. </p>", "<p>Or open Query to new browser window or Tab. On that window you can select/change the query+result table horizontal/vertical.</p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/332", "title": "Use session storage for queries", "status": "closed", "labels": [], "priority": null, "description": ["<p>Addresses #280 </p>\n<p>Fixes issue where queries would leak over in multisession mode</p>", ["<p>There was another PR somewhere in the list that did the same - change the local storage to session storage. This change breaks the indented behavior when pgweb runs in a single session mode: queries should persist unless running in multi-session mode. Main reasoning here is that the last query will always be available in the single session mode, which is handy for local dev. </p>", "<p>I ended up with this compromise as a solution, save to both session storage and local storage.  When we are attempting to pull from storage, first check if there was a query in session storage, if there was nothing in session storage then pull from local storage.  This allows for intended behavior in single session mode as well as the isolation in multi session mode.  I have also set it to on change write to both local and session storage, so the most recent query no matter the session will update the local storage.</p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/331", "title": "beta version of specs", "status": "closed", "labels": [], "priority": null, "description": ["", []]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/330", "title": "Add views context menu to sidebar", "status": "closed", "labels": [], "priority": null, "description": ["<p>New actions available for the views on the sidebar:</p>\n<ul>\n<li>Copy name</li>\n<li>Export (CSV/JSON/XML)</li>\n<li>Delete</li>\n</ul>", []]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/329", "title": "Add db prefix for table export files", "status": "closed", "labels": [], "priority": null, "description": ["", []]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/328", "title": "Add database name prefix to exported files", "status": "closed", "labels": ["enhancement"], "priority": null, "description": ["<p>When exporting tables to XML/CSV/JSON/SQL the exported filename will not contain the name of the database which might be confusing.</p>", ["<p>I think I can handle this!</p>\n<p>This is referring to the exported queries correct?</p>", "<p>Hm, i've actually implemented this in #329</p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/327", "title": "Disable autocomplete on the connection url string for security reasons", "status": "closed", "labels": [], "priority": null, "description": ["<p>Unlike a password field the database connection url input might contain sensitive information, like passwords. </p>", []]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/326", "title": "export view to CSV", "status": "closed", "labels": [], "priority": null, "description": ["<p>We use a view to give our team some dashboards. However exporting these views isn't possible. Giving our team SQL to use and export isn't handy.</p>", ["<p>This has been implemented and released in 0.9.11. </p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/325", "title": "Acceptance tests", "status": "closed", "labels": [], "priority": null, "description": ["", []]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/324", "title": "FIx TCP listener test flakyness", "status": "closed", "labels": [], "priority": null, "description": ["<p>Close the listener socket as soon as we've got the connection accepted.</p>", []]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/323", "title": "Reorder table context menu", "status": "closed", "labels": [], "priority": null, "description": ["<p>Table context menu now is ordered as follows:</p>\n<ul>\n<li>Copy name</li>\n<li>Exports (JSON/CSV/XML/SQL)</li>\n<li>Danger operations</li>\n</ul>", []]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/322", "title": "Hide custom query results counter if query didn't return any rows", "status": "closed", "labels": [], "priority": null, "description": ["<p>SUBJ. When the element is visible and contains the previous query rows count, it will stay unchanged when the new query does not return any rows. </p>", []]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/321", "title": "Add support for CORS", "status": "closed", "labels": [], "priority": null, "description": ["<p>WIP. Things to do:</p>\n<ul>\n<li>[x] Add <code>--cors</code> CLI option</li>\n<li>[x] Specify CORS origins with <code>--cors-origin</code></li>\n</ul>", []]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/320", "title": "Fix sslmode typo", "status": "closed", "labels": [], "priority": null, "description": ["<p>https://www.postgresql.org/docs/9.1/static/libpq-ssl.html</p>", []]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/319", "title": "[Feature Request] configure query timeout via command line options", "status": "open", "labels": [], "priority": null, "description": ["<p>Current the query timeout is hard-coded: https://github.com/sosedoff/pgweb/blob/master/static/js/app.js#L57</p>\n<p>The feature request is for adding the following command line option:</p>\n<p><code>--query-timeout=    Set database query timeout in seconds (300)</code></p>", ["<p>There is adjacent issue #287. @sosedoff I think you can close my one - #287</p>", "<p>I've added disable query timeout checkbox in UI. Look at PR https://github.com/sosedoff/pgweb/pull/339</p>", "<p>Any updates on this one? Looks like PR #339 was closed but not merged. </p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/318", "title": "[Feature request] configure ssh tunnel via command line options", "status": "closed", "labels": [], "priority": null, "description": ["<p>Add the following application options:</p>\n<p><code>--ssh-host=            SSH Server hostname or IP\n--ssh-port=            SSH Server port (22)\n--ssh-user=            SSH user\n--ssh-pass=            Password for SSH user\n--ssh-key=             SSH key</code></p>", ["<p>I just find that it is possible to use the bookmark feature to let command line support ssh tunnel.</p>", "<p>We could even reduce number of CLI options (which has grown a bit) by using a single option to pass the host/port/user/pass like this:</p>\n<p><code>--ssh=user:password@host:port</code></p>\n<p>I dont use SSH with pgweb directly, only via bookmarks, so let me know what you think.</p>", "<p>We could even extend the url option:</p>\n<p><code>--url=postgresql://user:pass@host:port/db?sslmode=sslmode#ssh://user:pass@host:port?sshkey=~/.ssh/id_rsa</code></p>\n<p>I am also OK with <code>--ssh=user:password@host:port?sshkey=~/.ssh/id_rsa</code></p>\n<p>The feature is already there, we should expose the feature via command line.</p>", "<p>Closing due to no activity. </p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/317", "title": "Acceptance tests", "status": "closed", "labels": [], "priority": null, "description": ["<p>Need a code review</p>", ["<p>There seems to be an issue with deps. Some of the packages are missing. Don't change the deps unless you mean to. That's why all the CI specs are failing (linux/win). </p>", "<p>Script <code>script/test_ginkgo.sh</code> seems to be doing something odd. At first it tries to build a specific image, then goes on to test on various versions of postgres. The goal here is to utilize the <code>make test</code> and <code>make test-all</code> to run the full test suite. </p>", "<p>About <code>script/test_ginkgo.sh</code>. I left comments in PR with explanations of goal which I'am trying to reach. Shortly, \n- run pgweb GUI from docker image\n- looping through PG 9.1 - 9.6 backends and on each step we test pgweb GUI against different versions of Postgres </p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/316", "title": "Fix flaky ssh port listener test", "status": "closed", "labels": ["bug"], "priority": null, "description": ["<p>Common CI failure:</p>\n<p><code>Unable to start test tcp listener: listen tcp 127.0.0.1:30000: bind: address already in use\n--- FAIL: Test_getAvailablePort (0.00s)\n    Error Trace:    port_test.go:49\n    Error:      Not equal: 30000 (expected)\n                    != 30001 (actual)</code></p>\n<p>Low hanging fruit.</p>", ["<p>I haven't seen any issues with this test for quite some time, so closing for the time being. </p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/315", "title": "Brew formula and service", "status": "closed", "labels": [], "priority": null, "description": ["<p>With <a href=\"https://brew.sh/\">homebrew</a> we could enable the users for easy install and automatic startup (and restart) for pgweb for seamless control \ud83d\udc4d </p>", ["<p>Pgweb is already distributed via homebrew cask, however i'm not sure if casks support plists. Since im a pgweb developer i dont really use the service plist, however i've made one before and it worked fine. I just posted my question on homebrew-caskroom to figure out if this is something we can add. </p>\n<p>Here's the plist that works with the latest pgweb installed from the cask:</p>\n<p>```</p>\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE plist PUBLIC \"-//Apple//DTD PLIST 1.0//EN\" \"http://www.apple.com/DTDs/PropertyList-1.0.dtd\">\n<p><plist version=\"1.0\">\n<dict>\n  <key>KeepAlive</key>\n  <true/>\n  <key>Label</key>\n  <string>homebrew.mxcl.pgweb</string>\n  <key>ProgramArguments</key>\n  <array>\n    <string>/usr/local/Caskroom/pgweb/0.9.9/pgweb_darwin_amd64</string>\n  </array>\n  <key>RunAtLoad</key>\n  <true/>\n  <key>StandardErrorPath</key>\n  <string>/usr/local/var/log/pgweb.error.log</string>\n  <key>StandardOutPath</key>\n  <string>/usr/local/var/log/pgweb.log</string>\n</dict>\n</plist>\n```</p>", "<p>To answer my own question regarding the plist support in homebrew casks: no, its not supported. If we wanted to move pgweb to homebrew core we would have to support building from source, which i don't find useful.</p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/314", "title": "\"Asset static/index.html can't read by error\" failed again", "status": "closed", "labels": [], "priority": null, "description": ["<p>Hi Dan,\nI saw \"Asset static/index.html can't read by error: Error reading asset static/index.html at /Users/sosedoff/go/src/github.com/sosedoff/pgweb/static/index.html: open /Users/sosedoff/go/src/github.com/sosedoff/pgweb/static/index.html: no such file or directory\"</p>\n<p>after <code>brew cast install pgweb</code> or <code>go get</code> and build from source code.\nThis is the same issue as <a href=\"https://github.com/sosedoff/pgweb/issues/180\">#180</a>, <a href=\"https://github.com/sosedoff/pgweb/issues/171\">#171</a> and <a href=\"https://github.com/sosedoff/pgweb/issues/86\">#86</a>.</p>\n<p>Then I tried <code>git checkout v0.9.8</code> then build, it works fine.</p>\n<p>How about add this check to CI ?</p>\n<p>Thank you for your work, it's a pretty nice tool.</p>", ["<p>@Wilbeibi i've added guard to CI recently. Although all the releases pushed out to github should not be affected. Which pgweb versions that you've tried had this asset bug ?</p>", "<p>@sosedoff 0.9.9</p>", "<p>0.9.9 binary release and source code does not contain any dev assets, i'm not sure how you ended up with the version that does. if you know the git sha i can check if it's broken. </p>", "<p>Oh, sorry, thank you for the suggestions. </p>\n<p>After <code>git pull</code> I get the latest version and it's working now (weird, why <code>go get</code> does not give me the right one?). And the <code>brew cask</code> issue is because my environment PATH found the <code>go get</code> one first.</p>\n<p>Thanks again for your work.</p>", "<p>If you're building from master - then yes, assets get broken sometimes, that explains why you were seeing the error. </p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/313", "title": "Update app.json", "status": "closed", "labels": [], "priority": null, "description": ["<p>update heroku addons</p>", ["<p>@techiadarsh Whats with the change? It looks like the JSON is invalid. </p>", "<p>Closing this due to no response. From what i know heroku postgres creates a database with hobby-dev plan by default.</p>\n<p><img alt=\"screenshot 2017-11-16 22 16 28\" src=\"https://user-images.githubusercontent.com/71051/32929198-ee159a6e-cb1b-11e7-94bc-5885cb36a31e.png\" /></p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/312", "title": "added support for encrypted ssh-keys", "status": "closed", "labels": [], "priority": null, "description": ["<p><a href=\"https://github.com/sosedoff/pgweb/issues/241\">Issue #241 </a> solved\nModified function <code>parsePrivateKey</code> only in <code>github.com/sosedoff/pgweb/blob/master/pkg/client/tunnel.go</code> </p>", ["<p>@mdnight Do you have any additions to this PR? I dont see any changes to the UI where you're supposed to put your private key password. </p>", "<p>it supposed to use a field 'ssh password'</p>", "<p>@mdnight which might be misleading. the ssh password field is supposed to represent the password for the user account the end user is trying to login with.</p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/311", "title": "Update README - add more badges", "status": "closed", "labels": [], "priority": null, "description": ["<p>I think it's good idea - add some useful badges</p>", ["<p>Thanks</p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/310", "title": "exporting Tables with uppercase letters", "status": "closed", "labels": ["bug"], "priority": null, "description": ["<p>There is a table <code>Languages</code> in the scheme <code>public</code>; attempting to export it (i.e. to <code>JSON</code>) by right clicking on the table name fails and shows an error message.</p>\n<p><strong>Expected:</strong>\n<code>JSON file</code>\n<strong>Error message result:</strong>\n<code>{\"error\":\"pq: relation \\\"public.languages\\\" does not exist\"}</code>\n<strong>Note:</strong>\nthe query below works:\n<code>select * from public.\"Languages\"</code>\nThis issue might be related to <a href=\"url\">https://github.com/sosedoff/pgweb/issues/21</a></p>", ["<p>Uh, i'll check on this one. I thought it was already fixed. </p>", "<p>Same issue, occurs with trying to show the \"Structure\" tab for a table containing uppercase letters as well:</p>\n<p><code>ERROR: pq: relation \"public.exampletable\" does not exist</code>, for <code>exampleTable</code></p>", "<p>I believe the same issue occurs when trying to add query constraints for columns with uppercase letters - i.e. select * from table where columnName = 'test'</p>\n<p><code>ERROR: pq: column \"columnNmae\" does not exist</code></p>", "<p>@transcranial : try <code>public.\"exampletable\"</code>  instead of <code>\"public.exampletable\"</code></p>\n<p>@sosedoff : any plans to fix this in the upcoming release?\nThank you</p>", "<p>Looks like it has been fixed in 0.10.0 </p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/309", "title": "added support for encrypted ssh-keys", "status": "closed", "labels": [], "priority": null, "description": ["<p><a href=\"https://github.com/sosedoff/pgweb/issues/241\">Issue #241 </a> solved</p>", ["<p>Where does the change to <code>vendor/golang.org/x/crypto/ssh/keys.go</code> come from? </p>", "<p>These are my own changes. I've added my own function <code>decodePrivateKey</code> to the <code>vendor/golang.org/x/crypto/ssh/keys.go</code> and modified some functions in that file in order that would be possible to decrypt a protected key</p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/308", "title": "Import data from CSV file", "status": "closed", "labels": [], "priority": null, "description": ["<p>Refers to #281</p>", ["<p>There are a couple of issues that i noticed:</p>\n<ul>\n<li>No way to specify delimiter for the imported CSV file</li>\n<li>When import fails, there's no error message</li>\n<li>The table name import field is too wide, it should probably take 1/4 or 1/3 of the page</li>\n<li>Panics</li>\n</ul>\n<p>Example panic:</p>\n<p><code>runtime error: invalid memory address or nil pointer dereference\n/usr/local/Cellar/go/1.8.3/libexec/src/runtime/panic.go:489 (0x102a81f)\n    gopanic: reflectcall(nil, unsafe.Pointer(d.fn), deferArgs(d), uint32(d.siz), uint32(d.siz))\n/usr/local/Cellar/go/1.8.3/libexec/src/runtime/panic.go:63 (0x10296ce)\n    panicmem: panic(memoryError)\n/usr/local/Cellar/go/1.8.3/libexec/src/runtime/signal_unix.go:290 (0x103fb0f)\n    sigpanic: panicmem()\n/Users/sosedoff/go/src/github.com/sosedoff/pgweb/pkg/api/api.go:503 (0x14529b4)\n    DataImport: defer file.Close()\n/Users/sosedoff/go/src/github.com/sosedoff/pgweb/vendor/github.com/gin-gonic/gin/context.go:98 (0x137ddfa)\n    (*Context).Next: c.handlers[c.index](c)\n/Users/sosedoff/go/src/github.com/sosedoff/pgweb/pkg/api/middleware.go:31 (0x1456089)\n    dbCheckMiddleware.func1: c.Next()\n/Users/sosedoff/go/src/github.com/sosedoff/pgweb/vendor/github.com/gin-gonic/gin/context.go:98 (0x137ddfa)\n    (*Context).Next: c.handlers[c.index](c)\n/Users/sosedoff/go/src/github.com/sosedoff/pgweb/vendor/github.com/gin-gonic/gin/recovery.go:45 (0x138d86a)\n    RecoveryWithWriter.func1: c.Next()\n/Users/sosedoff/go/src/github.com/sosedoff/pgweb/vendor/github.com/gin-gonic/gin/context.go:98 (0x137ddfa)\n    (*Context).Next: c.handlers[c.index](c)\n/Users/sosedoff/go/src/github.com/sosedoff/pgweb/vendor/github.com/gin-gonic/gin/logger.go:77 (0x138cb3f)\n    LoggerWithWriter.func1: c.Next()\n/Users/sosedoff/go/src/github.com/sosedoff/pgweb/vendor/github.com/gin-gonic/gin/context.go:98 (0x137ddfa)\n    (*Context).Next: c.handlers[c.index](c)\n/Users/sosedoff/go/src/github.com/sosedoff/pgweb/vendor/github.com/gin-gonic/gin/gin.go:290 (0x13843f0)\n    (*Engine).handleHTTPRequest: context.Next()\n/Users/sosedoff/go/src/github.com/sosedoff/pgweb/vendor/github.com/gin-gonic/gin/gin.go:271 (0x1383d0b)</code></p>", "<p>@icalF I can suggest you to use Posgres <a href=\"https://www.postgresql.org/docs/9.6/static/sql-copy.html\">COPY</a> function, which is faster than INSERT INTO</p>", "<p>Closing due to no activity. </p>", "<p>Hi! I picked up this PR and want to finish it. Can you please elaborate about panics: how did you achieve it? </p>", "<p>I created one case of panic by specifying a file with an incorrect structure, but it seem to have recovered from it successfully.</p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/307", "title": "Merge pull request #305 from sosedoff/assets-ci-guard", "status": "closed", "labels": [], "priority": null, "description": ["<p>Trigger CI failure if bindata contains any dev links</p>", ["<p>Whats this ?</p>", "<p>I dont know whats up with this PR. Closing.</p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/306", "title": "Update session.go", "status": "closed", "labels": [], "priority": null, "description": ["", []]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/305", "title": "Trigger CI failure if bindata contains any dev links", "status": "closed", "labels": [], "priority": null, "description": ["<p>Sometimes dev assets sneak into master, this CI guard should trigger failures if there were any dev links found in the <code>bindata.go</code> file</p>", []]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/304", "title": "Not able to view text columns", "status": "closed", "labels": [], "priority": null, "description": ["<p>Hello,</p>\n<p>Apologies ahead of time if this is not the proper forum but I didn't see any pgweb questions on StackOverflow.  I am trying to use pgweb to view the contents of a table with a text column.  Anytime I see the results it always displays the results as some numeric value like \"41006\".  All other columns render perfectly.  I know the contents are something other than \"41006\" because the application I am working on renders the contents correctly.  I know that the contents of the column are JSON, in case this has any effect.</p>\n<p>Thanks,\nRex Sheridan</p>", ["<p>I also tried a query like the following to force the text column to render:</p>\n<p><code>select '''' || payload || ''''  from payment_event</code></p>", "<p>Hi there, which pgweb/postgres version are you using? Could you provide a scrubbed dump with a sample set of data?</p>", "<p>We are using pgweb as of commit <a href=\"https://github.com/sosedoff/pgweb/commit/aba81334a5d1774a5a347ae45ce326ee4e91745f\">aba81334a5d1774a5a347ae45ce326ee4e91745f</a>.  We are using PostgreSQL 9.6.4.  </p>\n<p>Attached screenshots and JSON dump.</p>\n<p><img width=\"771\" alt=\"screenshot 2017-10-20 11 50 09\" src=\"https://user-images.githubusercontent.com/975368/31830033-057e503c-b58d-11e7-89fc-13a18fdb5dbe.png\"></p>\n<p><img width=\"466\" alt=\"screenshot 2017-10-20 11 51 04\" src=\"https://user-images.githubusercontent.com/975368/31830188-732b2b5a-b58d-11e7-9660-b60d149d6941.png\"></p>\n<p><a href=\"https://github.com/sosedoff/pgweb/files/1402537/pgweb-1508514613.txt\">pgweb-1508514613.txt (JSON)</a></p>", "<p>Hm thats strange. Could you try creating a new test db and importing the dump file i attached?\nThen try browsing data/running query in pgweb.</p>\n<p><a href=\"https://github.com/sosedoff/pgweb/files/1402571/pgweb_issue_304.sql.gz\">pgweb_issue_304.sql.gz</a></p>\n<p>Here's what i see:\n<img width=\"539\" alt=\"screenshot 2017-10-20 11 07 29\" src=\"https://user-images.githubusercontent.com/71051/31830801-f24ff822-b586-11e7-9ad9-8143f6ed86fe.png\"></p>\n<p>Also, i noticed that your <code>payload</code> number is incrementing with the record <code>id</code>. Not sure if that matters, just wanted to bring this up. </p>", "<p>When I used your dump file everything looks fine.  Not sure what is going on with my schema.</p>\n<p><img width=\"871\" alt=\"screenshot 2017-10-24 11 00 29\" src=\"https://user-images.githubusercontent.com/975368/31950978-d94938a8-b8aa-11e7-82be-ffb7aa188bdc.png\"></p>", "<p>I was able to recreate the issue by dumping my own data and importing it to a new DB.  It appears related to data populated as large objects.</p>\n<p>I see in the dump file from my schema stuff like the following:\n<code>SELECT pg_catalog.lo_open('41006', 131072);\nSELECT pg_catalog.lowrite(0, '\\x7b227665...');\nSELECT pg_catalog.lo_close(0);</code></p>", "<p>Can you send me the SQL dump so i can reproduce and fix the issue? You can post it here or send it my email (in profile). </p>", "<p>I have attached the SQL dump.</p>\n<p><a href=\"https://github.com/sosedoff/pgweb/files/1413046/pgdump2.sql.gz\">pgdump2.sql.gz</a></p>\n<p>I am using the standard postgres JDBC driver to populate these objects in my application.  Since the contents of the column can be arbitrarily large in my application I am using Clob functionality.  I investigated the source code to see  how the driver is implemented.  When using Clobs the steps it takes are basically the following:</p>\n<ol>\n<li>Invoke the LargeObjectManager as described at <a href=\"https://jdbc.postgresql.org/documentation/94/binary-data.html\">Chapter 7. Storing Binary Data</a> and create a handle (oid) to a large object entry in <a href=\"https://www.postgresql.org/docs/current/static/catalog-pg-largeobject.html\">pg_largeobject</a> and <a href=\"https://www.postgresql.org/docs/current/static/catalog-pg-largeobject-metadata.html\">pg_largeobject_metadata</a></li>\n<li>Write the bytes to pg_largeobject using the handle</li>\n<li>Write the handle oid value to the column of the target table</li>\n</ol>\n<p>This explains why you saw numerical incrementing values in the payload column.  They were oid references to pg_largeobject.</p>\n<p>I am not sure what a good solution would look like here since a text column can also hold normal strings.  How would one differentiate between an oid reference and a string?  Perhaps provide a way to manually tell pgweb \"this value should be dereferenced in pg_largeobject+pg_largeobject_metadata\"? </p>", "<p>@rex-sheridan i'm not sure what to do about this issue. i've never used largeobjects feature before. Given pgweb's limited feature scope i don't think it's worth supporting in the long run, although if someone wanted to create a pr i'd happy to review and merge if possible. I also don't have any time to work on something like this, there's plenty of other bugs/features that i need to take care of first. I also checked Postico to see if they support large objects - same deal, you only see the reference id. </p>", "<p>Now that I am aware of the behavior I think it's totally acceptable to leave pgweb as-is.  No need to clutter the application.  Thanks for your help and for creating a really useful application.</p>", "<p>@rex-sheridan please reopen the issue, please.</p>", "<p>Reopened at the request of @varp. </p>", "<p>@varp why do you need this issue reopened? i thought we've pretty much covered all the ends here. </p>", "<p>@sosedoff sometime we need to do it, right? As you said, someone else might want to do PR. I thought it\u2019s logical to leave the issue opened</p>", "<p>Well, when time comes - sure, but it seems like a lot of hustle right now.</p>", "<p>Closing this issue for now.</p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/303", "title": "Issue#282", "status": "closed", "labels": [], "priority": null, "description": ["<p>I'm not sure about using float64 as connection idle timeout value for comparasion with time.Duration.Minutes() and flags descriptions.</p>", ["<p>Don't check for <code>ConnectionIdleTimeoutDisabled</code> in the  client code, we should disable the worker here (https://github.com/sosedoff/pgweb/blob/master/pkg/cli/cli.go#L200) if the flag is set to <code>true</code>. </p>", "<p>It appears that you've checked in development assets into this PR. bindata file gets updated every time you run <code>make dev</code>. You should run <code>make build</code> or <code>make assets</code> which will produce the correct bindata file. </p>", "<p>My bad(\nfixed</p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/302", "title": "added simple copy to clipboard from data-id prop", "status": "closed", "labels": [], "priority": null, "description": ["<h1>301</h1>\n<ul>\n<li>Added \"Copy Table Name\" to menu for table names</li>\n<li>Added copy to clipboard with original project function &amp; regexp for filtering table namespace</li>\n<li>Changed some tabs in indent to spaces</li>\n<li>Deleted some trailing whitespaces</li>\n</ul>", ["<p>Why do we need a regex here? <code>str.split(\".\")[1]</code> would do the same</p>", "<p>Yeah, you are right, I will update it to string split! thx</p>", "<p>Im merging this, but next time when you submit PR please make sure to run <code>make assets</code> so that bindata.go file is update with the most recent static assets.</p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/301", "title": "Add ability to copy table name from the sidebar", "status": "closed", "labels": ["enhancement", "hacktoberfest"], "priority": null, "description": ["<p>It would be nice to be able to copy the (selected) table name from the sidebar. We currently have ability to copy table column names, you right click on the column and select \"Copy column name\". Same functionality should also work for table names.</p>", ["<p>Hi, shoud it be copied to clipboard from \"data-id\" value or value from <i>...</i>?</p>", "<p>Yeah, copied from <code>data-id</code>, but without the namespace <code>public.mytable</code> -&gt; <code>mytable</code></p>", "<p>Ok, this is available in master now, closing. </p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/300", "title": "Dot now allow using startup bookmark in multi-session mode", "status": "closed", "labels": [], "priority": null, "description": ["", []]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/299", "title": "Search for database with autocomplete", "status": "closed", "labels": [], "priority": null, "description": ["<p>Implemented https://github.com/sosedoff/pgweb/issues/253.\nAutocomplete is implemented with <a href=\"https://github.com/bassjobsen/Bootstrap-3-Typeahead\">Bootstrap-3-Typeahead</a>, a lightweight and actively maintained plugin.\nI tried to keep the original design as much as possible, which includes displaying all the databases inside a dropdown instead of limiting them to a number (line 1056 at app.js).</p>", ["<p>Looks good, i might tweak some UI but this should be all.</p>", "<p>I've tweaked your changes a bit and merged in. Thanks!</p>", "<p>No problem!</p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/298", "title": "Isolate custom query contents between sessions #280", "status": "closed", "labels": [], "priority": null, "description": ["<p>I replaced localStorage with sessionStorage.</p>", ["<p>This change should also account for different modes. If in single session mode - the query data should be available in every tab (just like it works right now), but when it runs in multi-session mode it should only use session storage. </p>", "<p>@sosedoff maybe I missed something, but is there any option to check which mode is used on JavaScript side? If not I was thinking about passing this piece of information via HTTP header or in payload (/connection or /connect endpoint).</p>", "<p>I thought i had it before, but seems like that piece of work has never made it back to master. \nMulti-session flag is not currently present in <code>/connection</code> endpoint, so you can add it as well. See example: https://github.com/sosedoff/pgweb/blob/master/pkg/api/api.go#L391 </p>", "<p>Hmm, I thought about endpoints and I'm not sure whether, in current state of codebase, extending <code>GET /connection</code> will be enough.</p>\n<p>Pretty much there are 2 scenarios when connecting to database</p>\n<ul>\n<li><code>GET /connection (400 error) -&gt; POST /connect</code>, we are not connected, we fill form and connect</li>\n<li><code>GET /connection</code>, we are already connected</li>\n</ul>\n<p>Adding info about single / multiple session(s) to responses for both endpoints <code>GET /connection</code> and <code>POST /connect</code> seems like a bad idea to me.</p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/297", "title": "Postgres 10 support", "status": "closed", "labels": [], "priority": null, "description": ["<p>Making pgweb work with new postgres 10 release: https://www.postgresql.org/about/news/1786/</p>", []]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/296", "title": "Fix panics when sshinfo is not set on bookmarks", "status": "closed", "labels": [], "priority": null, "description": ["", []]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/295", "title": "Disable `-b` (`--bookmark`) startup option when running in multi-session mode", "status": "closed", "labels": ["bug", "hacktoberfest"], "priority": null, "description": ["<p>Bookmark option should be disabled (or ignored) when starting pgweb in multi-session mode. This causes panic:</p>\n<p>```\nPgweb v0.9.9 (git: 4cacfc253c722fc7724e4c688693576dd4a7401d)\npanic: runtime error: invalid memory address or nil pointer dereference\n[signal SIGSEGV: segmentation violation code=0x1 addr=0x28 pc=0x1454014]</p>\n<p>goroutine 1 [running]:\ngithub.com/sosedoff/pgweb/pkg/cli.initClientUsingBookmark(0xc420137460, 0x20, 0x7fff5fbff5c4, 0x3, 0x10b512b, 0xc4200d60c0, 0xc4201545c0)\n    /Users/sosedoff/go/src/github.com/sosedoff/pgweb/pkg/cli/cli.go:48 +0x264\ngithub.com/sosedoff/pgweb/pkg/cli.initClient()\n    /Users/sosedoff/go/src/github.com/sosedoff/pgweb/pkg/cli/cli.go:64 +0x105\ngithub.com/sosedoff/pgweb/pkg/cli.Run()\n    /Users/sosedoff/go/src/github.com/sosedoff/pgweb/pkg/cli/cli.go:184 +0x2b\nmain.main()\n    /Users/sosedoff/go/src/github.com/sosedoff/pgweb/main.go:8 +0x20\n```</p>", ["<p>I'll take it</p>", "<p>@cristianoliveira any progress? regarding the panic, its actually not related to bookmarks, there was a bug with nil ssh info on the bookmark struct which i already fixed in master. </p>", "<p>Hey @sosedoff Sorry. I couldn't take a look into it still. Do you think some change regarding this error on  <code>pgweb/pkg/cli/cli.go</code> is still necessary? If so I can take a look later or other day</p>", "<p>@cristianoliveira i fixed this in #300 </p>", "<p>Ahh great! :)</p>", "<p>Im closing this since the fix has been merged to master</p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/294", "title": "CSV export options", "status": "open", "labels": [], "priority": null, "description": ["<p>There must be options for setting quoting char and delimiter char</p>", []]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/293", "title": "Add export in SQL", "status": "closed", "labels": [], "priority": null, "description": ["<p>It must be useful for moving the part of data of tables to the different DB engines </p>", ["<p>Raw SQL export (whole db/single table) is already implemented and available in 0.9.9</p>", "<p>But not on the SQL results. I have tables with more than dozen millions of rows and sometimes I need a couple of rows from production Postgres DB to a developer MySQL table and the simplest way to do it is just to copy/paste and execute SQL</p>", "<p>How would this feature work on the subset of table data? My guess is that you can always write a custom sql query and export the resulting data as csv, then import that file using postgres csv import feature.</p>\n<p>I don't think this feature request worth implementing (from my point of view) since it's based on a very specific use case.  If you'd like to make it happen - send some code ;)</p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/292", "title": "Save connection options, encrypted, on the disk", "status": "open", "labels": [], "priority": null, "description": ["<p>Need encrypted version of toml server configs (bookmark) for saving passwords to servers. A user must supply master password for encrypting and decrypting.</p>", []]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/291", "title": "Cancel currently running query in SQL editor pane", "status": "closed", "labels": [], "priority": null, "description": ["", ["<p>Dupe</p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/290", "title": "Show functions and procedures in DB", "status": "open", "labels": [], "priority": null, "description": ["", []]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/289", "title": "Add splitter between sql results and editor pane", "status": "closed", "labels": [], "priority": null, "description": ["", ["<p>If you're talking about making the sql editor view resizable, there's already an old ticket: #118</p>", "<p>Then I'm closing the issue</p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/288", "title": "Sort rows in a table by clicking on a column header ( set cursor: pointer )", "status": "closed", "labels": [], "priority": null, "description": ["", ["<p>I believe this is already done in #268</p>", "<p>Sorry, but in #268 announcements there nothing about rows sorting</p>", "<p>Row sorting was implemented a while ago. I was referring to the \"cursor: pointer\" change made in the linked PR. </p>", "<p>Ohh, I understood</p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/287", "title": "Option for setting custom query timeout", "status": "closed", "labels": [], "priority": null, "description": ["<p>The default query running timeout is 5 minutes. The option must be useful when you manipulating large amounts of data</p>", ["<p>+1</p>", "<p>Will implement this in the next release. </p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/286", "title": "Table structure editing feature", "status": "closed", "labels": [], "priority": null, "description": ["<p>The ability to edit table definition/structure. There must be predefined combo box for Postgres data types.</p>", ["<p>This is not going to happen on 0.x branch, so closing for now. Im planning to rewrite the pgweb frontend to accommodate all the editing functionality in pgweb 1.x, coming in 2018.   </p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/285", "title": "Add SQL keyword autocompletion", "status": "closed", "labels": ["enhancement", "hacktoberfest"], "priority": null, "description": ["<p>This is another feature that i wanted to add for years but never had time for. Basically, when you type any SQL statements or functions the UI should be able to find a suggestion, like <code>SELECT</code>, <code>FROM</code>, <code>ORDER</code> etc. Ace editor seems to support that. </p>", ["<p>Hey @sosedoff I will try to do it! I've been using the pgweb and I think it would might be easy :)</p>", "<p>@cristianoliveira have you made any progress on this feature?</p>", "<p>This feature will be a heaven-sent for those who manages hundreds of tables in their database like me :)</p>", "<p>Keyword and object autocompletion is in master now</p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/284", "title": "Issue with building assets", "status": "closed", "labels": [], "priority": null, "description": ["<p>After I ran <code>make setup</code>, I tried to make a few small changes in <code>app.js</code> and <code>index.html</code> under <code>static/</code> and built them with <code>make dev</code>. However the changes won't show when I ran <code>./pgweb</code>. Did I missed any steps?</p>", ["<p>Hm, that should be the only step needed for the local dev. Did you try flushing your browser cache?\nAlso, how did you setup the project?</p>", "<p>I tried to ran it on Safari instead of Chrome and still can't see any changes.\nI cloned the repo under <code>$GOPATH/src/</code>, and <code>git diff</code> shows that <code>pkg/data/bindata.go</code> is modified.</p>", "<p>Ah you probably cloned it under your own namespace in $GOPATH/src, you'll need to clone it as <code>$GOPATH/src/github.com/sosedoff/pgweb</code> so that all package references could stay the same. </p>", "<p>Thanks!</p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/283", "title": "Rows view with jsonb field is slow", "status": "closed", "labels": [], "priority": null, "description": ["<p>I'm not sur if it's json or just jsonb, but I have table with jsonb field that can represent up to 1MB of json (in his text form). The rendering of row view takes from few seconds to few minutes, the most larger the field is the more slow is the rendering.</p>", ["<p>How many rows are we talking about? </p>", "<p>I didn't see if we can set the pagintion to a lower number, than the default, so it's actually 100 row displayed for a total of 15000 row on my dev database, about 15 million on production if it matter, but didn't try  to render it in pgweb installed on my production server.</p>", "<p>Im almost 100% sure the slowness is due to the DOM-building. 1MB per row is a lot of data to be displayed in html. When you click on the table on the sidebar, you'll see a new API query in the pgweb's log:</p>\n<p><code>[GIN] 2017/10/02 - 10:02:53 | 200 |   17.092465ms |       127.0.0.1 |  GET     /api/tables/public.items/rows</code></p>\n<p>That will give you a rough idea on how long did it actually take to process the request. If you see the request duration is very large - let me know so we can troubleshoot this. </p>", "<p>I can't test for a long moment, you can probably close the issue meantime  I'll come back when I'll have information to report back to you.</p>", "<p>any tables that contain large blobs of text or other data will result in UI slowness, there's not much that could be done in the current pgweb version. closing for now.</p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/282", "title": "Make idle connection timeout configurable", "status": "closed", "labels": ["hacktoberfest"], "priority": null, "description": ["<p>Currently we have the inactive timeout value hardcoded in the code, see: https://github.com/sosedoff/pgweb/blob/b6167ce422ee26113222503df60932adc2736ba2/pkg/client/client.go#L369\nThis should be configurable using 2 new cli options:</p>\n<ul>\n<li><code>--disable-connection-idle-timeout</code> - Turn off the feature</li>\n<li><code>--idle-timeout</code> - Set the timeout value</li>\n</ul>", ["<p>Can I take this?</p>", "<p>Go for it!</p>", "<p>I am sorry, but I am not able to figure out how I should fix this. Any help?</p>", "<p>If you still want to implement this feature, here's a few things to do:</p>\n<ul>\n<li>add cli option <code>--idle-timeout</code> (int) to specify maximum connection idle time in minutes, default to 3 hours (180 mins)</li>\n<li>add option <code>--disable-connection-idle-timeout</code> (bool) to disable the timeout feature altogether</li>\n<li>adjust the logic in the session cleanup worker here: https://github.com/sosedoff/pgweb/blob/master/pkg/api/session_cleanup.go</li>\n</ul>", "<p>Is fixing client.IsIdle() func up to using with 2 new clli flags enough?\nOr i missunderstood session cleanup worker?</p>", "<p>Yeah, 2 new flags should control how the cleanup worker terminates idle connection. If we have <code>--disable-connection-idle-timeout</code> set to false we should just turn off the worker here https://github.com/sosedoff/pgweb/blob/master/pkg/cli/cli.go#L201</p>", "<p>https://github.com/ldinc/pgweb/commit/3067b06bf6e8b7f0efd6849983bd4205ddb48915\nOr better change timeout minutes from float64 to int?</p>", "<p>This has been implemented via the following flags:</p>\n<p><code>--no-idle-timeout  Disable connection idle timeout (false)\n--idle-timeout=    Set connection idle timeout in minutes (180)</code></p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/281", "title": "Add ability to import data from CSV file", "status": "open", "labels": ["hacktoberfest"], "priority": null, "description": ["<p>There should be some way to import data from CSV files. It would create a new table and insert all the records from a single file.</p>", ["<p>I'm interested to help with this. Then, how could we determine type of the columns?</p>", "<p>I dont think we need to determine the type, just insert everything as a varchar/text. </p>", "<p>Nice. Will work on it ASAP</p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/280", "title": "Isolate custom query contents between sessions", "status": "open", "labels": ["bug", "hacktoberfest"], "priority": null, "description": ["<p>When running pgweb in multi-session mode, the custom query contents leaks between sessions due to usage of localstorage instead of sessionstorage. Each session must have its own query storage just like it has backend-powered query history. </p>", ["<p>custom uerry contents leak</p>", "<p>@yathuganesh ?</p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/279", "title": "Add new CLI option to disable SSH connections", "status": "closed", "labels": [], "priority": null, "description": ["<p>Implements #278 </p>", []]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/278", "title": "Add ability to disable connections via SSH", "status": "closed", "labels": ["enhancement"], "priority": null, "description": ["<p>In some cases database connections via SSH introduce a security risk due to private key being \"shared\" by all pgweb clients, meaning pgweb daemon does not manage access to any local ssh keys that might be used across different connections. This should be a CLI option, like <code>--disable-ssh</code>.</p>", ["<p>Implemented</p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/277", "title": "SSH Connection Fixes", "status": "closed", "labels": [], "priority": null, "description": ["<ul>\n<li>Allow setting ssh key for new database connections (new)</li>\n<li>Tweak UI to include more ssh key option</li>\n<li>Automatically set ssh port to 22 if its not set</li>\n<li>Add 10 second ssh connect timeout</li>\n</ul>", []]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/276", "title": "Setup a connection manager", "status": "open", "labels": ["enhancement"], "priority": null, "description": ["<p>Currently all session management happens in the api module and does not have any locking around creating/removing sessions, which will cause panics. Lets setup a connection manager that will handle all the session creation/deletion moving forward.</p>", ["<p>+1</p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/275", "title": "Automatically close idle sessions", "status": "closed", "labels": [], "priority": null, "description": ["", []]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/274", "title": "Terminate old sessions", "status": "closed", "labels": ["enhancement"], "priority": null, "description": ["<p>When running pgweb in multi-session mode, there's no way to remove any old sessions. They will stick around for a long time until the server restarts. We should remove any sessions that have no activity within last 24 hours. There's already a timestamp implemented on the client struct that records the last usage time.</p>", ["<p>Implemented in master</p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/273", "title": "Can support CockroachDB?", "status": "closed", "labels": [], "priority": null, "description": ["<p>Great project, :+1: \nBut I tried to use it, I connected CockroachDB, but I couldn't connected .\nCan support CockroachDB?    https://www.cockroachlabs.com/\nthanks.</p>", ["<p>Thank you. There was another issue #235 related to the CockroachDB, but\njust to reiterate on it - no pgweb does not support CockroachDB at this time\nsince it has a bunch of pg-specific queries under the hood. It is possible to make\nit work, but that would require a serious effort. I dont use CockroachDB myself so\ni cant really say if the support will be available in the future. </p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/272", "title": "Automatically open pgweb page if its already running", "status": "closed", "labels": [], "priority": null, "description": ["", []]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/271", "title": "Fix the JSON beautifier flag", "status": "closed", "labels": [], "priority": null, "description": ["<p>New behavior was introduced by #255, however, the CLI flag was setup as a boolean, which didn't allow for disabling of the feature. Reintroducing the new flag <code>--no-pretty-json</code> that will disable the JSON formatting for any exported queries. </p>", []]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/270", "title": "Database export", "status": "closed", "labels": [], "priority": null, "description": ["<p>New feature to allow users to export database (or a single table) as a compressed SQL file using <code>pg_dump</code>. If pg dump utility is not available it will just raise an error.</p>\n<p><img width=\"547\" alt=\"screenshot 2017-09-16 20 35 06\" src=\"https://user-images.githubusercontent.com/71051/30517242-9234e13c-9b1e-11e7-8ad0-08d232e15923.png\"></p>\n<p><img width=\"1259\" alt=\"screenshot 2017-09-16 20 34 58\" src=\"https://user-images.githubusercontent.com/71051/30517241-92345ee2-9b1e-11e7-824d-a489707a1196.png\"></p>", []]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/269", "title": "Add integration tests", "status": "open", "labels": ["enhancement", "hacktoberfest"], "priority": null, "description": ["<p>SUBJ. Pgweb needs at least a base line integration test suite to verify that all the frontend code works.  </p>", ["<p>@varp this is something you can work on if you'd like :) there are a few options on the table right now:</p>\n<ul>\n<li>golang native https://github.com/sclevine/agouti &lt;- def worth looking into</li>\n<li>karma/phanomjs/mocha</li>\n</ul>\n<p>The complexity of the app has been increasing steadily over the time without any backing of the actual integration tests. I've been testing all the features directly in the browser, which is not much actually, but having an automated suite would definitely make it all piece of cake. Integration suite would also help with the ongoing effort to move Pgweb onto a real web framework, like react.</p>", "<p>I'd like to have a go at this. I'm not super familiar with Go, but generally familiar with integration testing.</p>\n<p>I was thinking I'd follow the instructions on <a href=\"http://agouti.org/\">Agouti</a> for setup but I imagine that you'll want me to add a make task to get the test running on Travis. I assume that phantomjs is probably the easiest way to get the test running on travis.</p>\n<p>I imagine I'll write at least one test that does the following:</p>\n<ol>\n<li>Connects to a database</li>\n<li>Query the database</li>\n<li>Disconnect</li>\n</ol>\n<p>When I've got that up I can try to figure out what are the next features to tackle.</p>\n<p>Does that seem like a good strategy @sosedoff ? Do you have any recommendations about how to structure the tests and the code? It looks like the agouti docs have a specific format for naming files and setup etc. but I'm not exactly sure where I should put those files. I assume the root directory is not the most appropriate. I could create some directory called <code>integration</code> perhaps.</p>", "<p>@sosedoff ok. I got it. Just finished reading a book on Golang =) </p>", "<p>@DylanGriffith Agouti requires a specific setup, so if you follow their readme you should be able to get it figured. I usually group my test files by functionality. </p>\n<p>As far as the tests go, we just need coverage for the most functionality like connecting to the database, switching tables, running custom queries, sorting, filtering, pagination, data export and so on. </p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/268", "title": "Table headers context menu", "status": "closed", "labels": [], "priority": null, "description": ["<p>When browsing the table contents you can now right-click on the table header and see the context menu:</p>\n<ul>\n<li><code>Copy column name</code> - self explanatory</li>\n<li><code>Unique values</code> - Performs <code>select distinct column</code> and displays the results</li>\n<li><code>Unique values + counts</code> - Performs <code>select distinct count from table group by column</code> and sorts the results in the descending order.</li>\n</ul>\n<p><img width=\"1409\" alt=\"screenshot 2017-09-16 13 53 01\" src=\"https://user-images.githubusercontent.com/71051/30515058-f94bc832-9ae6-11e7-915e-129c738ba1b2.png\"></p>\n<p><img width=\"730\" alt=\"screenshot 2017-09-16 13 53 12\" src=\"https://user-images.githubusercontent.com/71051/30515061-ff9359d0-9ae6-11e7-97a0-ff4d6ad2d627.png\"></p>", []]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/267", "title": "Add ability to query unique values per column from the table header", "status": "closed", "labels": ["new-feature"], "priority": null, "description": ["<p>Many times i find myself writing a <code>select distinct blah from table</code> query to get all unique values for specific column in the table. A better approach is to create a context menu in the table header with an option to \"Show unique values\".</p>", ["<p>Implemented in #268 </p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/266", "title": "Add ability to connect with settings from third-party backend", "status": "closed", "labels": [], "priority": null, "description": ["<p>This is a new feature that will provide a capability to connect to the database sourced from a third-party backend (http). Related to #248.</p>\n<p>To start pgweb with connect backend feature, run:</p>\n<p><code>pgweb \\\n  --sessions \\\n  --connect-backend=http://localhost:4567/connect \\\n  --connect-token=mytoken \\\n  --connect-headers=X-Forwarded-Email,X-Forwarded-User,X-Forwarded-Access</code></p>\n<p>Then we'll need to setup our backend for pgweb to talk to. Example code in ruby:</p>\n<p>```ruby\nrequire \"sinatra\"</p>\n<h1>Authentication token</h1>\n<p>$token = \"test\"</p>\n<h1>List of all availble resources</h1>\n<p>$resources = {\n  \"id1\" =&gt; \"postgres://localhost:5432/db1?sslmode=disable\",\n  \"id2\" =&gt; \"postgres://localhost:5432/db2?sslmode=disable\",\n  \"id3\" =&gt; \"postgres://localhost:5432/db3?sslmode=disable\"\n}</p>\n<p>helpers do\n  def error(code, message)\n    halt(code, JSON.dump(error: message))\n  end\nend</p>\n<p>before do\n  content_type :json\nend</p>\n<p>post \"/connect\" do\n  req = JSON.load(request.body)</p>\n<p># Check headers \n  if !req[\"headers\"][\"x-forwarded-email\"]\n    error(404, \"Invalid user\")\n  end</p>\n<p># Check the resource\n  resource = $resources[req[\"resource\"]]\n  if !resource\n    error(404, \"Invalid resource\")\n  end</p>\n<p>JSON.dump(\n    database_url: resource\n  )\nend\n```</p>\n<p>And finally, to let pgweb to connect to the database bypassing the login screen, go to the url like this:</p>\n<p><code>http://localhost:8081/connect/id1</code></p>\n<p>On successful connect, pgweb will setup a new user session. This session will only be available in the current tab. </p>\n<p>WIP</p>", []]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/265", "title": "Record last query timestamp", "status": "closed", "labels": [], "priority": null, "description": ["<p>Record the timestamp for the last query executed on the connection. This timestamp will be used moving forward to determine if the connection is stale. </p>", []]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/264", "title": "Print postgres version on start in a single-session mode", "status": "closed", "labels": [], "priority": null, "description": ["<p>Implements #262</p>", []]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/263", "title": "Add wiki entry for running behind nginx", "status": "open", "labels": ["hacktoberfest"], "priority": null, "description": ["", ["<p>My <a href=\"https://github.com/sosedoff/pgweb/issues/84#issuecomment-96741961\">old config post</a> is still working for me. But as comments later brought up do remember to add a note about using basic authentication to protect the system. Since once you log in anyone can hit the URL and get DB access unless you have auth in place.</p>", "<p>@Garbee yeah i get that, but i'd rather have an official manual on hand for all the newcomers to follow. Since i don't use pgweb behind nginx i'll just go over all the manual steps myself, but if you have any configuration samples (excluding already mentioned post) you're welcome to reference them here or send to my email directly. As for the basic app, pgweb has the auth feature, so i'm not sure why people don't use it. </p>", "<p>I don't use the built in auth since that means I need to pull in a user/pass to yet another place on the system. Using nginx's basic auth I can reference my existing accounts in the <code>.htpasswd</code> file for nginx which I use with other protected services as well.</p>\n<p>If pgweb could pull in the existing file to authorize access then I'd be all for it. But as I see the options now in the help explanation it doesn't pull in an existing access file.</p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/262", "title": "Print postgres version when starting server in single session mode", "status": "closed", "labels": ["enhancement"], "priority": null, "description": ["", ["<p>Implemented in master</p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/261", "title": " pq: unknown function: has_schema_privilege()", "status": "closed", "labels": [], "priority": null, "description": ["<p>ENV:\nLinux cp01-mms-feed-ting 3.10.0_1-0-0-8 #1 SMP Thu Mar 24 15:26:50 CST 2016 x86_64 x86_64 x86_64 GNU/Linux</p>\n<p>Pgweb v0.9.8 (git: 5e748d0cefd7063802c6433a1cfcfe467b986352)\nConnecting to server...\nChecking database objects...\nError: pq: unknown function: has_schema_privilege()</p>", ["<p>Which postgresql version are you running ?</p>", "<p>Im closing this issue due to no debug information. I'd need extra info on db/permissions to troubleshoot this issue.</p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/260", "title": "Browse through to record referenced by foreign key [new-feature]", "status": "closed", "labels": [], "priority": null, "description": ["<p>This is a nice feature of <em>DB Browser</em> for SQLite databases. You can cmd / ctrl + click on a referenced foreign key and you are taken to that record in the referenced table. See: https://github.com/sqlitebrowser/sqlitebrowser/issues/192</p>", ["<p>I personally don't have a specific need for this feature as i've always written a custom query to get the exact records i need, but if you have a strong use for this - feel free to submit some code that i can use to implement this. Does not have to be perfect, but if it works that's a good start.</p>", "<p>@varp another feature you could work on.</p>", "<p>Feedback: I like pgweb modern design, but adminer is more feature rich, for example foreign key management. pgweb looks nice but it's good only for data browsing.</p>", "<p>@sosedoff you didn't accept previous ones. I need motivation =) </p>\n<blockquote>\n<blockquote>\n<p>@varp another feature you could work on.</p>\n</blockquote>\n</blockquote>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/259", "title": "Record timestamp of last connection usage", "status": "closed", "labels": ["enhancement"], "priority": null, "description": ["<p>In single/multi sessions mode add a timestamp to track last query/commands. This enhancement will be needed for future work on automatic disconnects due to no activity. </p>", ["<p>Implemented.</p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/258", "title": "Add ability to format SQL queries in the editor", "status": "closed", "labels": ["new-feature"], "priority": null, "description": ["<p>Would be cool to have a button to format SQL queries that are pasted from\nother sources, like Rails's log file. </p>", ["<p>https://github.com/jackc/sqlfmt would be a good candidate for this</p>", "<p>Does not seem to be feasible at the moment. There's no good go package that could format sql queries without any issues. </p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/257", "title": "Not all schemas are showing", "status": "closed", "labels": ["hacktoberfest"], "priority": null, "description": ["<p>I'm wondering what pgweb does/checks in order for it to show user-defined schemas on the left pane.</p>\n<p>Because right now, only the 'public' schema is showing in one of my databases when in fact I have four defined schemas in there with labels as follows: </p>\n<ul>\n<li>agg_daily</li>\n<li>agg_monthly</li>\n<li>main_daily</li>\n<li>main_monthly</li>\n</ul>\n<p>Do note that these schemas only contain Views as of the moment.</p>", ["<p>@Vonatzki which pgweb version are you using? Also could you provide the output (redacted if needed) of <code>http://localhost:8081/api/objects</code> ?</p>", "<p>I'm not quite sure if I followed your instructions to a tee.</p>\n<p>Going to that link churns out <code>{\"error\":\"Session ID is required\"}</code>.</p>\n<p>I have two databases in my postgresql right now. The other one has its schemas showing up on pgweb just fine.</p>\n<p>I'm running pgweb 0.9.8 on a VM with Windows 2012 Server OS</p>", "<p>You need to start pgweb is a single session mode, connect to you db and visit the link i provided earlier. </p>\n<blockquote>\n<p>On Aug 30, 2017, at 12:26 AM, Von Yu <a href=\"&#109;&#97;&#105;&#108;&#116;&#111;&#58;&#110;&#111;&#116;&#105;&#102;&#105;&#99;&#97;&#116;&#105;&#111;&#110;&#115;&#64;&#103;&#105;&#116;&#104;&#117;&#98;&#46;&#99;&#111;&#109;\">&#110;&#111;&#116;&#105;&#102;&#105;&#99;&#97;&#116;&#105;&#111;&#110;&#115;&#64;&#103;&#105;&#116;&#104;&#117;&#98;&#46;&#99;&#111;&#109;</a> wrote:</p>\n<p>I'm not quite sure if I followed your instructions to a tee.</p>\n<p>Going to that link churns out {\"error\":\"Session ID is required\"}.</p>\n<p>I have two databases in my postgresql right now. The other one has its schemas showing up on pgweb just fine.</p>\n<p>\u2014\nYou are receiving this because you commented.\nReply to this email directly, view it on GitHub, or mute the thread.\n</p>\n</blockquote>", "<p>Logging in to the problematic DB and accessing the link, it churns out an empty JSON <code>{}</code>.</p>\n<p>Logging in to my other DB and using the link, it churned out JSON containing schemas and the database objects therein.</p>\n<p>Again, the main difference of the two DBs is that the problematic one doesn't have any Table objects in its schemas, only Views.</p>\n<p>Also, the views located in the problematic DB are created using foreign data wrapper that links it to views located in the other DB.</p>\n<p>Accessing those View objects via the pgweb SQL Query produces results just fine though.</p>", "<p>Ok i will have to reproduce this issue locally. </p>", "<p>Thanks! The app looks promising and I like it that it's only an executable with no dependencies (Is this the Go magic people are raving about?)</p>\n<p>I'd help you on the technicals but I don't know Go. I'll certainly learn more about in the future :)</p>", "<p>@Vonatzki if its possible for you to send me the test dataset (raw sql dump) i'd fix it faster. My email is in my profile. </p>", "<p>On the other hand, if you dont see the schema on the sidebar, there's a chance that it does not have any objects (tables/views/etc). I created an example schema with a single table in it and i could verify it shows up on the sidebar: https://www.dropbox.com/s/dl0jt9gghpx1g5h/Screenshot%202017-09-14%2000.10.15.png?dl=0\nSame goes for the views / etc. See my previous comment: i will need a sample sql dump to reproduce your issue. </p>", "<blockquote>\n<p>Same goes for the views / etc. See my previous comment: i will need a sample sql dump to reproduce your issue.</p>\n</blockquote>\n<p>Apologies for not making a prompt response on this issue.</p>\n<p>Copy, will make an anonymized SQL dump of the problematic DB. I really think it has something to do with schemas exclusively containing foreign-wrapped Views only.</p>", "<p>@Vonatzki can we get this wrapped up? I don't really have anything to work with to reproduce your issue, so please send some example sql data, OR close the issue if it's no longer the case. </p>", "<p>Hi @sosedoff, will close this issue for now. The issue still remains though but I don't have time to recreate an anonymized version of the said issue for you. Apologies.</p>\n<p>If you have time, the tables were created with the same process like the one in this link when creating the foreign data wrapped tables: </p>\n<p>https://robots.thoughtbot.com/postgres-foreign-data-wrapper</p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/256", "title": "Use alpine:3.6 as a docker base image", "status": "closed", "labels": [], "priority": null, "description": ["<p>Subj. Will need to check the image size as well to make sure it's as thin as the current one.</p>", []]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/255", "title": "Pretty-print JSON results by default", "status": "closed", "labels": [], "priority": null, "description": ["<p>This is an experimental feature. Basically the results downloaded in JSON format will be\nautomatically pretty-printed. I'm thinking for raw results we can support an url param, like <code>/api/query?format=json&amp;raw=1</code>.</p>\n<p>Performance implications are pretty small: pretty print vs regular export had only 700ms difference on 50 mb data dump. With that, the output could be used for something like #249.</p>", []]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/254", "title": "Expose postgres comments to table and columns", "status": "closed", "labels": [], "priority": null, "description": ["<p>We use pgweb for individuals to query the database in a read-only manner, this allows them to discover the schema for those tables and columns which aren't self-explanatory.</p>", ["<p>@skabbes new version 0.9.8 is out</p>", "<p>I saw that! Thank you, already updated</p>\n<p>On Sat, Aug 5, 2017, 11:45 AM Dan Sosedoff <a href=\"&#109;&#97;&#105;&#108;&#116;&#111;&#58;&#110;&#111;&#116;&#105;&#102;&#105;&#99;&#97;&#116;&#105;&#111;&#110;&#115;&#64;&#103;&#105;&#116;&#104;&#117;&#98;&#46;&#99;&#111;&#109;\">&#110;&#111;&#116;&#105;&#102;&#105;&#99;&#97;&#116;&#105;&#111;&#110;&#115;&#64;&#103;&#105;&#116;&#104;&#117;&#98;&#46;&#99;&#111;&#109;</a> wrote:</p>\n<blockquote>\n<p>@skabbes <a href=\"https://github.com/skabbes\">https://github.com/skabbes</a> new version 0.9.8 is out</p>\n<p>\u2014\nYou are receiving this because you were mentioned.</p>\n<p>Reply to this email directly, view it on GitHub\n<a href=\"https://github.com/sosedoff/pgweb/pull/254#issuecomment-320463065\">https://github.com/sosedoff/pgweb/pull/254#issuecomment-320463065</a>, or mute\nthe thread\n<a href=\"https://github.com/notifications/unsubscribe-auth/AAkJMqcddqUjxMHXuN-FaI4lQ8-RGCVPks5sVLhCgaJpZM4OuMBu\">https://github.com/notifications/unsubscribe-auth/AAkJMqcddqUjxMHXuN-FaI4lQ8-RGCVPks5sVLhCgaJpZM4OuMBu</a>\n.\n</p>\n</blockquote>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/253", "title": "Allow searching for a database via autocomplete textbox", "status": "closed", "labels": ["hacktoberfest", "new-feature"], "priority": null, "description": ["<p>Currently there's no way to find a specific database when you click on the database switcher in the sidebar. If you have a lot of local databases the list becomes pretty long and unusable. </p>\n<p>New feature: when i click on the database name it should open up a modal with the text input. Then i can type a partial name and see autocomplete results. This is similar to OSX finder feature / alfred app.</p>", ["<p>This is a very nice feature to have :)</p>", "<p>I am interested in working on this. :)</p>", "<p>For autocomplete, is there a preference on whether to utilize a third party library or not?</p>", "<p>Third-party lib is fine as long as it does not pull the whole jQuery-UI stuff in. </p>", "<p>Closing this since the feature has been implemented.</p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/252", "title": "How to compile HTML and other static files", "status": "closed", "labels": [], "priority": null, "description": ["", ["<p>https://github.com/jteeuwen/go-bindata</p>", "<p>In regards to this project, there are two make tasks available to compile assets:</p>\n<ul>\n<li><code>make dev</code> (will build assets that are auto-loaded from the dist on every page serve)</li>\n<li><code>make assets</code> (will build assets that are served from the app itself and not from the disk).</li>\n</ul>\n<p>Check <code>Makefile</code> for more details.\nAnd yes, as previously mentioned, assets are built with go-bindata package. </p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/251", "title": "\u5982\u4f55\u7f16\u8bd1html\u7b49\u524d\u7aef\u6587\u4ef6", "status": "closed", "labels": [], "priority": null, "description": ["", ["<p>Please submit issues in english. Even with the translation i don't understand your question.</p>", "<p>@IIInsomnia \npgweb \u4f7f\u7528 go-bindata \u7f16\u8bd1\u524d\u7aef\u6587\u4ef6 \n\u4f60\u53ef\u4ee5\u5b66\u4e60\u4e00\u4e0b https://github.com/jteeuwen/go-bindata</p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/250", "title": "List of functions in the left control panel alongside Tables, Views, etc", "status": "open", "labels": [], "priority": null, "description": ["<p>Hi!</p>\n<p>Now it's impossible to see the list of functions (stored procedures) belonging to the scheme. In perspective I would like not only to see the body of function but to store its updated version (CREATE OR REPLACE FUNCTION query)</p>", ["<p>List of functions could be added, but i'm not sure about function editor. You can always use custom sql query tab for that. Pgweb does not really have any way to modify any database stuff (except for the query tab) at the moment. </p>", "<blockquote>\n<p>List of functions could be added, but i'm not sure about function editor. You can always use custom sql query tab for that</p>\n</blockquote>\n<p>Yes, sql query tab is intended for editing any queries including function body. But it would be nice to see the list of functions on left panel and have some tabs describing properties of selected function.</p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/249", "title": "Support the ouput of query result in pretty json format", "status": "closed", "labels": [], "priority": null, "description": ["<p>Hi!</p>\n<p>Thanks for the development of great web client to postgres. But my colleagues and I would like to see the feature of printing query result in the result window in formats other than tabular (e.g. structured indented json).</p>\n<p>How is this possible? Can I join the project to implement this feature?</p>", ["<p>There's already a JSON export button available on the custom query page. Is that what you're looking for? </p>", "<p>Do you mean the button that downloads a query result?\nI propose the feature of printing result on window in specified format so that it can be copy-pasted to somewhere. Moreover, this format should be pretty to look at.</p>", "<p>I think a \"Copy as JSON\" button is quite doable for modern browsers. But, a JSON <em>view</em> I feel is not incredibly useful to most users.</p>", "<p>Im closing this issue since there's a very little need for this specific use case. I've just added a new feature to allow downloading query results as a formatted JSON file (see master), that should be enough to get by. If that does not suit your needs, feel free to submit a patch, i'd be happy to review and merge.</p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/248", "title": "Integrate with an existing website", "status": "closed", "labels": [], "priority": null, "description": ["<p>Hi, I'm trying to integrate pgweb with an existing website (hosted on aws beanstalk with nodejs, within a load balanced environment). I want to have a button on the website which opens up the \"database explorer\", bypassing the pgweb login page as I already have those credentials in the nodejs server hosting the website (and in fact, the user might not even know the credentials to the database, only the credentials to the website).</p>\n<p>Currently, the only way for bypassing the login page, from what I understand, is by specifying it in the command line when spinning up the pgweb server, right?\nWhich means that I'll need to spin up a server by demand for each user, and on a different port for each user? So this is not a practical solution (especially with regards to configuring all of the port forwarding rules).</p>\n<p>Is there any better way for supporting this scenario?</p>\n<p>2 potential solutions:\n1. Support passing connection bookmarks in the url for an existing pgweb server, and not just on startup. So I'll be able to spin up a single pgweb server in advance. Related to #204 .\n2. Ideally, I would want to have pgweb as a library in my existing server, and not to spin up an additional server. So for a specific sub-domain I will forward the request to pgweb (with an option for me to hook to the output before rendering, for example for giving better matching colors for my website).</p>\n<p>Thanks.</p>", ["<p>Hey, sorry for the late response.</p>\n<p>I can definitely see your use case, although it will require a bit of work to implement the\nfunctionality in question.</p>\n<p>Few thoughts here:</p>\n<ol>\n<li>\n<p>Passing a database connection string in the url would be the easiest solution. That way we can have a connection token on the client (browser) that will correspond to a server connection. There's already something like that in place: session connections. When sessions are enabled (<code>--sessions</code> flag) you can have multiple connections, one per browser tab (using session storage). This approach will still require user to specify the connection credentials or choose a bookmark. </p>\n</li>\n<li>\n<p>You can have a bookmarks file in your system that will provide access to all your connections. You might as well manage that file dynamically (once you allocate/deallocate resources). Each bookmark must have a unique filename (*.toml). Pros: we don't expose any server credentials in the url and just use the bookmark name as a reference. Cons: each client that has access to the exposed pgweb instance will be able to use any of the available bookmarks without any restrictions. Perhaps we can add a new attribute to the bookmarks file that will clearly indicate that the bookmark file is not \"discoverable\", meaning it won't be listed anywhere in the pgweb. </p>\n</li>\n<li>\n<p>There are a couple featured that aim at making the pgweb be used in \"exporer\" mode (<code>--readonly</code>, <code>--lock-session</code> flags). However, they're not 100% bulletproof as they're not enforcing any particular rules on the database. Try those, maybe they're good enough for your use case. </p>\n</li>\n</ol>\n<p>With all that said, my only concern is that not enough people expressed their interest in the functionality in question. I'm interested to work on this since i have the same issue once in a while, but i'd like implement it in a most generic way and keep things simple.</p>\n<p>Let me know anyway. Or if you have a POC - i'd like to have a look.\nCheers!</p>", "<p>@sosedoff \nHi,</p>\n<p>I'm working on embedding pgweb in our system. \nWe have a SSO system for authentication and authorization.\nTo make the integration seamless (\"bypassing the pgweb login page\") I'm adding a REST route that takes an <code>id</code>. The handler goes through authorization process with the authorization server, gets the connection credentials (using the <code>id</code>) from another service, and finally invokes the <code>connect</code> handler.\nI could either implement it directly in pgweb's code, or implement a gin middleware.\nI can make it generic enough for others to use.\nWould you like me to make a pool request with this once it's done? Do you have any preferences  regarding the implementation?</p>\n<p>Thanks</p>", "<h1>207</h1>\n<p>I see i'm not the first one to come up with this suggestion.</p>", "<p>Hi,</p>\n<p>We've been attempting to integrate pgweb into our system and attempted some of the suggestions given by @sosedoff, however our use case is such that we'd like to hide connection credentials from the user and and be able to have any number of sessions. The sessions flag works well, but we'd need a way of passing credentials for each session as well.</p>\n<p>The changes @maximRNBack is proposing seems to fit our use case, although it would also need to work well with sessions.</p>\n<p>Thanks!</p>", "<p>@wshi94 @tzachshabtay How do you guys authenticate your users?\nWe use Keycloak. I'm currently working on a gin middleware for  <a href=\"http://openid.net/specs/openid-connect-core-1_0.html#CodeFlowAuth\">OIDC Authorization Code Flow</a> using the <a href=\"https://github.com/coreos/go-oidc\">go-oidc package</a>.\nIt should work with any OIDC compliant authorization provider. Would this work for you?</p>\n<hr />\n<blockquote>\n<p>The changes @maximRNBack is proposing seems to fit our use case, although it would also need to work well with sessions.</p>\n</blockquote>\n<p>My solution assumes you use pgweb's <code>sessions</code> flag.</p>", "<p>@maximRNBack we use google for our authentication, so if I understand correctly it should work fine with OIDC.</p>", "<p>@tzachshabtay  I have something working but the code is a mess. Would you like me to clean it up a bit and upload it? :) </p>", "<p>@maximRNBack yes, that would be sweet, thanks.</p>", "<p>@maximRNBack any updates?\nThanks.</p>", "<p>@maximRNBack If you have any meaningful code for us to review/test, please share it somewhere (Github PR/etc). I have a spec that i would like to move forward with but i'm not sure if there was any developments on this front. Let me know.</p>", "<p>@tzachshabtay @maximRNBack i implemented the authentication feature via http backend here #266, have a look. Let me know if you have any questions. </p>", "<p>Hi guys,\nSorry for the late response. It took me longer then I thought.</p>\n<p>If you want to see the final result check out <a href=\"https://devdashboard.rnback.com/\">rnback's staging subdomain</a>. Soon we'll move it to <a href=\"https://dashboard.rnback.com/\">rnback's production subdomain</a>.</p>\n<p><a href=\"https://github.com/maximRNBack/pgweb/commit/8627baa75267969d9f92bcf712a8abac662fed1b\">The source diff can be found here (github.com/maximRNBack/pgweb/)</a></p>\n<p>@sosedoff  I made an effort to make a minimal impact on pgweb's codebase to simplify merges with future versions of pgweb. If a pull request is an option I'd be happy to make the necessary changes to fit with pgweb's code in a cleaner manner.</p>\n<p>My high-level design:\nThe integrating website has a page with a HTML <code>&lt;iframe /&gt;</code> pointing to <code>https://pgweb-domain/authorize/&lt;requested db id&gt;</code>.\nAccessing this domain would:\n1. <strong>seamlessly</strong> authenticate the user against the identity provider (<code>SSO</code> - <code>OIDC</code>) using my <code>gin_oidc</code> middleware\n2. authorize the access - make sure the user should have access to the requested DB\n3. get the DB's connection URL\n4. connect the user to the DB\n5. send redirect response to pgweb's homepage (he'll skip the connection form since he's connected)\n6. if there was an error in the process - redirect to an error page</p>\n<p><strong>note on (2) + (3):</strong> (<code>\"getConnUrlEndpoint\"</code>) developers should add a <code>POST</code> endpoint (possibly with <code>CORS</code> and <code>OPTIONS</code> enabled - depends on the architecture) to their website's backend that will receive  user's info (<code>oidc claims</code> acquired during authentication) and the <code>&lt;requested db id&gt;</code> and upon successful authorization will return the DB connection URL. Upon failure an error will be returned. My current implementation requests a <code>bearer access token</code> from the Identity provider configured in <code>\"credentialsOidcConfig\"</code> in the json configurations file, and sends it in the authorization HTTP header. I guess it's an overkill if the endpoint is on the same server and limited only to <code>localhost</code> but that's not the case in my architecture, plus we're passing credentials so I prefer a safer implementation. I guess this could be optional.</p>\n<p><strong>node on (6):</strong> (<code>errorEndpoint</code> ) developers should add a <code>GET</code> endpoint to their website's backend that will receive an error message in the query parameter <code>err</code> and show an error page (or do whatever they want)</p>\n<p>configurations file example(<code>secrets.json</code> in executable's dir):</p>\n<p><code>``javascript\n{\n  //(string) id in the authorization service (OIDC provider)\n  clientId,\n  //(string) secret from the authorization service (OIDC provider)\n  clientSecret, \n  //(string) the URL identifier for the authorization service. for example: \"https://accounts.google.com\" - try adding \"/.well-known/openid-configuration\" to the end of the path to make sure it's correct\n  issuer, \n  //(string) pgweb's url. for example: \"http://localhost:8081/\" or \"https://pgweb.mydomain.com/ - we can also extract it from pgweb's</code>--bind<code>flag\n  pgwebUrl,\n  //(array of strings) OAuth scopes. for example: [\"openid\", \"profile\", \"email\"]\n  scopes, \n  //redirection url after logout\n  LogoutRedirectUrl,\n}\n{\n  //users authentication OIDC configurations\n  \"usersOidcConfig\": {\n    //(string) id in the authorization service (OIDC provider)\n    \"clientId\": \"pgweb\",\n    //(string) secret from the authorization service (OIDC provider)\n    \"clientSecret\": \"cd850d22-791e-4347-9220-fb6da8f8271d\",\n    //(string) the URL identifier for the authorization service. for example: \"https://accounts.google.com\" - try adding \"/.well-known/openid-configuration\" to the end of the path to make sure it's correct\n    \"issuer\": \"http://localhost:8080/auth/realms/Developers\",\n    //(array of strings) OAuth scopes. for example: [\"openid\", \"profile\", \"email\"]\n    \"scopes\": [\n      \"openid\",\n      \"profile\",\n      \"email\"\n    ]\n  },\n  //pgweb's bearer OIDC configurations (might be the same as 'usersOidcConfig')\n  \"credentialsOidcConfig\": {\n    \"clientId\": \"pgweb\",\n    \"clientSecret\": \"cd850d22-791e-4347-9220-fb6da8f8271d\",\n    \"issuer\": \"http://localhost:8080/auth/realms/Developers\",\n    \"scopes\": [\n      \"openid\",\n      \"profile\",\n      \"email\"\n    ]\n  },\n  //(string) pgweb's url. for example: \"http://localhost:8081/\" or \"https://pgweb.mydomain.com/ - we can also extract it from pgweb's</code>--bind` flag\n  \"pgwebUrl\": \"http://localhost:8081/\",\n  //(string) redirection url after logout\n  \"logoutRedirectUrl\": \"http://localhost:3000/\",\n  //(string) the endpoint developers should implement for the authorization and retrival of connection credentials\n  \"getConnUrlEndpoint\": \"http://localhost:3000/pgweb/get-conn-url\",\n  //(string) the endpoint developers should implement to handle with errors\n  \"errorEndpoint\": \"http://localhost:3000/pgweb/error\"\n}</p>\n<p>```</p>\n<p>to run pgweb use:</p>\n<p><code>bash\n./pgweb --server-sessions --sessions --skip-open</code></p>\n<p>Here's an implementation of <code>getConnUrlEndpoint</code> and <code>errorEndpoint</code> in an express app:\n(NOTE - access token validation is not included. It depend's on your setup)</p>\n<p>```javascript\nconst express = require('express');\nconst cors = require('cors');\nconst assert = require('assert');</p>\n<p>const router = express.Router();\nconst corsOptions = {origin: true}; // in production should be something like {origin: ['https://my.pgweb.domain'],methods: ['POST', 'OPTIONS']};</p>\n<p>router.options('/get-conn-url', cors(corsOptions));// enable pre-flight request\nrouter.post('/get-conn-url', cors(corsOptions), (req, res) =&gt; {\n  const dbId = req.body.id;\n  assert(!!dbId, 'didn\\'t get db id in request');\n  const email = req.body.oidcClaims.email;\n  assert(!!email, 'didn\\'t get email in request');\n  const emailsWithAccess = getUsersWithAccessToDb(dbId).map(u =&gt; u.email);\n  assert(email in emailsWithAccess, 'email mismatch');\n  const c = getDbCredentials(dbId);\n  res.status(200).send(<code>postgres://${c.user}:${c.password}@${c.host}:${c.port}/${c.database}?sslmode=require</code>);\n});\nrouter.get('/error', (req, res) =&gt; {\n  res.render('ErrorPage', {\n    title: 'CONNECTION ERROR',\n    subtitle: 'failed to authorize access to database',\n    paragraph: 'The error was logged. Please try refreshing the page, or in a few minutes. If the error persists please contact us.',\n  });\n});</p>\n<p>module.exports = router;\n```</p>\n<p>I've also made some UI changes but I didn't include them in the commit. Is anyone interested? </p>\n<p>One last note - if you're trying to clone my repo and build it - the build will fail because some of the dependencies assume you're in <code>sosedoff</code> source dir. You'll need to clone <code>sosedoff</code> repo into <code>$GOPATH/src/github.com/sosedoff/pgweb</code>, add my repo as another remote, fetch my branch and then build.\n@tzachshabtay  @sosedoff  @wshi94  let me know what you think </p>", "<p>@maximRNBack Interesting. Have you looked at https://github.com/bitly/oauth2_proxy? I've used that proxy to setup oauth stuff in front of pgweb instead of rolling my own. </p>", "<p>At a glance this would solve half of the problem for me. The authentication of users (i.e. is this my user?) would be solved, but the authorization (i.e. should the user be able to access the requested database?) and the secure database credentials request (I need to be sure it's pgweb requesting the credentials) are still missing.</p>\n<p>Thanks for the quick reply. I'll look into it and get back to you.</p>", "<p>I got <a href=\"https://github.com/bitly/oauth2_proxy\">oauth2_proxy</a> to work. But like I said, it only takes care of the authentication aspect.</p>\n<p>I propose adding two optional features/flags on top of your #266 proposal. <a href=\"https://github.com/sosedoff/pgweb/compare/connect-backend...maximRNBack:token-connect-backend\">You can see the changes here</a>. </p>\n<ul>\n<li><code>--connect-token-conf</code> - path to a configurations file for <code>bearer access token</code> request (it's <code>OAuth2</code>'s <code>client credentials grant</code> flow). The token is attached to the url-connection request. This is a bit safer than the fixed token. <a href=\"https://github.com/maximRNBack/pgweb/commit/ba9f0874679a3c4db512515bfffd7f0b28b9813e\">[this is the relevant commit]</a></li>\n<li>To be able to authorize the request, I need to know who is trying to access the <code>resource</code>. For that I added <code>--connect-with-header</code> flag that takes a <code>http header</code> name. It passes the header with that name from the browser's request to the url-connection request. <a href=\"https://github.com/maximRNBack/pgweb/commit/c3a4fe883fca13b9695115ea3bf7a0b7523815af\">[this is the relevant commit]</a>  The browser's request also passes through <code>oauth2_proxy</code>, where I can attach some identifying details I can trust.</li>\n</ul>\n<p>What do you think? @sosedoff </p>", "<p>Wow, thank you guys for your hard work!</p>\n<p>@sosedoff saw you wrote in the PR (\"sourced from a third-party backend (http).\"), will it also work for https backend?</p>\n<p>I'm currently on a long vacation, so won't have time to look at the two solutions offered at least until mid October. Perhaps @wshi94 will have time to examine them.</p>", "<p>@maximRNBack will look into your stuff.</p>\n<p>@tzachshabtay yes, any http(s) endpoint will work.</p>", "<p>@maximRNBack reviewed your stuff, and here's my thoughts:</p>\n<ul>\n<li>\n<p>i would rather prefer to keep out all the authentication (oauth/etc) functionality out of pgweb, all that stuff is really out of scope of this project. mainly to keep it as simple as possible.</p>\n</li>\n<li>\n<p>we can make pgweb work really nice with oauth2-proxy project since it has all the necessary bits and pieces in order to make the auth really work.</p>\n</li>\n</ul>\n<p>Based on points above i made a few changes to the ongoing #266 proposal. Here's how it would work in combination with oauth2-proxy:</p>\n<ul>\n<li>\n<p>Start the proxy with all the config flags and settings you need, add the <code>-upstream</code> flag to point to the pgweb</p>\n</li>\n<li>\n<p>Start the pgweb server with backend flags:</p>\n</li>\n</ul>\n<p><code>pgweb \\\n  --sessions \\\n  --connect-backend=http://your-internal-url/ \\\n  --connect-token=test \\\n  --connect-headers=X-Forwarded-Email,X-Forwarded-User,X-Forwarded-Access-Token</code></p>\n<p>We will still need the <code>--connect-token</code> in order to make sure that all the \nrequests originating from pgweb are verified by a third-party connect backend\napi. </p>\n<p>The next part is <code>--connect-headers</code>. Any listed headers names will be grabbed\nand passed through to the connect backend api. In this particular case, oauth2-proxy\nwill inject those headers automatically, except for <code>X-Forwarded-Access-Token</code>. \nYou'll have to start oauth2-proxy with <code>-pass-access-token</code> flag.</p>\n<ul>\n<li>Connect phase</li>\n</ul>\n<p>When user visits http://yourhost/connect/ID, first it hits the oauth2-proxy that\nwill validate credentials (google/github/whatever), then it will make a call to \npgweb on <code>/connect/ID</code> path. Pgweb on its part will build a JSON payload (see below)\nand make a call to the connect backend. If backend responds with a valid \n<code>database_url</code> key (response must be json-encoded) then pgweb will try to connect\nto the provided resource url.</p>\n<p>Example JSON payload pgweb will send to the connect api:</p>\n<p><code>json\n{\n  \"resource\": \"testresource\",\n  \"token\": \"backendtoken\",\n  \"headers\": {\n    \"x-forwarded-access-token\": \"ya29.GlvNBAv52OrEW7Wx-tF9ntL442...redacted\",\n    \"x-forwarded-email\": \"dan.sosedoff@gmail.com\",\n    \"x-forwarded-user\": \"dan.sosedoff\"\n  }\n}</code></p>\n<p>As far as i can see this strategy covers pretty much all the ends while keeping\npgweb slim and simple.  </p>\n<p>Let me know if that works for you or if you have any other thoughts.</p>", "<p>@sosedoff Looks great. I can work with that.\nThanks!</p>\n<hr />\n<p>One other note. It might be off-topic. I can open another issue if you'd like. It's regarding pgweb's <code>\"x-session-id\"</code> http header.</p>\n<p>Lets say <code>user A</code> and <code>user B</code> both sign in and access their DBs. If <code>user B</code> somehow gets a hold on <code>user A</code>'s <code>sessionId</code> he can go to <code>http://mypgweb.domain/?session=&lt;user A's session id&gt;</code> and access a DB he shouldn't be able to access. It's pretty hard to get a hold on the <code>sessionId</code> value, since http request header &amp; query parameters are end-to-end encrypted with <code>https</code>. Still there are security issues I don't want to get into. </p>\n<p>The bottom line is - it might be a good idea to integrate a more advanced approach internally (it won't affect pgweb's API). Maybe replace the <code>sessionId</code> with <code>JWT</code>.</p>", "<p>Right, the session token wasn't exposed before. Feel free to open the ticket for that, although im not going to get on it right away.</p>", "<p>I've merged the #266 and will continue to improve the security side of things moving forward. \nWrote a new wiki entry for the reference: https://github.com/sosedoff/pgweb/wiki/Connect-Backend.\nI'll leave the issue open for the time being in case if someone has any questions. \ud83e\udd18\ud83c\udffd</p>", "<p>Im going to close this one since it has been quiet for almost 2 months now. Feel free to reopen or submit a new ticket with any questions. </p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/247", "title": "Test primarily on postgres 9.6", "status": "closed", "labels": [], "priority": null, "description": ["", []]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/246", "title": "Require confirmation to close the connection", "status": "closed", "labels": [], "priority": null, "description": ["", []]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/245", "title": "Javascript fixes for IE9-11", "status": "closed", "labels": [], "priority": null, "description": ["<p>Fixes #231 </p>", []]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/244", "title": "Bookmarks fall back to sslmode=disable if mode is not set or invalid", "status": "closed", "labels": [], "priority": null, "description": ["", []]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/243", "title": "Tests for my fork (without any changes!) not working", "status": "closed", "labels": [], "priority": null, "description": ["<p>I've added a small feature to pgweb and i would like to run all tests before creating a pull request, but I can't get the tests running. Even without any changes to the tests are failing... Would be cool if someone could help.</p>\n<h2>Official sources</h2>\n<p>```\njan@thrudvang ~$ go get github.com/sosedoff/pgweb</p>\n<p>jan@thrudvang ~$ cd $GOPATH/src/github.com/sosedoff/pgweb/</p>\n<p>jan@thrudvang pgweb (master)$ git rev-parse HEAD\n03d3c35a863fe5263f554b80254cd3bf2731e494</p>\n<p>jan@thrudvang pgweb (master)$ make dev\ngo-bindata -o pkg/data/bindata.go -pkg data -debug  -ignore=[.]gitignore -ignore=[.]gitkeep static/...\ngo build\nYou can now execute ./pgweb</p>\n<p>jan@thrudvang pgweb (master)$ make test</p>\n<p>go test -cover ./pkg/...\n--- FAIL: Test_assetContentType (0.00s)\n        Error Trace:    api_test.go:27\n        Error:          Not equal: \"application/x-font-woff\" (expected)\n                                != \"application/font-woff\" (actual)</p>\n<pre><code>    Error Trace:    api_test.go:27\n    Error:          Not equal: \"application/x-font-ttf\" (expected)\n                            != \"application/font-sfnt\" (actual)\n</code></pre>\n<p>FAIL\ncoverage: 7.1% of statements\nFAIL    github.com/sosedoff/pgweb/pkg/api       0.009s\nok      github.com/sosedoff/pgweb/pkg/bookmarks 0.005s  coverage: 97.4% of statements\n?       github.com/sosedoff/pgweb/pkg/cli       [no test files]\nok      github.com/sosedoff/pgweb/pkg/client    6.641s  coverage: 50.6% of statements\nok      github.com/sosedoff/pgweb/pkg/command   0.005s  coverage: 64.7% of statements\nok      github.com/sosedoff/pgweb/pkg/connection        0.004s  coverage: 90.0% of statements\n?       github.com/sosedoff/pgweb/pkg/data      [no test files]\n?       github.com/sosedoff/pgweb/pkg/history   [no test files]\n?       github.com/sosedoff/pgweb/pkg/shared    [no test files]\n?       github.com/sosedoff/pgweb/pkg/statements        [no test files]\n?       github.com/sosedoff/pgweb/pkg/util      [no test files]\nMakefile:28: recipe for target 'test' failed\nmake: *** [test] Error 1\n```</p>\n<h2>My fork</h2>\n<p>```\njan@thrudvang ~$ go get github.com/janpieper/pgweb</p>\n<p>jan@thrudvang ~$ cd $GOPATH/src/github.com/janpieper/pgweb/</p>\n<p>jan@thrudvang pgweb (master)$ git rev-parse HEAD\n03d3c35a863fe5263f554b80254cd3bf2731e494</p>\n<p>jan@thrudvang pgweb (master)$ make dev\ngo-bindata -o pkg/data/bindata.go -pkg data -debug  -ignore=[.]gitignore -ignore=[.]gitkeep static/...\ngo build\nYou can now execute ./pgweb</p>\n<p>jan@thrudvang pgweb (master)$ make test\ngo test -cover ./pkg/...</p>\n<h1>github.com/janpieper/pgweb/pkg/cli</h1>\n<p>pkg/cli/cli.go:140: cannot use router (type <em>\"github.com/janpieper/pgweb/vendor/github.com/gin-gonic/gin\".Engine) as type </em>\"github.com/sosedoff/pgweb/vendor/github.com/gin-gonic/gin\".Engine in argument to api.SetupRoutes\n--- FAIL: Test_assetContentType (0.00s)\n        Error Trace:    api_test.go:27\n        Error:          Not equal: \"application/x-font-woff\" (expected)\n                                != \"application/font-woff\" (actual)</p>\n<pre><code>    Error Trace:    api_test.go:27\n    Error:          Not equal: \"application/x-font-ttf\" (expected)\n                            != \"application/font-sfnt\" (actual)\n</code></pre>\n<p>FAIL\ncoverage: 7.1% of statements\nFAIL    github.com/janpieper/pgweb/pkg/api      0.009s\nok      github.com/janpieper/pgweb/pkg/bookmarks        0.005s  coverage: 97.4% of statements\nMakefile:28: recipe for target 'test' failed\nmake: *** [test] Error 2\n```</p>\n<h2>Go Env</h2>\n<p><code>jan@thrudvang ~$ go env\nGOARCH=\"amd64\"\nGOBIN=\"\"\nGOEXE=\"\"\nGOHOSTARCH=\"amd64\"\nGOHOSTOS=\"linux\"\nGOOS=\"linux\"\nGOPATH=\"/home/jan/.go\"\nGORACE=\"\"\nGOROOT=\"/usr/lib/go-1.8\"\nGOTOOLDIR=\"/usr/lib/go-1.8/pkg/tool/linux_amd64\"\nGCCGO=\"gccgo\"\nCC=\"/usr/bin/gcc-4.6\"\nGOGCCFLAGS=\"-fPIC -m64 -pthread -fmessage-length=0 -fdebug-prefix-map=/tmp/go-build397639421=/tmp/go-build -gno-record-gcc-switches\"\nCXX=\"g++\"\nCGO_ENABLED=\"1\"\nPKG_CONFIG=\"pkg-config\"\nCGO_CFLAGS=\"-g -O2\"\nCGO_CPPFLAGS=\"\"\nCGO_CXXFLAGS=\"-g -O2\"\nCGO_FFLAGS=\"-g -O2\"\nCGO_LDFLAGS=\"-g -O2\"</code></p>", ["<p>@janpieper Seems like there was some change related to the <code>x-font-woff</code> mime type in go 1.8.3 (i believe). I was using go 1.8.1 until today and tests were all passing. I pushed a change to master that fixes the problem. </p>", "<p>@sosedoff No, this isn't the problem. I'm not complaining about a failing test. The whole testsuite is crashing (Error 2) without any changes to the code. The <code>x-font-woff</code> test was failing in both cases.</p>\n<h3>Official sources</h3>\n<p><code>FAIL    github.com/sosedoff/pgweb/pkg/api       0.009s\nok      github.com/sosedoff/pgweb/pkg/bookmarks 0.005s  coverage: 97.4% of statements\n?       github.com/sosedoff/pgweb/pkg/cli       [no test files]\nok      github.com/sosedoff/pgweb/pkg/client    6.641s  coverage: 50.6% of statements\nok      github.com/sosedoff/pgweb/pkg/command   0.005s  coverage: 64.7% of statements\nok      github.com/sosedoff/pgweb/pkg/connection        0.004s  coverage: 90.0% of statements\n?       github.com/sosedoff/pgweb/pkg/data      [no test files]\n?       github.com/sosedoff/pgweb/pkg/history   [no test files]\n?       github.com/sosedoff/pgweb/pkg/shared    [no test files]\n?       github.com/sosedoff/pgweb/pkg/statements        [no test files]\n?       github.com/sosedoff/pgweb/pkg/util      [no test files]\nMakefile:28: recipe for target 'test' failed\nmake: *** [test] Error 1</code></p>\n<h3>My fork</h3>\n<p><code>FAIL    github.com/janpieper/pgweb/pkg/api      0.009s\nok      github.com/janpieper/pgweb/pkg/bookmarks        0.005s  coverage: 97.4% of statements\nMakefile:28: recipe for target 'test' failed\nmake: *** [test] Error 2</code></p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/242", "title": "DB dump support", "status": "closed", "labels": [], "priority": null, "description": ["<p>Hello,</p>\n<p>Ability to create SQL dumps from databases would be very useful. I was using phppgadmin before and this is the only feature I am missing from pgweb.</p>\n<p>Thanks,\nIstv\u00e1n</p>", ["<p>I don't think pgweb is a good tool to do database dumps with, <code>pg_dump</code> has been around for years and has all the options you need, although i can probably agree with you that having a very basic \"db clone\" feature could be useful. Under the hood it would still use <code>pg_dump</code> though, and might as well work on windows too.</p>", "<p>Yes, you are right. The reason behind this ticket is I would like to create sql dumps from Postgresql databases with a web UI and without ssh access. :)</p>", "<p>@tistvan btw, this is doable, i was playing around with this feature today. however it will only work 100% if you have pg_dump installed on your system. So in other words, there's no way to package pg_dump with pgweb.</p>", "<p>Work is done here #270 </p>", "<p>I never said I needed pg_dump inside pgweb package :) . I just said it would be nice to create SQL dumps using pgweb. It doesn't matter if it is done using pg_dump or not. I just want to create SQL dumps from a web UI. :)\nAnyway I am closing this issue because it is done in #270 .</p>", "<p>And thanks for this feature :)</p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/241", "title": "Add support for encrypted SSH key", "status": "open", "labels": [], "priority": null, "description": ["<p>Getting error: <code>ssh: cannot decode encrypted private keys</code></p>", []]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/240", "title": "Remember sort column and order for pagination", "status": "closed", "labels": [], "priority": null, "description": ["<p>Fixes #239 </p>", []]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/239", "title": "Remember sort order on the table when paginating", "status": "closed", "labels": ["bug"], "priority": null, "description": ["<p>Sort order on the table browse page gets reset on pagination. It should remember the column and the sort order selected by user.</p>", []]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/238", "title": "Show query waiting for 9.6 in activity section", "status": "closed", "labels": [], "priority": null, "description": ["<p>Follow up to #237. See <a href=\"https://github.com/sosedoff/pgweb/pull/237#issuecomment-300672295\">my comment there</a>.</p>\n<p>If the UI depends on the <code>waiting</code> column name (I couldn't see that it did), this could alternatively just select <code>wait_event IS NOT NULL as waiting</code> to be effectively the same as 9.0-9.5 behaviour.</p>", []]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/237", "title": "Activity tab fix", "status": "closed", "labels": [], "priority": null, "description": ["<p>Activity tab will now use PG specific query to make sure its working correctly in between versions.</p>", ["<p>Should fix the issue on all 9.x branches, with a dumb default on any other pg version. </p>", "<p>It looks like this just removes the <code>waiting</code> column when in 9.6. <code>waiting</code> wasn't just removed in 9.6, though, it was <em>replaced</em> with <code>wait_event</code> and <code>wait_event_type</code>, to provide better context about why the query was waiting.</p>\n<p>To quote from <a href=\"https://www.credativ.co.uk/credativ-blog/postgresql-96-feature-pgstatactivity-waitevent\">here</a>:</p>\n<blockquote>\n<p>In addition to the existing status information as <code>pid</code>, <code>query_start</code> or <code>query</code> provided in current versions, PostgreSQL 9.6 maintains two new columns in <code>pg_stat_activity</code>; the columns and <code>wait_event</code> and <code>wait_event_type</code>, which contain detailed information on locking. These replace the column <code>waiting</code>, which reported only TRUE or FALSE depending on the status of each row, signalling that has been waiting for a heavyweight lock.</p>\n<p>The new <code>wait_event</code> column can also shed light on whether - and what kind of - LWLocks are waiting. Where a backend is waiting for a lock, the column contains the name of the <code>wait_event</code> events, or defaults to NULL.</p>\n</blockquote>\n<p>Given that, the query should at minimum replace <code>waiting</code> with <code>wait_event IS NOT NULL as waiting</code>, if not explicitly selecting both <code>wait_event</code> and <code>wait_event_type</code>.</p>\n<p>What do you think @sosedoff?</p>", "<p>@bjeanes True, i missed those fields while porting the query across all supported versions.</p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/236", "title": "Suggestion: Replace Bootstrap with Semantic ui", "status": "closed", "labels": [], "priority": null, "description": ["<p><a href=\"https://semantic-ui.com\">Semantic UI - User Interface is the language of the web</a> is a much better and simple ui framework. Please consider replacing Bootstrap with Sematic UI for better looking UI. If you are interested in making this change then I can also help.</p>", ["<p>How exactly the semantic UI would benefit pgweb at this time? And whats wrong with using bootstrap? </p>", "<p>No response, closing.</p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/235", "title": "Support CockroachDB", "status": "closed", "labels": [], "priority": null, "description": ["<p>It'd be awesome if pgweb could support CRDB! I did some basic testing but things failed pretty quickly.</p>\n<p>After fixing #234, I ran into the following problems with the startup query:\n<code>SELECT\n  session_user, # invalid syntax: statement ignored: unimplemented at or near \"session_user\"\n  current_user, # invalid syntax: statement ignored: unimplemented at or near \"current_user\"\n  current_database(), # supported!\n  current_schemas(false), # supported!\n  inet_client_addr(), # pq: unknown function: inet_client_addr()\n  inet_client_port(), # pq: unknown function: inet_client_port()\n  inet_server_addr(), # pq: unknown function: inet_server_addr()\n  inet_server_port(), # pq: unknown function: inet_server_port()\n  version() # supported, returns \"CockroachDB CCL eb8f08f3a (darwin amd64, built 2017/04/29 20:46:22, go1.8.1)\"</code></p>\n<p>Fixing these is beyond my knowledge of pgweb, but I'd be happy to help from the CRDB side if you're interested in adding support.</p>\n<p>Cheers!</p>", ["<p>@tamird do you have a sample cockroachdb database dump that i can use for testing?</p>", "<p>@sosedoff you can easily test against just an empty CockroachDB database for now (even that doesn't work). We have a library that makes it easy to programmatically run a CockroachDB process: https://godoc.org/github.com/cockroachdb/cockroach-go/testserver</p>", "<p>@tamird i'd happy to support cockroachdb, but i personally don't use it and don't think i can find any spare time to really dig in and implement a such a bridge. Pgweb does not have any active contributors so its kind of hard to say when non-postres stores could be supported.</p>", "<p>No plans for this yet?</p>", "<p>Looks supported in Cockroachdb 2. https://github.com/cockroachdb/cockroach/pull/23334</p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/234", "title": "api: properly check for errors", "status": "closed", "labels": [], "priority": null, "description": ["<p>This results in NPE when cl.Info() returns an error.</p>\n<p>Discovered this while attempting to use pgweb with <a href=\"https://github.com/cockroachdb/cockroach\">CockroachDB</a>. Unfortunately, I hit another roadblock after fixing this: much of the <a href=\"https://github.com/sosedoff/pgweb/blob/v0.9.7/pkg/statements/sql.go#L26:L36\"><code>Info</code> query</a> is unsupported:\n<code>sql\nSELECT\n  session_user, # invalid syntax: statement ignored: unimplemented at or near \"session_user\"\n  current_user, # invalid syntax: statement ignored: unimplemented at or near \"current_user\"\n  current_database(), # supported!\n  current_schemas(false), # supported!\n  inet_client_addr(), # pq: unknown function: inet_client_addr()\n  inet_client_port(), # pq: unknown function: inet_client_port()\n  inet_server_addr(), # pq: unknown function: inet_server_addr()\n  inet_server_port(), # pq: unknown function: inet_server_port()\n  version() # supported, returns \"CockroachDB CCL eb8f08f3a (darwin amd64, built 2017/04/29 20:46:22, go1.8.1)\"</code></p>\n<p>I'll file an issue for CRDB support with these details as well.</p>", ["<p>Interesting, i haven't used cockroach db. Pgweb has more psql specific features like getting indexes and table structure so i don't know if that will be portable.</p>", "<p>It's possible to retrieve much of that metadata from information_schema, which is a portable alternative to the pg-specific meta tables. In any case, we should discuss that in #235 - this PR is a strict improvement, would you agree?</p>", "<p>Yeah, i meant to write this comment in the issue, not in this pr. </p>", "<p>@sosedoff is this good to merge, then?</p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/233", "title": "Activity Tab only shows ERROR: pq: column \"waiting\" does not exist.", "status": "closed", "labels": [], "priority": null, "description": ["<p>On PostgreSQL 9.6.2 on x86_64-pc-mingw64</p>\n<p><img alt=\"image\" src=\"https://cloud.githubusercontent.com/assets/776825/25483737/644c8798-2b57-11e7-89e9-8427a58dc28f.png\" /></p>", ["<p>Yeah, its a known issue. <code>waiting</code> is not available in <code>pg_stat_activity</code>. I haven't had time to fix this. </p>", "<p>Here's the fix for this in a similar query: https://github.com/demikl/pg_activity/commit/10cfc484b87e3ad018b9d6048954ff85f58ae904</p>\n<p>Might be useful for anybody wishing to address this before @sosedoff can...</p>", "<p>@bjeanes thanks, i'll check it out. </p>", "<p>Should be fixed in master now. </p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/232", "title": "Removed duplicate usage line in Makefile.", "status": "closed", "labels": [], "priority": null, "description": ["<p>There were two lines for <code>make test</code> in the Makefile.</p>", []]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/231", "title": "Blank Page on IE", "status": "closed", "labels": [], "priority": null, "description": ["<p>Cannot open the webpage in IE. It only shows a blank page. </p>\n<p>Company PC only has IE 11.  Cannot install other browser.</p>\n<p><img alt=\"pgweb-ie\" src=\"https://cloud.githubusercontent.com/assets/838759/24423287/7276dfe8-13ca-11e7-9a85-7b9bd2c1bdbe.jpg\" /></p>", ["<p>Damn IE, i'll take a look.</p>", "<p>Issue: \nhttps://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/of\n<code>for x of array</code> is not supported in IE11. </p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/230", "title": "Large results crash the browser", "status": "open", "labels": [], "priority": null, "description": ["<p>For our use case, we often have to run large queries and export the results to CSV. We would love to do that through pgweb, but currently when running a query that returns +10k rows, the browser slows down heavily, and with +100k rows, the tab just crashes.</p>\n<p>This seems to be because there is no pagination on the results, and pgweb just adds those 100k rows to the DOM (or at least tries to) where here we mostly just want to export it. </p>\n<p>Do you have any solution for this? Thanks</p>\n<p>Edit: We have one workaround for now that might work which is to just truncate the displayed results to the first 1000 rows</p>", ["<p>You can try hitting the \"Export\" button before running the actual query. </p>", "<p>@sosedoff I did not even think about it, I assumed we had to execute the query first. </p>\n<p>My go skills are limited so the solution I implemented is really just truncating the result array before sending it back to the browser, but maybe some sort of pagination, or truncating but telling the user that the results are truncated would be a better option?</p>", "<p>Yeah, you can type the query and hit export, it will not load anything in the browser. Regarding the pagination you mentioned, its true, theres a need for something like that, but i dont have any solutions since i use psql for big data dumps. </p>\n<blockquote>\n<p>On Mar 23, 2017, at 9:48 AM, Tristan F. <a href=\"&#109;&#97;&#105;&#108;&#116;&#111;&#58;&#110;&#111;&#116;&#105;&#102;&#105;&#99;&#97;&#116;&#105;&#111;&#110;&#115;&#64;&#103;&#105;&#116;&#104;&#117;&#98;&#46;&#99;&#111;&#109;\">&#110;&#111;&#116;&#105;&#102;&#105;&#99;&#97;&#116;&#105;&#111;&#110;&#115;&#64;&#103;&#105;&#116;&#104;&#117;&#98;&#46;&#99;&#111;&#109;</a> wrote:</p>\n<p>@sosedoff I did not even think about it, I assumed we had to execute the query first.</p>\n<p>My go skills are limited so the solution I implemented is really just truncating the result array before sending it back to the browser, but maybe some sort of pagination, or truncating but telling the user that the results are truncated would be a better option?</p>\n<p>\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub, or mute the thread.\n</p>\n</blockquote>", "<p>Most of the results I've seen are paginated by default. Does your query have its own <code>LIMIT</code> or something on it?</p>\n<p>That number of results is going to cause quite a massive result set. Unless we separate pagination into a front-end piece in certain contexts I don't know of any other way to solve this. The problem with doing pagination in the front-end though, is then you have literal DB pagination that is done and front-end level. Which is difficult from a user-interface perspective to handle right.</p>\n<p>I think we could improve by perhaps getting the count of returned rows back, and on any calls that will try to display more than like 15k rows or something (we can play around to find a decent number that most systems can handle) then show an alert to the dev that things can be slow and if their goal is to export they could just export it directly without rendering it.</p>", "<p>Quick update on this issue:</p>\n<ul>\n<li>I've been working on getting https://clusterize.js.org/ integrated into pgweb. It offers a way better experiment on any large datasets. </li>\n<li>Limiting the result dataset will likely result in faster page loads. We could add a limit to any custom query passed by a user, and maybe add more results to the table dynamically. Still experimenting.</li>\n</ul>", "<p>@sosedoff Did you get anywhere with Clusterize.js? I'd be keen to have a crack at implementing it.</p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/229", "title": "Generate charts", "status": "open", "labels": ["hacktoberfest"], "priority": null, "description": ["<p>Hey,</p>\n<p>Do you have plans about generating charts from a query's result?\nLike Hue for example.</p>\n<p>Thanks.</p>", ["<p>Not at the moment, but i thought about adding a very basic charting feature in the past. </p>", "<p>I think it should be great to have this kind of feature even it's really basic. If people want more they always are able to customize it (and make a PR).</p>", "<p>Im going to keep the issue open in case i have time to work on it or someone else decides to contribute. </p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/228", "title": "Specify CA/Client certs for verify-full mode", "status": "closed", "labels": [], "priority": null, "description": ["<p>I need to connect to a postgresql server that requires client certs and uses a root cert signed by a custom CA.</p>\n<p>As an example, in Python, psycopg2 connection string allows me to specify all my certs:\nsslcert='/a/secrets/app/ssl_cert/ssl_cert.certificate' sslkey='/a/secrets/app/ssl_cert/ssl_cert.private_key' sslrootcert='/a/secrets/app/ssl_cert/ssl_cert.chain_cert'</p>\n<p>Is there a way to do this in pgweb?</p>", ["<p>Hi, while i havent personally tested the SSL cert stuff with pgweb, you might try adding required ssl paths to the postgresql connection string. See <a href=\"https://www.postgresql.org/docs/9.5/static/runtime-config-connection.html\">docs</a> for more details.</p>\n<p>```\nsslcert\nThis parameter specifies the file name of the client SSL certificate, replacing the default ~/.postgresql/postgresql.crt. This parameter is ignored if an SSL connection is not made.</p>\n<p>sslkey\nThis parameter specifies the location for the secret key used for the client certificate. It can either specify a file name that will be used instead of the default ~/.postgresql/postgresql.key, or it can specify a key obtained from an external \"engine\" (engines are OpenSSL loadable modules). An external engine specification should consist of a colon-separated engine name and an engine-specific key identifier. This parameter is ignored if an SSL connection is not made.</p>\n<p>sslrootcert\nThis parameter specifies the name of a file containing SSL certificate authority (CA) certificate(s). If the file exists, the server's certificate will be verified to be signed by one of these authorities. The default is ~/.postgresql/root.crt.\n```</p>", "<p>Thanks, that makes sense. I'm testing it out, and it looks like it's at least loading the root now, as I am not getting the error: 'x509: failed to load system roots and no roots provided' error.</p>\n<p>Here's my string (that I'm throwing into the browser...):\npostgres://ab-arm@[redacted]/ab-arm?sslmode=verify-full&amp;sslcert=/a/secrets/app/ssl_cert/ssl_cert.certificate&amp;sslkey=/a/secrets/app/ssl_cert/ssl_cert.private_key&amp;sslrootcert=/a/secrets/app/ssl_cert/ssl_cert.chain_cert</p>\n<p>It's throwing the following:\npq: connection requires a valid client certificate</p>", "<p>@johicks any luck with certs? i didnt have any time to look into your issue, sorry. </p>", "<p>Would love to get more feedback. Closing due to no activity.</p>", "<p>Sorry for reopening, when testing with cockroachdb 2 (which AFAIK should support <code>pgweb</code>) on secure mode, I can't get a self signed root cert to work:</p>\n<p>```\npgweb --url postgres://root@localhost:26257/testdb?sslmode=verify-full&amp;sslcert=client.root.crt&amp;sslkey=client.root.key&amp;sslrootcert=ca.crt</p>\n<p>Pgweb v0.9.12 (git: 9af721176bf7b41366f0de8251fff0b47da8fce3)\nConnecting to server...\nError: x509: certificate signed by unknown authority\n```</p>\n<p>Any ideas?</p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/227", "title": "Manual change timeout query", "status": "closed", "labels": [], "priority": null, "description": ["<p>Add manual change timeout query. </p>\n<p><img alt=\"image\" src=\"https://cloud.githubusercontent.com/assets/16900779/23410095/1d1aa92c-fddf-11e6-9442-e9338b00abcc.png\" /></p>", ["<p>Hi, what kind of sql queries are you running?</p>", "<p>Hi. yes. I, run a query that is pulling a lot of data, and is taking longer than 300 ms.</p>", "<p>Hi again,</p>\n<p>I'm closing this due to no activity and also due to the fact that pgweb was never meant to run any \"heavy\" queries. If you feel like fixing the problem, or making the option to customize the default query timeout via CLI option - go ahead and submit a PR. I just don't have any time to work on this. </p>\n<p>Thanks.</p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/226", "title": "Add a disk-backed custom query log", "status": "open", "labels": ["enhancement"], "priority": null, "description": ["<p>Storing SQL query log (user-generated) into a file would be a good solution for history persistence. Something like <code>$HOME/.pgweb/history.json</code> is fine, although will probably break when running multiple instances of pgweb on the same machine. </p>", ["<p>Possible alternative: local SQLite3 db.</p>", "<p>Are you thinking of persisting every single query in this log? or would there be a custom \"store query\" option?</p>\n<p>Another question - how would we uniquely identify clients? Say one client saves the query, quits and comes back up. How would we identify that the new client is the same one that stored the query? </p>\n<p>I think we should store every single query and NOT separate queries by clients. This means that two concurrent clients may get each other's queries in their history. I think this is fine since this is how a lot of terminal emulator's history works as well (think iterm, mac's terminal etc).</p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/225", "title": "Remove table rows when switching to custom query view", "status": "closed", "labels": [], "priority": null, "description": ["<p>Fixes #209 </p>", []]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/224", "title": "Show number of rows rendered for custom sql query", "status": "closed", "labels": [], "priority": null, "description": ["", []]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/223", "title": "Show number of rows included in custom query results table", "status": "closed", "labels": ["enhancement"], "priority": null, "description": ["<p>Display number of rows included into the results table. The counter could be added to the panel next to export result buttons.</p>", ["<p>Implemented in #224 </p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/222", "title": "Error: pq: schema \"dbms_rls\" does not exist", "status": "closed", "labels": [], "priority": null, "description": ["<p>[root]# /opt/go/pgweb  --url postgres://test:test@10.88.0.1:5444/ptgbdb?sslmode=disable \nPgweb v0.9.6\nConnecting to server...\nChecking database objects...\nError: pq: schema \"dbms_rls\" does not exist</p>", ["<p>pgweb start error </p>", "<p>but this schema \"dbms_rls\" is exist,wy?\n<img alt=\"image\" src=\"https://cloud.githubusercontent.com/assets/19323469/22968928/71aa1046-f3a7-11e6-849c-89d56da6365f.png\" /></p>", "<p>Are you using the same user for pgweb and your other db tool? I might suspect it has something to do with permissions.</p>", "<p>@zoujd-github ping, care to provide more details? otherwise i will close this issue since i don't have any way to reproduce the problem.</p>", "<p>Closing due to no response.</p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/221", "title": "pgweb linux installation issue", "status": "closed", "labels": [], "priority": null, "description": ["<h4>Description of issue</h4>\n<p>I have tried to install pgweb on Ubuntu 14.04.5 LTS and I have been unsuccessful so far. I am following the wiki page for \u2013 Installation as well as tried Build from source. I have constantly been getting errors. I have linuxbrew installed. \nWith just the basic installation - I get stuck at the very last step  - brew cask install pgweb - error - Verifying checksum for Cask pgweb\nError: No such file or directory - /usr/bin/hdiutil. \nWith the Build from source - make setup runs but tells me that I am not in the GOPATH (which doesn't have the makefile) and make dev doesn't run because it cannot find the -$HOME/.linuxbrew/Cellar/go/1.7.5/libexec/src/github.com/sosedoff/pgweb/pkg/command (from $GOROOT)\n$GOPATH/src/github.com/sosedoff/pgweb/pkg/command </p>", ["<p>Hi,</p>\n<p>I think all those issues really have nothing to do with pgweb for a few reasons:\n- pgweb project has not been tested to work with linuxbrew so i cant really tell if its homebrew issue or something else. osx is supported. \n- when installing from source you must set your GOROOT and GOPATH correctly for the build to work. </p>\n<p>Alternatively you can always download a prebuilt binary file for your OS: https://github.com/sosedoff/pgweb/releases/download/v0.9.6/pgweb_linux_amd64.zip</p>", "<p>A short how to or link to how to install would be nice.\nHaving problems getting the right binary and method for installing on Ubuntu.</p>", "<p>@TomoGlavas check https://github.com/sosedoff/pgweb/wiki/Installation</p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/220", "title": "Error: dial tcp: no suitable address found", "status": "closed", "labels": [], "priority": null, "description": ["<p>I got the error <code>Error: dial tcp: no suitable address found</code> when I make Pgweb (v0.9.6) booting with <code>DATABASE_URL</code>.\nAfter changing its hostname to IP address, it runs with no error.</p>\n<p>Referring to some another projects, this error is caused by Go 1.7.0 and it may be fixed by building with Go 1.7.1.\nE.g: https://github.com/golang/go/issues/16739</p>", ["<p>This should be fixed as i've switched master to use go 1.7.5. </p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/219", "title": "Use quoted identifier for TableInfo query", "status": "closed", "labels": [], "priority": null, "description": ["<p>Great work with this project!</p>\n<p>I came across an issue with table names that include the <code>.</code> character. While not typically recommended, it is supported in Postgres with quoted identifiers for table names.</p>\n<p>To see the issue, create a table name with a <code>.</code> such as <code>foo.bar</code>. If you click on the table, you will see <code>ERROR: pq: relation \"public.foo\" does not exist</code>. I dug into it a bit, and it looks like of the three API queries that are sent when clicking on a table, one of them (<code>/info</code>) returns a 400. </p>\n<p>Pgweb otherwise supports it (e.g. <code>TableRows</code> and <code>TableRowCount</code> separate the schema and table and use a quoted identifier like so: <code>sql := fmt.Sprintf(</code>SELECT * FROM \"%s\".\"%s\"<code>, schema, table)</code>). <code>TableInfo</code>, however, uses a raw query from <code>statement/sql.go</code>. In that query, there a few calls to PG functions which attempt to interpret the passed string in schema.table format and fail. I updated these calls to separate the schema and table and use the PG function <code>quote_ident</code> to wrap the table name to handle characters such as <code>.</code></p>\n<p>Please view this very much as a pull request and not a merge request - I'd love to make sure this meets your standards so just let me know if there's anything else I need to do here!</p>", ["<p>What if the schema has a <code>.</code> in it?</p>", "<p>@cbandy good question - I wanted to include that but I think it would require a bit more of a refactor to store the schema and table separately (instead of a single string that gets parsed by <code>getSchemaAndTable</code>). That would also mean updating the API routes.</p>", "<p>@od0 if you wish to move forward with changes (current or new ones) please include some tests. There's a sample database sql file, you can add new instructions to the end. </p>", "<p>@sosedoff sounds good will get that added</p>", "<p>@od0 hey, any update? are you still going to work on this issue?</p>", "<p>@sosedoff sure - apologies for the delay. I started to write a test for this but I'm not 100% sure what's helpful here. Should I modify the existing database creation script to include tables with <code>.</code> in the name, and a test in <code>client_test.go</code> to verify that they're parsed properly?</p>", "<p>yeah, you dont have to touch any existing tables, just add a new one and the test case to verify it works.</p>", "<p>@od0 Feel free to resubmit when you're ready.</p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/218", "title": "Ability to override bookmarks directory + typo fix", "status": "closed", "labels": [], "priority": null, "description": ["<p>I had troubles with <code>homedir</code> package on specific installation (can provide more info later), so thought it could be awesome to just override default bookmarks directory from a command line argument.</p>\n<p>Also found a typo in a neighbouring MIME type</p>", ["<p>Would like to hear more about that particular setup. </p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/217", "title": "Deps update", "status": "closed", "labels": [], "priority": null, "description": ["", ["<p>Have you thought about moving to <a href=\"https://github.com/Masterminds/glide\">glide</a>?</p>", "<p>I thought about it, but don't see the immediate need to switch. </p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/216", "title": "deploy pgweb as a container alongside postgres in a docker-compose setup?", "status": "closed", "labels": [], "priority": null, "description": ["<p>Hello!\nThis looks terrific. For my use case, I'd love to run this container alongside my postgres container, link them together, and have pgweb available at some port on my URL. Is that an idea that's been had before? </p>", ["<p>My mistake, I didn't look closely at the wiki! \nhttps://github.com/sosedoff/pgweb/wiki/Docker\nThis mostly answers my question. I'll try to figure the rest out on my own. </p>", "<p>Okay, so I added to my docker-compose file the following: </p>\n<p><code>pgweb:\n  container_name: pgweb\n  restart: always\n  image: sosedoff/pgweb\n  ports: \n    - \"8081:8081\" \n  links: \n    - postgres:postgres\n  environment:\n    - DATABASE_URL=postgres://postgres:postgres@db:5432/postgres</code></p>\n<p>I have my functional postgres db in the same file</p>\n<p>With the above, I get: \n<code>Connecting to server...\nError: dial tcp: lookup db on 192.168.65.1:53: no such host</code></p>\n<p>If I change the environment line to \n<code>- DATABASE_URL=postgres://postgres:postgres@postgres:5432/postgres</code>\nI get\n<code>Connecting to server...\nError: dial tcp 172.17.0.2:5432: getsockopt: connection refused</code>\nI changed the name just in case since my image is called postgres not db, the way you name it on the wiki https://github.com/sosedoff/pgweb/wiki/Docker</p>\n<p>Any ideas? What's the correct DATABASE_URL? (I'm assuming that's the issue) @sosedoff </p>", "<p>As far as connecting to the postgres (from pgweb) it should just work as long as the postgres server is reachable and credentials are correct (host/port/user/db). From your example its not clear how you start postgres container. Could you provide more details from your compose file?</p>", "<p>Hi @sosedoff \nHere's the postgres piece of the compose file: \n<code>postgres:\n  container_name: postgres\n  restart: always\n  image: postgres:latest\n  volumes:\n    - ./postgres-data:/var/lib/postgresql/data\n  ports:\n    - \"5432:5432\"</code></p>", "<p>Postgres does not start right away, it takes a few seconds after start to become fully available.\nSince pgweb depends on the postgres container, you have to specify that in your compose file:</p>\n<p><code>pgweb:\n  container_name: pgweb\n  restart: always\n  image: sosedoff/pgweb\n  ports: \n    - \"8081:8081\" \n  links: \n    - postgres:postgres\n  environment:\n    - DATABASE_URL=postgres://postgres:postgres@postgres:5432/postgres\n  depends_on:\n    - postgres</code></p>\n<p>Also, default postgres container does not have SSL enabled, so just disable that. New variables:</p>\n<p><code>DATABASE_URL=postgres://postgres:postgres@postgres:5432/postgres?sslmode=disable</code></p>", "<p>@sosedoff that worked! Thanks so much!! Would you like to update the wiki or can I? </p>", "<p>What would you like to modify in wiki? </p>", "<p>Hi @sosedoff \nI would just add the correct docker-compose config from <a href=\"https://github.com/sosedoff/pgweb/issues/216#issuecomment-273992845\">your last comment</a> to the bottom of that page, just in case there's anyone out there like me who'd like to add this to their docker-compose setup. I personally think that for folks running postgres in a compose setup, plopping in pgweb if they don't already have a tool for looking through their database would be a godsend. </p>", "<p>Sure, go ahead.</p>", "<p>@sosedoff would you anticipate pgweb to fail if the db were too large? On a small DB, this works fine, but on my production DB I can't get pgweb to load. The log has no errors in it, the page just won't load...</p>", "<p>Its hard to just guess, but you can check the request status in the chrome debug tools. Pgweb makes AJAX call for each query so you'll be able to see if anything is being returned at all.</p>", "<p>nevermind I'm a moron. =)</p>", "<p>Care to share a bit more info on the problem? Its always good to know what kind of stuff people do so i can work out a better ux</p>", "<p>The port was closed. \"Huh, that's funny, it won't load...\" =)</p>", "<p>Did the flag (which I have in my docker compose)</p>\n<p><code>environment:\n      - DATABASE_URL=</code>\nstop working or move in a recent version of pgweb? </p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/215", "title": "Updating values from rows view?", "status": "closed", "labels": [], "priority": null, "description": ["<p>Is it possible to execute a SQL update query from changing the text and hitting enter or similar?</p>\n<p><img alt=\"image\" src=\"https://cloud.githubusercontent.com/assets/1313566/22039808/be67d4d0-dcce-11e6-9053-c074e422a490.png\" /></p>", ["<p>Currently - no. Im still trying to find some time and implement row editing functionality. It should be fairly straightforward as long as you try to edit rows in the \"browse\" mode. Editing rows in custom query result would be complicated and does not make sense.</p>", "<p>I would also like to see this. As pgweb is a nice looking GUI, I thought it'd be targeting users who may not necessarily know SQL.</p>\n<p>If you could update data through the row view, then someone like an office admin could use this pretty easily.</p>", "<p>Hello dear Dan. \nFirst off all thank You very much for your great work. \nThis project is very valuable and useful. \nI will also appreciate very much if row editing and adding functionality is implemented and this feature will bring this wonderful project to whole new level of usability for many users.\nThank you very much.</p>", "<p>@sosedoff I think I am missing something.  When:</p>\n<ul>\n<li>I use the sidebar navigation and drill into a table (No custom query, no views)</li>\n<li>Then I double click a row that has a value</li>\n<li>I see a textarea box which allows me to change the value</li>\n<li>However I see no way to save my change and issue the update</li>\n</ul>\n<p>I am assuming this is what you mean by \"Currently - no. Im still trying to find some time and implement row editing functionality.\"?</p>\n<p>Using Chrome [58.0.3029.96 (64-bit)] on OSX [10.11.6 (15G1421)]  </p>", "<p>Thats correct, row editing is not supported in any form in pgweb at the moment. Textbox is meant to easily copy cell's data.</p>", "<p>Hi @sosedoff, I need this for some of my projects. Can I work on this? I intend to extend the API to support insert/update/delete and update the UI to support modifying data.</p>", "<p>@cheungpat Any chance you got around to adding editting functionality?</p>", "<p>Man, the whole reason I was excited to use this was that I figured you could edit the data. Surprised that is not the case. Just set it up, and... nope : (</p>", "<p>lol its still a wicked app, just missing some functionality. Id make a PR but id have to really dig into it to understand it all</p>", "<p>Could we at least make the fields not change into an editable text box while this function isn't implemented? I have users coming to my desk confused all the time.</p>", "<p>+1 readonly field</p>\n<p>On Thu, Mar 14, 2019, 1:02 PM joe <a href=\"&#109;&#97;&#105;&#108;&#116;&#111;&#58;&#110;&#111;&#116;&#105;&#102;&#105;&#99;&#97;&#116;&#105;&#111;&#110;&#115;&#64;&#103;&#105;&#116;&#104;&#117;&#98;&#46;&#99;&#111;&#109;\">&#110;&#111;&#116;&#105;&#102;&#105;&#99;&#97;&#116;&#105;&#111;&#110;&#115;&#64;&#103;&#105;&#116;&#104;&#117;&#98;&#46;&#99;&#111;&#109;</a> wrote:</p>\n<blockquote>\n<p>Could we at least make the fields not change into an editable text box\nwhile this function isn't implemented? I have users coming to my desk\nconfused all the time.</p>\n<p>\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\n<a href=\"https://github.com/sosedoff/pgweb/issues/215#issuecomment-473037780\">https://github.com/sosedoff/pgweb/issues/215#issuecomment-473037780</a>, or mute\nthe thread\n<a href=\"https://github.com/notifications/unsubscribe-auth/ABQLHtOxZG1_lmOLB4s_ac9S7EUGb-PQks5vWqrVgaJpZM4LmKMc\">https://github.com/notifications/unsubscribe-auth/ABQLHtOxZG1_lmOLB4s_ac9S7EUGb-PQks5vWqrVgaJpZM4LmKMc</a>\n.\n</p>\n</blockquote>", "<p>Agree with @joekohlsdorf I spent time on Google to find what I did wrong while trying to edit a row before reading this thread and understand I won't succeed in.</p>", "<p>Got annoyed by this again today. The change is simple, in this line:\nhttps://github.com/sosedoff/pgweb/blob/15c21b63793d5b8e6de252a76902fc09ff87f7cf/static/js/app.js#L1124\nChange <code>&lt;textarea /&gt;</code> to <code>&lt;textarea readonly /&gt;</code>.</p>", "<p>I know +1s don't help but can this please be fixed, even the <code>readonly</code> option would help. </p>", "<p>Inline textareas have been completely removed from pgweb in the latest release. \nIt's no longer needed since there's a context menu to copy the contents of the cell (right click).</p>", "<p>3 years later, still can't edit data in a row? \ud83e\udd2a</p>", "<p>You can with PgAdmin...</p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/214", "title": "Example Configuration File for Ubuntu 14.04", "status": "closed", "labels": [], "priority": null, "description": ["<p>Example Configuration File for Ubuntu 14.04 and Upstart, normally in:\n/etc/init/</p>", []]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/213", "title": "Bad display of db name when it is too long", "status": "closed", "labels": [], "priority": null, "description": ["<p>When the name of the DB is too long, it doesn't display properly. Same behavior with Firefox and Chromium.</p>\n<p><img alt=\"scrsh hl1\" src=\"https://cloud.githubusercontent.com/assets/220489/21811914/9732b470-d751-11e6-8921-fe96fedf3aed.png\" /></p>\n<p>(Node: I selected part of the text so that you can more easily see its position)</p>", ["<p>Fixed in master. See example.\n<img alt=\"screenshot 2017-01-10 13 45 57\" src=\"https://cloud.githubusercontent.com/assets/71051/21821989/23f774fc-d73b-11e6-8524-bd8ca3339c3c.png\" /></p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/212", "title": "Fix path rewrite on DB change", "status": "closed", "labels": [], "priority": null, "description": ["<p>Fix for #211 </p>", ["<p>Thanks for the bugfix!</p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/211", "title": "Bad connection string rewrite on DB change", "status": "closed", "labels": [], "priority": null, "description": ["<p>The connection string is badly rewritten on DB change when no database was specified for the current connection:</p>\n<ul>\n<li>Connect without specifying a database name</li>\n<li>On the top left, change to another database</li>\n<li>The change fails</li>\n</ul>\n<p>It appears that the connection string has a path of <code>/</code>. And the function that rewrite it will replace the first slash that follows the scheme. So we got a connection string that looks like this: <code>Changed Url: postgres:/newdbname/user:pass@192.168.200.3/?sslmode=disable</code></p>\n<p>I'll submit a PR right away for this issue.</p>", ["<p>Fixed in master.</p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/210", "title": "Long passwords or passwords with spaces don't work (One of the two)", "status": "closed", "labels": [], "priority": null, "description": ["<p>Set my password to \"agape wichita laden bavaria audacity\", tried to log in, and it failed.</p>", ["<p>I just tested auth by setting user/pass via command line options and env variable using your example password and everything works. Could you provide full command that you're using to start pgweb? Also, which version are you on?</p>", "<p>Sure. The setup is via the \"Deploy To Heroku\" button.</p>\n<ol>\n<li>I pressed the button.</li>\n<li>I created the instance.</li>\n<li>I deleted the hobby addon.</li>\n<li>I added a new Standard 0 database.</li>\n<li>I restarted.</li>\n<li>I changed the AUTH_PASS url to the password.</li>\n<li>I restarted.</li>\n<li>I tried to login, failed.</li>\n<li>I changed to <code>xxxx</code>.</li>\n<li>I restarted.</li>\n<li>I successfully log in.</li>\n</ol>", "<p>Ah, i see. You're trying to set password with spaces as an environment variable. AFAIK that wont work on Heroku and thats why you're getting auth failures.</p>", "<p>Dang!</p>\n<p>On Fri, Dec 30, 2016 at 10:53 AM, Dan Sosedoff <a href=\"&#109;&#97;&#105;&#108;&#116;&#111;&#58;&#110;&#111;&#116;&#105;&#102;&#105;&#99;&#97;&#116;&#105;&#111;&#110;&#115;&#64;&#103;&#105;&#116;&#104;&#117;&#98;&#46;&#99;&#111;&#109;\">&#110;&#111;&#116;&#105;&#102;&#105;&#99;&#97;&#116;&#105;&#111;&#110;&#115;&#64;&#103;&#105;&#116;&#104;&#117;&#98;&#46;&#99;&#111;&#109;</a>\nwrote:</p>\n<blockquote>\n<p>Ah, i see. You're trying to set password with spaces as an environment\nvariable. AFAIK that wont work on Heroku and thats why you're getting auth\nfailures.</p>\n<p>\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\n<a href=\"https://github.com/sosedoff/pgweb/issues/210#issuecomment-269808114\">https://github.com/sosedoff/pgweb/issues/210#issuecomment-269808114</a>, or mute\nthe thread\n<a href=\"https://github.com/notifications/unsubscribe-auth/AAUb2aKbtfzLtQC8aWdBu7MrllJVfGg3ks5rNVMhgaJpZM4LUsSQ\">https://github.com/notifications/unsubscribe-auth/AAUb2aKbtfzLtQC8aWdBu7MrllJVfGg3ks5rNVMhgaJpZM4LUsSQ</a>\n.\n</p>\n</blockquote>\n<p>-- \nKurtis Rainbolt-Greene, Software Developer\nFounder of Difference Engineers</p>\n<p>2985 San Marino St.\nLos Angeles, CA 90006\n202-643-2263</p>", "<p>Closing this since the issue has nothing to do with pgweb.</p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/209", "title": "Current search results (in Rows tab) also shown in SQL Query tab", "status": "closed", "labels": [], "priority": null, "description": ["<p>If I do search in Rows tab and switch to the SQL Query tab the current results are also shown there. However, I cannot export the results as CSV, JSON or XML. Thus would it make sense to show the current SQL query also in SQL Query tab along with the working export buttons. Otherwise reset the latest search and add export buttons also to Rows tab?</p>", ["<p>Thanks for the report, i'll fix that in the next release.</p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/208", "title": "Startup script to be documented in wiki", "status": "closed", "labels": [], "priority": null, "description": ["<p>I made a startup script for <code>pgweb</code> binary. Feel free to put in wiki, maybe with Nginx reverse-proxy example (#84), which is still missing.</p>\n<p>```bash</p>\n<h1>!/bin/sh</h1>\n<h3>BEGIN INIT INFO</h3>\n<h1>Provides:          pgweb</h1>\n<h1>Required-Start:    $remote_fs $syslog</h1>\n<h1>Required-Stop:     $remote_fs $syslog</h1>\n<h1>Default-Start:     2 3 4 5</h1>\n<h1>Default-Stop:      0 1 6</h1>\n<h1>Short-Description: Start daemon at boot time</h1>\n<h1>Description:       Enable service provided by daemon.</h1>\n<h3>END INIT INFO</h3>\n<h1>Installation instructions (originally written for Debian)</h1>\n<h1></h1>\n<h1>Save this script into /etc/init.d/pgweb file, make it executable,</h1>\n<h1>and install it into the boot sequence:</h1>\n<h1></h1>\n<h1>chmod 755 /etc/init.d/pgweb</h1>\n<h1>update-rc.d pgweb defaults</h1>\n<h1></h1>\n<h1>This script assumes that pgweb binary is located at /home/pgweb/, and that</h1>\n<h1>there's a bookmark 'server' in /home/pgweb/.pgweb/bookmarks/.</h1>\n<h1></h1>\n<p>NAME=\"pgweb\"\nPIDFILE=\"/var/run/$NAME.pid\"</p>\n<p>USER=\"pgweb\"  # Linux system user\nSU=\"su $USER -s /bin/bash\"</p>\n<p>TIMEOUT=5  # Time in seconds to wait postgresql to show up</p>\n<p>case \"$1\" in\n  start)\n    if [ -f $PIDFILE ]; then\n        echo \"Already running... cat $PIDFILE\"\n        exit 0\n    fi</p>\n<pre><code># Wait postgresql to show up\nwhile ! test -f /var/run/postgresql/*main.pid\ndo\n    sleep 1\n    TIMEOUT=`expr $TIMEOUT - 1`\n    if test $TIMEOUT -eq 0; then\n        exit 1\n    fi\ndone\n\n# Ready to start pgweb\nPID=`$SU -c '/home/pgweb/pgweb -s -b server &gt;/dev/null &amp; echo $!'`  # Note! Logs are lost.\nif [ -z $PID ]; then\n    exit 1\nelse\n    echo $PID &gt; $PIDFILE\nfi\n;;\n</code></pre>\n<p>stop)\n    PID=<code>cat $PIDFILE</code>\n    kill $PID &amp;&amp; rm $PIDFILE\n    ;;\n  *)\n    echo \"Usage: /etc/init.d/$NAME {start|stop}\"\n    exit 1\n    ;;\nesac</p>\n<p>exit 0\n```</p>", ["<p>Thanks for the extra setup script. The only problem i see with it is with hardcoded path to the binary, usually stuff like that should be declared as a variable at the top.</p>", "<p>I was not able to solve how to use variables in sudo's -c command flag. Where's the original startup script?</p>", "<p>Why would you need sudo to run pgweb? It does not start on port 80</p>", "<p>To run pgweb as pgweb user -- not as root.</p>", "<p>Oh nvm i misread some of the config stuff. I'll take another look at this when i have time. </p>", "<p>I added your example init.d config to the repo.</p>", "<p>Here are some steps to run pgweb using <strong>systemd</strong> (I guess this only works on Ubuntu though):</p>\n<p><code>touch /etc/systemd/system/pgweb.service</code></p>\n<p>```\n[Unit]\nDescription=pgweb\nAfter=network.target</p>\n<p>[Service]\nUser=webadmin\nGroup=www-data\nWorkingDirectory=/home/webadmin/pgweb\nExecStart=/home/webadmin/pgweb/pgweb_linux_amd64 --listen=9090\n[Install]\nWantedBy=multi-user.target\n```</p>\n<p>Reference on how to <a href=\"https://www.digitalocean.com/community/tutorials/how-to-serve-flask-applications-with-gunicorn-and-nginx-on-ubuntu-16-04#create-a-systemd-unit-file\">create a systemd Unit File</a>.</p>", "<p>@andreibancioiu there's a systemd service file at https://github.com/sosedoff/pgweb/blob/master/examples/pgweb.service as well.</p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/207", "title": "Custom Login page / Custom database list feature", "status": "closed", "labels": [], "priority": null, "description": ["<p>I'm adding a feature to make <code>pgweb</code> require login with Cloud Foundry. I'm also adding a feature to provide a list of available databases once the user has logged in. I've forked <code>pgweb</code> and started building the features, but I'm not quite finished yet. I understand that my use case is somewhat specific, but I wanted to ask if these features can be generalized into a form that could be admitted into the primary <code>pgweb</code> repo? Perhaps we could design some simple API that would allow other users to build additional login integrations (of which Cloud Foundry would be one), if they wanted to (which could be submitted via PR)? The same idea could apply for the list of databases provided upon login. I'm ready to help with ideas and building out this feature, but I just wanted to get feedback on how this might be best implemented. My fork is here: https://github.com/adamjaso/pgweb/tree/cflogin</p>", ["<p>Hi @adamjaso and thanks for the feedback. I've thought about some similar use case but most of those integrations are somewhat non-trivial and dont really belong in pgweb. Maybe in the next major version i will come up with plugin system but for now i dont think any of the custom stuff makes any good use for the regular users. </p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/206", "title": "Do not return error when session is locked and database url is blank", "status": "closed", "labels": [], "priority": null, "description": ["<p>Fixes issue when database url is not provided and session is locked. </p>", []]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/205", "title": "--lock-session doesn't work with a bookmark", "status": "closed", "labels": [], "priority": null, "description": ["<p>```bash\n$ ./pgweb --lock-session --bookmark=server\nPlease provide connection url</p>\n<p>$ cat .pgweb/bookmarks/server.toml \nurl = \"postgres://postgres:postgres@localhost:5432/postgres\"\n```</p>\n<p>Works without <code>--lock-session</code>.</p>", ["<p>Thanks will take a look</p>", "<p>There's also a <code>--lock-session</code> related question in #195. Seems like <code>--lock-session</code> works with <code>--url</code> only.</p>", "<p>This is fixed in master. Please give it a try.</p>", "<p>I have never compiled Go code before so I tried following (on Debian) and got the build error shown below. Any ideas?</p>\n<p>```bash\ncd workspace\ngit clone https://github.com/sosedoff/pgweb.git\ncd pgweb\nsudo apt-get install golang-go\nexport GOPATH=~/.gocode\nexport GOBIN=$GOPATH/bin\nexport PATH=$GOPATH:$GOBIN:$PATH\nmake setup\nmake dev</p>\n<p>main.go:12:2: cannot find package \"github.com/sosedoff/pgweb/pkg/api\" in any of:\n    /usr/lib/go/src/pkg/github.com/sosedoff/pgweb/pkg/api (from $GOROOT)\n    /home/kiblomqv/.gocode/src/github.com/sosedoff/pgweb/pkg/api (from $GOPATH)\n```</p>", "<p>Im not sure why you're getting the error, perhaps older version of go? Anyways, to simplify testing - i attached a binary that you could try.\n<a href=\"https://github.com/sosedoff/pgweb/files/604263/pgweb_linux_amd64.zip\">pgweb_linux_amd64.zip</a></p>", "<p>Thanks! I got it working and the fix is working too.</p>\n<p>Here are instructions if somebody else is struggling with the build. Read the installation instructions from https://golang.org/doc/install. I did the following steps:</p>\n<p>```bash\nwget https://storage.googleapis.com/golang/go1.7.3.linux-amd64.tar.gz\nsudo tar -C /usr/local -xzf go1.7.3.linux-amd64.tar.gz\nexport PATH=$PATH:/usr/local/go/bin</p>\n<p>mkdir -p $HOME/workspace/go\nexport GOROOT=$HOME/workspace/go\nexport GOPATH=$HOME/workspace/go\nexport PATH=$PATH:$GOROOT/bin</p>\n<p>go get github.com/sosedoff/pgweb\ncd workspace/go/src/github.com/sosedoff/pgweb\nmake setup\nmake dev\n```</p>\n<p>Not sure if it's best practice to have equal GOROOT and GOPATH.</p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/204", "title": "Bookmark URL Misunderstanding?", "status": "closed", "labels": [], "priority": null, "description": ["<p>Hi,</p>\n<p>Should it be possible to connect directly to a database using the bookmark url WITHOUT having to go via the login screen? \nIf so, what is the format for the full URL? For example, if I connect to pgweb with URL   http://localhost:8081/#postgres://postgres:myPwd@localhost:5432/mydb?sslmode=disable then it takes me to the normal login screen but I'm expecting it just to log straight in to the database as per the bookmark details in the URL.</p>\n<p>Am I doing something wrong here or can bookmarks only be used be on the Scheme page?</p>", ["<p>Using latest pgweb (0.9.6) you should be able to connect to the bookmark using <code>-b</code> or <code>--bookmark</code> flag. The bookmark must be saved under <code>$HOME/.pgweb/bookmarks</code> first.</p>", "<p>Btw, the url you provided does not work that way. If you have a few bookmarks saved, they'll be available on the login page. There's no other way to use them in the web app, only via the command line option. </p>", "<p>Sorry to bump into old thread. Do I understand correctly that there is no way how to dynamically link to a connection via url? E.g. we have a lot of dynamic environments which are autogenerated and I would like to automatically create links for pgweb to autonnect</p>\n<p>One option is to probably enable cors and do a post to /api from the web app where I want to include dynamically generated links and then redirect the user?</p>\n<p><strong>Edit:</strong> \nSorry, should have read through wiki first. Connect-Backend will do jus fine. Thank you</p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/203", "title": "Syntax error when trying to export data (json, csv, xml)", "status": "closed", "labels": [], "priority": null, "description": ["<p>In SQL Query tab whenever I press JSON, CSV or XML, I'll get error</p>\n<p><code>{\"error\":\"pq: syntax error at or near \\\"U0VMRUNUICogRlJPTSB3ZWF0aGVyOw\\\"\"}</code></p>\n<p>It doesn't matter whether I have made a query, e.g. <code>SELECT * FROM foo</code>.</p>", ["<p>It should be already fixed in #186 and available in master. Try that.\nNew pgweb version (with fixes) is not released yet.</p>", "<p>Updated to the latest release. Works fine now.</p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/202", "title": "Display empty sidebar", "status": "closed", "labels": [], "priority": null, "description": ["<p>Fixes #176 </p>", []]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/201", "title": "Issue-189 : Allow connecting to bookmarked server from CLI ", "status": "closed", "labels": [], "priority": null, "description": ["<p>Resolves https://github.com/sosedoff/pgweb/issues/189</p>\n<p>Tested that the feature works - \n```\n\u25b6 cat ~/.pgweb/bookmarks/server.toml\nhost = \"localhost\"\nport = 5432\nuser = \"postgres\"\ndatabase = \"nice2\"\nssl = \"disable\"</p>\n<p>```</p>\n<p><code>\u25b6 ./pgweb --bookmark=server\nPgweb v0.9.5\nConnecting to server...\nChecking database objects...\nStarting server...\nTo view database open http://localhost:8081/ in browser\n[GIN] 2016/11/10 - 01:11:30 | 200 |  17.896837ms | 127.0.0.1:63872 |   GET     /\n[GIN] 2016/11/10 - 01:11:30 | 200 |   1.374726ms | 127.0.0.1:63872 |   GET     /static/css/bootstrap.css\n[GIN] 2016/11/10 - 01:11:30 | 200 |    603.253\u00b5s | 127.0.0.1:63878 |   GET     /static/css/font-awesome.css\n[GIN] 2016/11/10 - 01:11:30 | 200 |    584.902\u00b5s | 127.0.0.1:63879 |   GET     /static/css/app.css\n[GIN] 2016/11/10 - 01:11:30 | 200 |     894.82\u00b5s | 127.0.0.1:63880 |   GET     /static/js/jquery.js\n[GIN] 2016/11/10 - 01:11:30 | 200 |   1.833552ms | 127.0.0.1:63881 |   GET     /static/js/ace.js</code></p>", ["<p>@akarki15 I see that you've changed port handling in the bookmarks. Its a breaking change since any existing bookmarks will error out with <code>Type mismatch for 'bookmarks.Bookmark.Port': Expected integer but found 'string'.</code>.</p>", "<p>Also, what happens if i specify invalid bookmark (typo, name mismatch, forgot extension, etc). Right now i get <code>Error: dial tcp [::1]:0: connect: can't assign requested address</code> or a panic</p>", "<p>@sosedoff that's because the port no. in the toml file should be a number. see the example in data folder</p>", "<p>if the port no. is of type string, the user can still pass a non integer. its just that the error would get caught later when we'd be doing <code>strings.Atoi()</code>.</p>\n<p>What bookmark settings is giving you <code>Error: dial tcp [::1]:0: connect: can't assign requested address</code>? </p>", "<p>Regarding the change to int - change itself is fine (although its breaking right now) but in future you should keep the PRs scoped to a single feature.</p>\n<p>As for the error: i removed all bookmarks from the path and specified <code>-b dummy</code> pgweb flag. Results in panic.</p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/200", "title": "Issue-189 : Allow connecting to bookmarked server from CLI", "status": "closed", "labels": [], "priority": null, "description": ["<p>Resolves https://github.com/sosedoff/pgweb/issues/189</p>\n<p>Tested that the feature works - \n```\n\u25b6 cat ~/.pgweb/bookmarks/server.toml\nhost = \"localhost\"\nport = 5432\nuser = \"postgres\"\ndatabase = \"nice2\"\nssl = \"disable\"</p>\n<p>```</p>\n<p><code>\u25b6 ./pgweb --bookmark=server\nPgweb v0.9.5\nConnecting to server...\nChecking database objects...\nStarting server...\nTo view database open http://localhost:8081/ in browser\n[GIN] 2016/11/10 - 01:11:30 | 200 |  17.896837ms | 127.0.0.1:63872 |   GET     /\n[GIN] 2016/11/10 - 01:11:30 | 200 |   1.374726ms | 127.0.0.1:63872 |   GET     /static/css/bootstrap.css\n[GIN] 2016/11/10 - 01:11:30 | 200 |    603.253\u00b5s | 127.0.0.1:63878 |   GET     /static/css/font-awesome.css\n[GIN] 2016/11/10 - 01:11:30 | 200 |    584.902\u00b5s | 127.0.0.1:63879 |   GET     /static/css/app.css\n[GIN] 2016/11/10 - 01:11:30 | 200 |     894.82\u00b5s | 127.0.0.1:63880 |   GET     /static/js/jquery.js\n[GIN] 2016/11/10 - 01:11:30 | 200 |   1.833552ms | 127.0.0.1:63881 |   GET     /static/js/ace.js</code></p>", ["<p>closing this because of weird merge commit</p>", "<p>@sosedoff last 5 commits are the ones relevant to this feature. the first one is a merge commit in my fork to get upstream changes. do you know how i should go about issuing this pr?</p>", "<p>Create a fresh branch off master and cherry pick your commits</p>\n<blockquote>\n<p>On Nov 10, 2016, at 12:26 AM, Aashish Karki notifications@github.com wrote:</p>\n<p>@sosedoff last 5 commits are the ones relevant to this feature. the first one is a merge commit in my fork to get upstream changes. do you know how i should go about issuing this pr?</p>\n<p>\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub, or mute the thread.</p>\n</blockquote>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/199", "title": "Upgrade docker to 0.9.5", "status": "closed", "labels": [], "priority": null, "description": ["<p>Dockerfile target pgweb 0.9.4, while last version is 0.9.5.</p>\n<p>Please upgrade docker file and publish the image.</p>", ["<p>Done</p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/198", "title": "Explain and Export: favor selected text", "status": "closed", "labels": [], "priority": null, "description": ["<p>Favor selected text over the whole ace editor text in \"runExplain\" and \"Export\" functionalities</p>", ["<p>LGTM, just needs a <code>make assets</code> run. </p>", "<p>Hi Dan, done, sorry for the delay. Had a little headache to set-up go and the environment on my windows machine. I launched pgweb locally and tested the change: everything looks good to me.</p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/197", "title": "Make tabs sticky: remember tab when switching between tables", "status": "closed", "labels": [], "priority": null, "description": ["<p>Implements #146 </p>", []]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/196", "title": "Allow switching between databases", "status": "closed", "labels": [], "priority": null, "description": ["", []]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/195", "title": "Implement session locking with --lock-session option", "status": "closed", "labels": [], "priority": null, "description": ["<p>Should address use case for #181.</p>", ["<p>Works only with <code>--url</code> and not with <code>--host --port --user --pass --db</code>. Is that intentional?</p>", "<p>Bug fixed. See #205. </p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/194", "title": "Allow stopping any running query from activity panel", "status": "closed", "labels": [], "priority": null, "description": ["<p>Finally implements #10</p>", []]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/193", "title": "Read only mode", "status": "closed", "labels": [], "priority": null, "description": ["<p>Implements #192.\nThe feature itself should not be considered a security measure since user can override the read-only mode in any query. For true read-only mode it should be part of the user/db permissions. \nRunning with <code>--readonly</code> flag is intended for environments where users can accidentally delete data.</p>", []]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/192", "title": "Allow running pgweb in read-only mode", "status": "closed", "labels": ["new-feature"], "priority": null, "description": ["<p>In some cases you dont want to allow any potentially destructive to be run in pgweb. Having a <code>--readonly</code> flag should take care of that.</p>\n<p>Could be implemented using:</p>\n<p><code>SET SESSION CHARACTERISTICS AS TRANSACTION READ ONLY</code></p>", []]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/191", "title": "Add escaping to order statement", "status": "closed", "labels": [], "priority": null, "description": ["<p>Fixes issues with case-sensitivity in order statements</p>", []]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/190", "title": "Show pagination only on rows view", "status": "closed", "labels": [], "priority": null, "description": ["<p>Fix for #187</p>", []]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/189", "title": "Allow connecting to bookmarked server from CLI", "status": "closed", "labels": ["new-feature"], "priority": null, "description": ["<p>Something like this would work:</p>\n<p><code>pgweb --bookmark=myserver_staging</code></p>", ["<p>should the bookmark be a local file that stores db connection settings? </p>", "<p>better - where would the bookmark info be stored?</p>", "<p>@akarki15 Server bookmarks are already implemented. This issue is about how to initialize a connection from bookmarks, which are stored under <code>$HOME/.pgweb/bookmarks/*.toml</code> </p>", "<p>i have a prototype that works. you can assign this to me</p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/188", "title": "Workbench features", "status": "open", "labels": [], "priority": null, "description": ["<p>Would love to see some features around saving the SQL query, schema, results, etc. to disk.</p>", ["<p>yeah, i was thinking about adding a database (sqlite) to store settings and other db-related stuff (mostly queries). not sure when i get to implement that. </p>", "<p>Syntax completion would be awesome too!</p>", "<p>Label-able SQL query tabs would be rad, too :)</p>\n<p>(I'm coming from <a href=\"https://github.com/workflowproducts/postage/\">Postage</a>, which is almost a viable pgadmin substitute but then the developers decided to lessen their support due to failure to monetize the project. It's worth checking out and see if some of its features can be incorporated in pgweb.)</p>", "<p>Another feature that would be nice is convenient copy pasting of selected portions of any tables being displayed in the app.</p>\n<p>As of 0.9.8, highlighting desired portion of a table is tricky and often require highlighting the whole table instead.</p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/187", "title": "Pagination/Filters - supposed to be visible on Activity/Connection ?", "status": "closed", "labels": [], "priority": null, "description": ["<p>Because the #pagination shows when switching from the Rows tab; but is hidden when switching from any of the other tabs (like Structure / Indexes).</p>\n<p>I'm not sure what the correct behavior is, it might make sense for the Activity tab to have pagination but not filtering</p>", ["<p>Pagination/Filters are only intended for browser view (aka rows). There's no supporting functionality for other pages in the backend so the correct behavior is not to show them on any other pages. If you wish to have pagination on activity page, feel free to submit PR. Closing for now since its not a top priority nor requires any special attention. </p>", "<p>Please re-open; this is a bug-report. The pagination on the activities page is not hidden after switching from the Rows tab.</p>\n<p>I wanted to fix this; but didn't know what the intended behavior is</p>", "<p>Ah, misunderstood your report. Indeed, its a bug. </p>", "<p>Fixed in master, will be available in the laster release.</p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/186", "title": "Fix base64 padding with multiple =-signs. An equal amount of dots is \u2026", "status": "closed", "labels": [], "priority": null, "description": ["<p>\u2026required in output</p>\n<p>instead of merging all =-signs into one dot, which can then not be decoded. Test string:</p>\n<p><code>SELECT * from version  where \"isHelper\" order by \"order\" desc;</code></p>\n<p>will be encode to</p>\n<p>U0VMRUNUICogZnJvbSB2ZXJzaW9uICB3aGVyZSAiaXNIZWxwZXIiIG9yZGVyIGJ5ICJvcmRlciIgZGVzYw.</p>\n<p>missing a dot at the end making it undecodable.</p>\n<p>Since =-signs only appear at the end anyway, we don't need the explicit '$' in the regexp</p>", ["<p>I'll look into this. Base64 was not really a good choice so it'll be replaced with something more robust in near future. </p>", "<p>Maybe; but the currently implementation is broken and my commit fixes it.\nIf you include this fix; there is less need for an alternative solution imo</p>", "<p>Im more that happy to merge this PR, could you please include a few example queries that did not work for you. I tried the query you provided and it went through just fine (no issues with decoding). \nAlso, which pgweb version are you on?</p>", "<p>It seems a <code>;</code> fell off, added that to my initial comment. I'm using the latest release, 0.9.5</p>\n<p>Providing additional queries is difficult as I cannot predict when multiple padding-chars are added</p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/185", "title": "opts.SortColumn must be escaped; fixes sorting on column with capitals", "status": "closed", "labels": [], "priority": null, "description": ["", ["<p>Apparantly this PR duplicates #169</p>\n<p>And yes; this breaks when a sorted column contains a capital letter</p>", "<p>If you're familiar with Go, please include a simple unit test so that we can verify the feature works correctly. If you're not i'll add the test case myself. Let me know.</p>", "<p>I'll look into it</p>", "<p>Closing this in favor of #191 </p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/184", "title": "Download functionality works only once or twice.", "status": "closed", "labels": [], "priority": null, "description": ["<p>I deployed pg-web in my own heroku instance. I am facing this error when I use download functionality more than twice.\n{\"error\":\"pq: syntax error at or near \\\"c2VsZWN0IGludm9pY2VfbnVtYmVyIGZyb20gcGF5bWVudG1hbmFnZXIuanBtX3NldHRsZW1lbnQgd2hlcmUgYmF0Y2hfaWQ9Jy0xJyBhbmQgc3RhdHVzID00MDAgb3JkZXIgYnkgc2V0dGxlbWVudF9pZCBkZXNjCgoKc2VsZWN0ICogZnJvbSBwYXltZW50bWFuYWdlci5qcG1fc2V0dGxlbWVudCB3aGVyZSBiYXRjaF9pZDw\\\"\"}</p>", ["<p>Likewise.</p>", "<p>Fixed in master and will be available in the next release.</p>", "<p>Thank you</p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/183", "title": "Support for details of foreign tables", "status": "closed", "labels": ["new-feature"], "priority": null, "description": ["<p>Currently pgweb won't show any information about foreign tables in left side bar. </p>", ["<p>Sorry, but this is something pgweb is not going to support at this time. I'll tag this issue so i can revisit it in the future.</p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/182", "title": "add new row/save", "status": "closed", "labels": [], "priority": null, "description": ["<p>I thought long and hard about asking this after scanning over the UI a bunch, but is it not possible to edit values directly within a row? When I click on a row, it's editable, but there's nowhere in the UI to save. I also don't see an option to insert a row in the table view. </p>\n<p>I know I can do both of these by executing a query, but just wanted to confirm that I'm not crazy :)</p>\n<p>Thanks!</p>", ["<p>You're not crazy, these types of features (editing, etc) are not part of the pgweb yet. I've been experimenting with a few options but havent committed to anything just yet. </p>", "<p>@sosedoff - thanks, much appreciated!</p>\n<p>Overall, loving pgweb! Appreciate your hard work.</p>\n<p>Cheers!</p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/181", "title": "Allow disabling Connect / Disconnect functions", "status": "closed", "labels": [], "priority": null, "description": ["<p>It would be great if there was a way to lock pgweb to a single database specified by the DATABASE_URL and disable the functionality to disconnect and connect to different databases.</p>\n<p>There yould be a commandline switch like <code>--single-database</code> and an environment var like SINGLE_DATABASE=1.</p>", ["<p>What is your use case for such feature?</p>", "<p>I would like to give developers access to databases for certain projects. They should not be able to connect to any other databases from pgweb.</p>", "<p>To add a little more detail: The database server is running in a virtual private network and I would like to deploy one pgweb container per app I would like to give database access to (with different basic auth credentials).</p>", "<p>Cool. Sounds interesting, few other folks have reached out to me with the same request. I'll see what i can do. </p>", "<p>+1</p>", "<p>+1</p>", "<p>Implemented in master</p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/180", "title": "Linux: Wrong paths lead to asset error", "status": "closed", "labels": [], "priority": null, "description": ["<p>Hi Dan,</p>\n<p>when I <code>go get</code> this project, <code>go build</code> and afterwards open up <code>http://localhost:8081</code>, I get an 400 error with following message:\n<code>Asset static/index.html can't read by error: Error reading asset static/index.html at /Users/sosedoff/go/src/github.com/sosedoff/pgweb/static/index.html: open /Users/sosedoff/go/src/github.com/sosedoff/pgweb/static/index.html: no such file or directory</code></p>\n<p>Taken from the closed issues, I guess #171 happened again.</p>\n<p>Also: kudos for this great project!</p>", ["<p>You're right. Fixed the issue and will probably do something about it for the long run. </p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/179", "title": "Display bytea columns hex encoded", "status": "open", "labels": [], "priority": null, "description": ["<p>Currently (on 0.9.4) the content of bytea columns is shown as a UTF-8 string in the table view.\nIt would be nice if these columns could be shown using hex encoding instead.</p>\n<p>The encoding can be done in postgres using:</p>\n<p><code>SQL\nSELECT encode(my_checksum, 'hex') FROM my_table;</code></p>", ["<p>But this kind of behavior would require the server to keep tabs on types of fields used in each table. I understand that it will be a much nicer user experience, but i dont really have the time to work on something like this. If you have any suggestions / code snippets i would definitely help getting the feature added, but otherwise i'll leave this issue open. </p>", "<p>I'm not familiar with go, but would it be easier to do the hex encoding in go?</p>\n<p>If it's possible to reflect on the result's column type to see if it's a Bytea, it should be possible to encode it using something like <code>hex.EncodeToString()</code>.</p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/178", "title": "Add AUTH_USER / AUTH_PASS environment variables", "status": "closed", "labels": [], "priority": null, "description": ["<p>It would be great if AuthUser and AuthPass could be set with environment variables. This would allow to use basic auth when running with the default docker image.</p>", ["<p>Sure, i'll have a look at this</p>", "<p>Implemented in master and will be available in the next release.</p>", "<p>Thanks, I'll try it out once the new release is out and pushed to docker hub.</p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/177", "title": "Create pgweb.service", "status": "closed", "labels": [], "priority": null, "description": ["<p>Add service file for Linux systemd (init daemon)</p>\n<p>Installation:\n- Install file to system directory <code>/etc/systemd/system</code>\n- After file installation run <code>systemctl daemon-reload</code> to load service file\n- And to enable it as service run <code>systemctl enable pgweb.service</code></p>", []]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/176", "title": "Keep sidebar entries if database does not have any objects (tables, views, etc)", "status": "closed", "labels": ["bug", "enhancement"], "priority": null, "description": ["<p>Currently, if database does not have any objects (tables, views, etc) the sidebar is simply empty. This is a bug, the sidebar should always show the schema even if there's no objects that user could view. </p>", []]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/175", "title": "Fixed broken export to CSV/JSON/XML if hashmark in URL", "status": "closed", "labels": [], "priority": null, "description": ["<p>Created a clean PR without the feature change.</p>", []]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/174", "title": "Fixed broken export to CSV/JSON/XML, added automatic SQL query generation.", "status": "closed", "labels": [], "priority": null, "description": ["<ul>\n<li>Fixed broken export to CSV/JSON/XML if there's a hashmark in the URL. Previously, the export failed after the first time.</li>\n<li>The SQL query now gets updated if the user selects, filters, or sorts a table. This both allows the export of filtered results and allows users to see the SQL behind the results.</li>\n</ul>\n<p>What's your opinion on allowing multiple filters?</p>", ["<p>RE issue with export - thanks for catching that. Would love a separate clean PR. </p>\n<p>RE other things: i don't see the point of updating the custom query when you browse table rows with any applied filters. If i'm in the process of writing the custom query it will override it as soon as i hit \"rows\". At least that's what i see in the source code. The purpose of custom sql query editor was to able to use both features at the same time. Perhaps the best way to address what you're asking for is to record all queries that happen on <code>/rows/</code> endpoint to the history. </p>", "<p>I've filed a seperate clean PR for the export issue.</p>\n<p>I see why you're not a fan of the custom SQL query override. For my use case, it would be great if users without knowledge of SQL would be able to export filtered and sorted results. To avoid the conflict with overriding custom SQL queries, it might make sense to add export buttons to the rows tab instead.\nAdditionally, by displaying a SQL version of the current request, users can learn the basics of SQL without having to write any. Maybe it might make sense to (optionally) include the SQL version in the rows tab also?</p>\n<p>Are you interested in adding the features above if I add seperate PRs?</p>", "<p>I understand that you have a very specific use case for pgweb, but having an extra functionality just to show the sql queries being used in the browse view is an overkill imo. As i mentioned before, the best way to solve the problem is to implement query logging for all browse queries so that users can quickly glance at those in the history view.</p>\n<p>Another solution would be having a smaller panel (aka \"console\") that will show all the queries that pgweb runs. This will however require extra development time, which i d'ont have at the moment. If you're interested - feel free to open a new PR. (P.S this is something that SequelPro does and its great).</p>\n<p>Cheers.</p>", "<p>Closing this for now. Part of the PR has been already merged, the rest is not going to make it in. </p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/173", "title": "Abocd", "status": "closed", "labels": [], "priority": null, "description": ["<p>I'm sorry. A version I modify is not very clear, this time I again only to the bindata.go do the modification mainly fixed static content for dynamic load, otherwise static directory file is useless.\n\u5f88\u62b1\u6b49\uff0c\u4e0a\u4e00\u4e2a\u7248\u672c\u6211\u4fee\u6539\u7684\u4e0d\u662f\u5f88\u6e05\u695a\uff0c\u8fd9\u6b21\u6211\u91cd\u65b0\u53ea\u5bf9bindata.go\u505a\u4e86\u4fee\u6539\uff0c\u4e3b\u8981\u662f\u4fee\u6539\u56fa\u5b9a\u9759\u6001\u5185\u5bb9\u4e3a\u52a8\u6001\u8f7d\u5165\u7684\u65b9\u5f0f\uff0c\u5426\u5219 static  \u76ee\u5f55\u4e0b\u9762\u7684\u6587\u4ef6\u5c31\u6ca1\u7528\u4e86\u3002</p>", ["<p>Were there any changes to the asset files? It looks like nothing was changed (except for bindata). </p>", "<p>There is no modification of files asset, but I have changed the way of displaying files asset in bindata.\n<strong>Before change:</strong></p>\n<p>``` go\nvar _staticJsThemeTomorrowJs = []byte(\"\\x1f\\x8b\\x08\\x00\\x00\\x09\\x6e\\x88\\x00\\xff\\x94\\x56\\x7b\\x6f\\xe2\\x46\\x10\\xff\\x2a\\x2e\\xfd\\x07\\x24\\x9b\\x47\\x02\\x04\\x13\\xf1\\x07\\x21\\x4e\\xd5\\xab\\xd4\\x36\\x77\\xcd\\x55\\xd7\\xaa\\xaa\\x16\\xef\\xb0\\xac\\xb0\\x77\\xdd\\x7d\\x04\\x10\\xca\\x77\\xef\\xac\\x7d\\x84\\xc7\\x2d\\x8f\\xf3\\x0a\\x33\\xb6\\x67\\x7e\\xf3\\x9b\\x87\\xc7\\x4b\\x52\\x68\\x52\\x98\\x71\\x01\\xf5\\x1a\\xca\\x2d\\x33\\x87\\x1c\\xcf\\x32\\x97\\x4a\\xc9\\x65\\x2d\\xfc\\xbb\\xa6\\xe0\\x3f\\xcb\\x15\\xd4\\xc2\\x1a\\xac\\x0a\\xa9\\x8c\\x46\\x29\\x97\\xd4\\x66\\xee\\x96\\x33\\xc9\\xf8\\xb4\\x45\\x65\\x5e\\xfb\\x27\\x9c\\x59\\x91\\x1a\\x2e\\x45\\x1d\\x42\\x13\\x8a\\xc6\\xc6\\x34\\xb9\\x7e\\x24\\x6a\\x31\\xfa\\xa1\\x13\\x9a\\x66\\xaa\\xf5\\x24\\x23\\x5a\\x8f\\x9c\\x55\\xb4\\x73\\x51\\x3e\\xf9\\x03\\x56\\x66\\x54\\x6b\\xee\\x3f\\x09\\xdc\\xd5\\xbf\\xcc\\x1a\\x03\\x2a\\xd8\\x4c\\x49\\xba\\x60\\x4a\\x5a\\x41\\x87\\xc1\\x8f\\xb3\\xbe\\x5b\\xf7\\xa9\\xcc\\xa4\\xc2\\xcb\\xee\\x23\\xae\\xc9\\x9b\\xc7\\xba\\x50\\x5c\\x98\\x28\\x27\\x8a\\x71\\x11\\x6c\\x96\\x9c\\x9a\\xf9\\x30\\xe8\\x14\\xab\\x7b\\x0f\\xdc\\x91\\xfd\\x9e\\xc7\\x68\\xeb\\xe8\\xa9\\x3c\\xae\\xf0\\x9b\\x5a\\xa5\\x25\\xb2\\xde\\x6a\\x8e\\x93\\xf1\\xd3\\xf8\\xd1\\xa7\\x89\\xdc\\x16\\xa0\\xa2\\x8c\\xac\\x31\\xca\\xf2\\x8e\\x86\\x0c\\xca\\x34\\x1e\\x05\\xfd\\xd8\\x77\\xeb\\x10\\xa3\\x82\\xb0\\x99\\xe1\\x95\\xd5\\x11\\x42\\x75\\x65\\x88\\x32\\x88\\x25\\x57\\x91\\x9e\\x13\\x2a\\x97\\xc3\\xa0\\x8d\\xeb\\xb6\\x58\\x05\\x6d\\xfc\\x6d\\x83\\xba\\x92\\x9c\\x81\\xe2\\x90\\x97\\x62\\xd3\\xfa\\x4d\\xaf\\x17\\x06\\xe5\\xa9\\xdd\\xb8\\x0e\\x67\\xaa\\x10\\x02\\x90\\x56\\x55\\x9b\\x61\\x10\\x75\\x1c\\x1f\\x5c\\x51\\x59\\x1e\\xa9\\x28\\xa8\\xb2\\x54\\x81\\x96\\x19\\xa7\\x18\\x7e\\xc7\\xad\\xeb\\xd0\\x09\\x46\\xff\\x0a\\x51\\x86\\x6d\\x7d\\x94\\xc4\\xe4\\xc9\\x2d\\x1f\\x4a\\xd5\\x68\\xd1\\x09\\xd3\\xaa\\x05\\x02\\x44\\xa0\\xa9\\x5b\\xdf\\x53\\x4a\\xa0\\xd1\\x12\\xe3\\x71\\x25\\xf8\\x36\\x2a\\x4f\\x51\\x2b\\x5b\\x2e\\x5e\\xb9\\xe6\\xd3\\x0c\\x76\\x5d\\x74\\x3a\\x05\\x0b\\x58\\x3b\\x17\\xa1\\x8f\\x15\\x18\\xe2\\xbb\\xaf\\x8d\\x54\\x84\\xc1\\x99\\x47\\xa5\\x6c\\xd6\\x85\\x5f\\xc7\\x16\\x6e\\x1a\\xbc\\xeb\\xec\\x58\\x0e\\xe2\\x5e\\x3c\\x1e\\x9c\\x61\\x59\\xca\\xb2\\x00\\x45\\xcc\\xfe\\x3b\\x72\\x9b\\xc4\\x71\\xec\\x2d\\x4d\\x2a\\x05\\x36\\xb1\\xa8\\x9c\\xa5\\x73\\x82\\xbd\\x83\\xa5\\xf2\\xb1\\x3a\\xd0\\xcc\\x88\\x60\\xf6\\x44\\x88\\x07\\x8a\\xc2\\xe6\\xa0\\x78\\xea\\xd3\\x3b\\xa0\\x8c\\xc3\\x51\\x95\\x92\\x15\\xdc\\x5c\\x4a\\xca\\xd6\\x83\\x4f\\xef\\x95\\x28\\x4e\\xb0\\xb4\\xd5\\x8c\\xc2\\x78\\xb0\\x48\\xb0\\x97\\x8a\\xa7\\xde\\xe0\\xae\\x73\\x39\\x15\\x25\\xa1\\x9d\\x55\\xbf\\xdf\\x8f\\xfb\\xf1\\x89\\x5e\\x22\\xae\\xdd\\x36\\x47\\x83\\xcc\\x33\\xe2\\x26\\x83\\x9b\\xc1\\xcd\\x39\\x90\\x52\\xa6\\x50\\x28\\x48\\x09\\xb6\\xf6\\x35\\x98\\xa7\\x3b\\x62\\x26\\x33\\xea\\x9d\\xb4\\xdd\\x9b\\xbb\\xce\\x38\\xf9\\x3a\\x07\\xa2\\xcb\\x03\\x17\\x84\\xe1\\x66\\x5d\\x55\\x13\\xb3\\x59\\x81\\x7f\\xfd\\x1c\\x5d\\xaa\\xd4\\x39\\xbd\\x6d\\xa5\\x76\\x61\\x56\\xcc\\x7c\\x1c\\x0e\\xaa\\xef\\xbe\\x74\\xdf\\xf7\\xde\\x4c\\xe2\\x38\\x69\\xb7\\x7d\\xc0\\x73\\x20\\x94\\x0b\\xe6\\x7d\\xbb\\x71\\xe6\\xd8\\xe2\\x92\\x96\\x36\\xf8\\x1d\\x64\\x3b\\x57\\x77\\x9d\\xc1\\xc4\\xef\\xca\\x97\\x47\\x43\\xbc\\xa0\\x7b\\xaa\\xbb\\x37\\x83\\x18\\x74\\x35\\xb5\\x06\\x22\\x67\\x7e\\x6a\\x1e\\x9d\\x83\\xad\\xb8\\x96\\xa2\\x02\\x86\\x7b\\x8e\\xeb\\xca\\x72\\xba\\x6f\\x53\\x99\\xe7\\xc8\\x75\\x6f\\x40\\x25\\x71\\x7b\\xe0\\xed\\x22\\x2e\\x28\\x6a\\x46\\xcc\\x72\\x7a\\xf4\\xe1\\xb0\\x2a\\xab\\x53\\x62\\xc8\\x90\\xe7\\x38\\x51\\x5a\\x85\\x60\\xd8\\xe8\\x1a\\xfa\\xdd\\x90\\x7f\\x7e\\xf8\\xed\\xe3\\xb2\\xfd\\xcb\\x4f\\x4c\\x8e\\xf1\\xf8\\xf5\\xd3\\xcb\\x3c\\x79\\x61\\x4e\\x4c\\xdc\\x69\\x32\\x19\\x7f\\x71\\x7f\\x7f\\xb1\\xe9\\x17\\x51\\xde\\x6d\\x67\\xc9\\xf3\\xe7\\xe7\\x9f\\xf3\\x3f\\x7f\\xef\\xb6\\xf0\\x98\\x75\\xa7\\xd4\\xde\\xce\\x5a\\x0f\\xcb\\x71\\x36\\x63\\xa9\\xa1\\xf6\\x61\\xd0\\x7b\\x76\\x9a\\x0f\\x1f\\x3e\\xbe\\xf4\\x12\\xb5\\xf8\\xc0\\x18\\x1b\\x8d\\x1a\\x81\\xe2\\x6c\\x6e\\x02\\x05\\x05\\x10\\x13\\xad\\xdf\\x6a\\xf7\\x98\\x85\\x40\\x8d\\x70\\xe7\\xd6\\x6c\\xbe\\xef\\xc2\\x1a\\xf7\\xaa\\xc9\\x73\\xd7\\x62\\x13\\xad\\x3f\\x95\\xb9\\xac\\xbf\\xef\\xb0\\xf6\\x76\\x61\\x8d\\xb7\\xc6\\xff\\x01\\x00\\x00\\xff\\xff\\x3a\\x10\\x34\\xb4\\xfc\\x09\\x00\\x00\")</p>\n<p>func staticJsThemeTomorrowJsBytes() ([]byte, error) {\n    return bindataRead(\n        _staticJsThemeTomorrowJs,\n        \"static/js/theme-tomorrow.js\",\n    )\n}\n```</p>\n<p><strong>After the change:</strong></p>\n<p>``` go\nvar _staticJsThemeTomorrowJs = []byte(\"\")</p>\n<p>func staticJsThemeTomorrowJsBytes() ([]byte, error) {\n    return LoadFileContent(\"static/js/theme-tomorrow.js\")\n    //return bindataRead(\n    //  _staticJsThemeTomorrowJs,\n    //  \"static/js/theme-tomorrow.js\",\n    //)\n}\n```</p>", "<p>Does that mean you manually changed the bindata.go file?</p>", "<p>I'm sorry, I was wrong, I do not know this document is generated</p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/172", "title": "Update bindata", "status": "closed", "labels": [], "priority": null, "description": ["<p>\u4fee\u6539\u9759\u6001\u6587\u4ef6\u4e3a\u52a8\u6001\u8f7d\u5165</p>", ["<p>Im not sure i understand the purpose of this PR. All the listed changes are already in master.</p>", "<p>Closing due to no response, also its not clear what's the purpose of the PR. </p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/171", "title": "Heroku deploy (with deploy button) is broken", "status": "closed", "labels": [], "priority": null, "description": ["<p>When I deploy pgweb to heroku with deploy button from github. I get following error </p>\n<p>Asset static/index.html can't read by error: Error reading asset static/index.html at /Users/sosedoff/go/src/github.com/sosedoff/pgweb/static/index.html: open /Users/sosedoff/go/src/github.com/sosedoff/pgweb/static/index.html: no such file or directory</p>\n<p>I have no idea what's going on.</p>", ["<p>Fixed. I accidentally committed dev version of bindata (which is used to store all static assets).</p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/170", "title": "[UI] fix CSV, JSON, and XML export with --prefix running", "status": "closed", "labels": [], "priority": null, "description": ["<p>When running with prefix enabled, allow the CSV, JSON and XML buttons to actually work.</p>", ["<p>I would also really appreciate if you would do another release if this is acceptable.</p>", "<p>0.9.4 is out, also pushed to docker registry. https://hub.docker.com/r/sosedoff/pgweb/tags/</p>", "<p>You're awesome! up and running in Prod!</p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/169", "title": "Update client.go", "status": "closed", "labels": [], "priority": null, "description": ["<p>quote field in order condition</p>", ["<p>@xujif was not having quotes causing any issues? </p>", "<p>@sosedoff  can not order the data when click the field which with uppercases</p>", "<p>@xujif Could you provide an example SQL so i can reproduce, add a test and fix the issue?</p>", "<p>Nevermind, i was able to fix the issue in #191.</p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/168", "title": "Fix performance on previewing large tables", "status": "closed", "labels": [], "priority": null, "description": ["<p>When a table is viewed the function <code>TableRowsCount</code> is called to get the size of the table for pagination. This unfortunately is a very slow operation on large tables as it calls <code>SELECT COUNT(1) FROM TABLE</code> which is slow in Postgres and will cause the application to hang on tables in the many gigabytes range.</p>\n<p>I've got a working commit here which uses the estimated table size (if it is available). I removed the \"Page X of Y\" at top right and replaced with just \"Page X\" because sometimes estimated size is not available (i.e. when it is a view).</p>\n<p>https://github.com/trengrj/pgweb/commit/b8cc628e4190f5c1c7d43cf776a4e3f5146e3f56</p>\n<p>I think it is important to be able to preview any table quickly, but agree the pagination is useful. What are you views on fixing this issue? Maybe some sort of hybrid approach?</p>", ["<p>Thanks for bringing this up and sorry for the late response. Indeed, COUNT(*) is very slow on large data sets so having a hybrid approach would solve the issue (partially). Ideally, we could first check the estimated rows count and if its below 100k (just an example) rows we use COUNT, otherwise use the estimated rows count for pagination. I would also prefer keeping the pagination where possible instead of removing it altogether, i know this could be a tricky feature, but still. </p>", "<p>It's also worth noting that OFFSET pagination will get slower the further you paginate, because postgres has to first fetch all rows preceding the offset and throw them away. A faster way is to use keyset pagination, something like <code>WHERE id &gt; (last row id from previous page) LIMIT n</code>. Not sure if that's practical to implement here, because it requires knowledge of the underlying table.</p>\n<p>Also see <a href=\"http://use-the-index-luke.com/no-offset\">We need tool support for keyset pagination</a> for more info.</p>", "<p>Does anyone have any interest in tackling the problem?</p>", "<p>Coming back to this. So im thinking of having a map (per established connection) that will hold information about tables that are somewhat large (&gt; 100k rows). For table browse requests we will first check if that map contains the table and if it does we will fetch the rows stats using count estimates. On database switch that map will be cleared out.</p>\n<p>Any thoughts?</p>", "<p>The DZone article <a href=\"https://dzone.com/articles/faster-postgresql-counting\">Faster PostgreSQL Counting</a> has some useful tips on getting good estimate counts on large tables.</p>\n<p>Instead of keeping a map of large tables in memory you could just look at the table stats in postgres on the fly, I don't think caching that info is worth the trouble. </p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/167", "title": "Only view schema with USAGE privileges", "status": "closed", "labels": [], "priority": null, "description": ["<p>This change makes a schema visible (i.e. viewable on the left panel) only if the current user has access to it.</p>\n<p>On a complex database it can get quite messy without this being set.</p>\n<p>I didn't include the modified <code>bindata.go</code> file in this pull request, what is the procedure for updating this file?</p>", ["<p>If you did not change any frontend code (html/css/js) there's no need to include updated bindata file in the PR. </p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/166", "title": "Secure http server", "status": "closed", "labels": [], "priority": null, "description": ["<p>Is there any plan for implementing https protocol instead of http? running this on production server is risky when it doesn't have https protocol. I know this pgweb should only ran only when we need it. But we still need the transport to be secured.</p>\n<p>CLOSED: Sorry, didn't see the old post. I closed this issue. :)</p>", []]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/165", "title": "Specify cell timestamp layout for CSV export, #163", "status": "closed", "labels": [], "priority": null, "description": ["<p>SUBJ</p>", []]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/164", "title": "Switch docker image to scratch", "status": "closed", "labels": ["enhancement"], "priority": null, "description": ["<p>This will drastically reduce overall image size.</p>", ["<p>Switched to alpine.3.3 instead. Overall size is 17Mb comparing to 308Mb</p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/163", "title": "Timestamp not recognized by Excel in CSV output", "status": "closed", "labels": ["enhancement"], "priority": null, "description": ["<p>I exported a table that has a timestamp without timezone column. The JSON exports the data correctly but the CSV timestamp data column is not recognized by Excel.\nJSON data output = \n<code>[{\"created_at\":\"2015-06-22T01:48:14.928Z\",\"pk\":103}]</code></p>\n<p>CSV data output = \n<code>pk,created_at</code>\n<code>103,2015-06-22 01:48:14.928 +0000 +0000</code></p>", ["<p>Sorry but i don't have Excel around, only Google Docs. I made a sample CSV export document that has both date and datetime columns. Try to import it and see if that works. Here's the link: https://dl.dropboxusercontent.com/u/486271/pgweb-1467084910.csv</p>\n<p>Im not 100% sure how timestamps should be formatted in CSV files for Excel ingestion, but with a bit of googling it looks like its a standard <code>yyyy-mm-dd hh:mm:ss</code>. I pushed a new branch with the fix if you're interested in trying it out.</p>", "<p>Yes that worked! Thank you!!!</p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/162", "title": "Issue-161_fix_assertion : improve test assertion", "status": "closed", "labels": [], "priority": null, "description": ["<ul>\n<li>Fixes issue https://github.com/sosedoff/pgweb/issues/161</li>\n</ul>", ["<p>this is no longer an issue. closing it.</p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/161", "title": "test assertion assumes a clean postgres db", "status": "closed", "labels": [], "priority": null, "description": ["<p>i am running <code>make test</code> on master and it is failing because the expected tables returned by <code>statements.PG_OBJECTS</code> does not <em>exactly</em> match the tables that the running postgres has. <code>statements.PG_OBJECTS</code> returns tables from all databases, not just the one that the <code>client.TestAll()</code> creates. however, the test at <a href=\"https://github.com/sosedoff/pgweb/blob/master/pkg/client/client_test.go#L203\">line 203</a> asserts equality- which fails as the following output demonstrates</p>\n<p>```\n\u25b6 make test\ngodep go test -cover ./...\n?       github.com/sosedoff/pgweb   [no test files]\nok      github.com/sosedoff/pgweb/pkg/api   0.026s  coverage: 8.3% of statements\nok      github.com/sosedoff/pgweb/pkg/bookmarks 0.015s  coverage: 100.0% of statements\nTeardown error: exit status 1\n--- FAIL: TestAll (1.34s)\n        Error Trace:    client_test.go:203\n            client_test.go:340\n    Error:      Not equal: []string{\"alternate_stock\", \"authors\", \"book_backup\", \"book_queue\", \"books\", \"customers\", \"daily_inventory\", \"distinguished_authors\", \"editions\", \"employees\", \"favorite_authors\", \"favorite_books\", \"money_example\", \"my_list\", \"numeric_values\", \"publishers\", \"schedules\", \"shipments\", \"states\", \"stock\", \"stock_backup\", \"subjects\", \"text_sorting\"} (expected)\n                    != []string{\"alternate_stock\", \"authors\", \"book_backup\", \"book_queue\", \"books\", \"customers\", \"daily_inventory\", \"distinguished_authors\", \"editions\", \"employees\", \"favorite_authors\", \"favorite_books\", \"money_example\", \"my_list\", \"numeric_values\", \"persons\", \"publishers\", \"schedules\", \"shipments\", \"states\", \"stock\", \"stock_backup\", \"subjects\", \"text_sorting\"} (actual)</p>\n<pre><code>        Diff:\n        --- Expected\n        +++ Actual\n        @@ -1,2 +1,2 @@\n        -([]string) (len=23 cap=23) {\n        +([]string) (len=24 cap=32) {\n          (string) (len=15) \"alternate_stock\",\n        @@ -16,2 +16,3 @@\n          (string) (len=14) \"numeric_values\",\n        + (string) (len=7) \"persons\",\n          (string) (len=10) \"publishers\",\n</code></pre>\n<p>FAIL\ncoverage: 46.5% of statements\nFAIL    github.com/sosedoff/pgweb/pkg/client    1.362s\nok      github.com/sosedoff/pgweb/pkg/command   0.014s  coverage: 80.0% of statements\nok      github.com/sosedoff/pgweb/pkg/connection    0.178s  coverage: 90.0% of statements\n?       github.com/sosedoff/pgweb/pkg/data  [no test files]\n?       github.com/sosedoff/pgweb/pkg/history   [no test files]\n?       github.com/sosedoff/pgweb/pkg/shared    [no test files]\n?       github.com/sosedoff/pgweb/pkg/statements    [no test files]\n?       github.com/sosedoff/pgweb/pkg/util  [no test files]\ngodep: go exit status 1\nmake: *** [test] Error 1\n```</p>\n<p>lets change the <code>assert.Equal</code> in line 208 to something that checks asserts that <code>objects[\"public\"].Tables</code> <em>contains</em> all the expected tables. something like : </p>\n<p>```</p>\n<pre><code>for table := range tables {\n    assert.True(t, stringSliceContains(objects[\"public\"].Tables, table))\n}\n// stringSliceContains(a,b) returns whether slice a contains string b\n</code></pre>\n<p>```</p>", ["<p>How did you get extra tables in the test database?</p>", "<p>i didn't add table to the test database. <code>statements.PG_OBJECTS</code> returns tables from <em>all</em>  databases</p>", "<p>PG_OBJECTS statement only returns objects from the current database. Also, if you look at client tests, it drops and then recreates the database on every run so you should not have any extra tables in your database. Would need more info on your setup since i cant reproduce your issue. </p>", "<p>You should not have any tables while running <code>make test</code> since it will drop and recreate the database on every run, see https://github.com/sosedoff/pgweb/blob/master/pkg/client/client_test.go#L332\nClosing for now since its an edge case and has something to do with your local setup. I tried to reproduce with no luck.  </p>", "<p>sorry for replying late @sosedoff. i found out that for some reason whenever i create a new pg database, it was automatically creating a table named \"person\". i think there is some default schema being applied to every new table and that was polluting the test db. since this is an issue very specific to my machine setup, im going to close the pull request as well. thanks for getting back though!</p>", "<p>@akarki15 check the <code>template1</code> database.</p>\n<p>https://www.postgresql.org/docs/current/static/sql-createdatabase.html</p>", "<p>holy shit that was it. thanks a lot @cbandy!</p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/160", "title": "Process was not started", "status": "closed", "labels": [], "priority": null, "description": ["<p>I have cloned sources, build it on target machine ( raspberri pi 2+ )\nIt was compiled, but when i'm trying to run it, it's literally doing nothing. \n<code>ps aux | grep pgweb</code> also showing nothing. </p>\n<p>I tried in debug/release mode, with key -s ( to prevent browser opening ), providing connection data in different way , but nothing happens. </p>\n<p>non any single message or error...</p>", ["<p>can you detail how you went about running the binary? and what the output of invoking the binary was?</p>", "<p>There was no output at all. </p>\n<p><code>./pgweb --bind=10.8.0.30 --listen=3005 -s --host=localhost -d --user=cambolive_user --db=cambolive_db</code></p>\n<p><code>./pgweb --bind=10.8.0.30 --listen=8081 -s</code></p>\n<p><code>./pgweb --url postgres://cambolive_user:secret_pass@cambolive_db:5432/postgres?sslmode=false --bind=10.8.0.30</code></p>\n<p><code>root@minibian:~/pgweb# ls -la\ntotal 11136\ndrwxr-xr-x 11 root root     4096 Jun 12 10:52 .\ndrwx------ 13 root root     4096 Jun 14 03:08 ..\ndrwxr-xr-x  8 root root     4096 Jun 12 10:20 .git\n-rw-r--r--  1 root root       17 Jun 12 10:20 .gitattributes\n-rw-r--r--  1 root root       34 Jun 12 10:20 .gitignore\n-rw-r--r--  1 root root      242 Jun 12 10:20 .travis.yml\n-rw-r--r--  1 root root     6556 Jun 12 10:20 CHANGELOG.md\n-rw-r--r--  1 root root      177 Jun 12 10:20 CONTRIBUTING.md\n-rw-r--r--  1 root root      240 Jun 12 10:20 Dockerfile\ndrwxr-xr-x  2 root root     4096 Jun 12 10:20 Godeps\n-rw-r--r--  1 root root     1108 Jun 12 10:20 LICENSE\n-rw-r--r--  1 root root     2413 Jun 12 10:20 Makefile\n-rw-r--r--  1 root root      107 Jun 12 10:20 Procfile.bak\n-rw-r--r--  1 root root     3271 Jun 12 10:20 README.md\n-rw-r--r--  1 root root      183 Jun 12 10:20 SCREENS.md\n-rw-r--r--  1 root root      665 Jun 12 10:20 app.json\n-rw-r--r--  1 root root      475 Jun 12 10:20 appveyor.yml\ndrwxr-xr-x  2 root root     4096 Jun 12 10:20 data\n-rw-r--r--  1 root root     2512 Jun 12 10:20 main.go\n-rwxr-xr-x  1 root root 11295392 Jun 12 10:32 pgweb\ndrwxr-xr-x 12 root root     4096 Jun 12 10:20 pkg\ndrwxr-xr-x  2 root root     4096 Jun 12 10:20 screenshots\ndrwxr-xr-x  2 root root     4096 Jun 12 10:20 script\ndrwxr-xr-x  5 root root     4096 Jun 12 10:26 src\ndrwxr-xr-x  6 root root     4096 Jun 12 10:20 static\ndrwxr-xr-x  4 root root     4096 Jun 12 10:20 vendor</code></p>", "<p>@ekiyanov could you provide the following:\n- go version used to compile sources\n- build commands used to make a binary</p>\n<p>RPI is not \"officially\" supported (no precompiled binaries) but i dont see why it wont run on the device. In fact i ran a cross-compiled binary on RPI once i think, didnt have any issues.</p>", "<p>Pgweb now has support for ARMv5. Since i have a few raspberry pi's around i was able to verify that cross-compilation works fine. Im using Go 1.6 for all development just FYI.</p>\n<p>I dont have any pre-built binaries out yet (will be available starting with 0.9.3) but you can build one yourself. Make sure to pull latest changes and then run <code>make release</code>. After its all done, grab a binary file <code>./bin/pgweb_linux_arm_v5</code> from the current directory and drop it onto your pi. Should work.</p>", "<p>P.S Here's the command used to cross-compile: https://github.com/sosedoff/pgweb/blob/master/Makefile#L56-L58</p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/159", "title": "sosedoff/pgweb:latest is not latest", "status": "closed", "labels": [], "priority": null, "description": ["<p>sosedoff/pgweb:latest seems to be 5 months old and looking at the size, corresponds to version 0.8 instead of latest 0.9.2</p>\n<p>https://hub.docker.com/r/sosedoff/pgweb/tags/</p>", ["<p>You're right. I think i pushed a wrong tag.</p>", "<p>Fixed. Public registry should contain proper <code>latest</code> and <code>0.9.2</code> release rebuilt using alpine image and as a result its image side has been reduced to 8Mb. </p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/158", "title": "docker deployment \"too fast\"", "status": "closed", "labels": [], "priority": null, "description": ["<p>I am using pgWeb in dev environment with my DB in docker-compose, the problem is pgweb docker starts too fast meaning before postgres is up and accepting connection and typically terminates with <code>Error: dial tcp 172.19.0.2:5432: getsockopt: connection refused</code></p>\n<p>it would be nice we there is an env parameter to pause before the service starts or even better us <a href=\"https://github.com/vishnubob/wait-for-it\">wait-for-it.sh</a> entrypoint script</p>\n<p>this issue seems to be a bit less frequent when I use 0.9.2 instead of latest docker (or no tag docker)\n see https://github.com/sosedoff/pgweb/issues/159</p>", ["<p>closing... this seems to be very rare close to non-existent in 0.9.2 ... I was using latest release which corresponds to 0.8</p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/157", "title": "allow changing default schema via URL", "status": "closed", "labels": [], "priority": null, "description": ["<p>since 9.4 postgres supports <code>currentSchema</code> via URL, it would be nice if this could be added to pgweb</p>\n<p><code>jdbc:postgresql://localhost:5432/mydatabase?currentSchema=myschema</code></p>", ["<p>Pgweb under the hood uses <a href=\"https://github.com/lib/pq\">lib/pq</a> library to connect to postgresql, please submit your request in that project.</p>", "<p>thank you! Opened ticket, got really quick great responses. It looks like the pq connection string supports it, it does not follow same naming as JDBC does, pq does does not use <code>currentSchema</code>, it uses <code>search_path</code> instead, the connection looks like this and works like a charm :-)</p>\n<p><code>postgresql://localhost:5432/mydatabase?search_path=myschema</code></p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/156", "title": "Bytea fields download automatically when selecting tables", "status": "closed", "labels": [], "priority": null, "description": ["<p>If you select a table it automatically opens the rows view,  when it has bytea data pgweb downloads it all and is unresponsive till it finishes, with no notification of what's going on or how long to remain.</p>\n<p>I think bytea fields should have a link to download, ideally with the size if that's possible.  </p>\n<p>Second best would be a progress bar or something, that would also stop the browser messages about an unresponsive tab.</p>", ["<p>Please provide a sample SQL file so that i can test and fix the problem.</p>", "<p>```\ncreate table tmp (\n    blob bytea\n);</p>\n<p>insert into tmp(blob) values('\\xn```</p>\n<p>I've been digging into the code, I don't know golang but I've managed to tentatively identify a bytea field and substitute its size, it's possible I'm not identifying it properly but maybe this gives you a head start.  I was trying to look for the '\\x' that byte data starts with (I think always but again not sure). </p>\n<p><code>func (res *Result) PrepareBytea() {\n        for i, row := range res.Rows {\n                for j, col := range row {\n            t := reflect.TypeOf(col).Kind()\n            if(t != reflect.String) {\n                continue\n            }\n            str := col.(string)\n            if str[0] == 255 {\n                res.Rows[i][j] = len(str)\n            }\n        }\n    }\n}</code></p>", "<p>Thanks, i will check on this issues once i get some free time. </p>", "<p>I just created a table from your example using pgweb 0.9.3 (latest) on OSX (chrome) and this is what i got so far:\n<img alt=\"screenshot 2016-07-05 18 27 59\" src=\"https://cloud.githubusercontent.com/assets/71051/16603016/4cd133d2-42de-11e6-99a8-5702bbcc4bc6.png\" /></p>\n<p>Nothing was downloaded automatically. Also tried Safari and Firefox, both work.\nWhat OS and browser are you using? </p>", "<p>That is what you downloaded, you just need to provide a lot more to see the effect, try some 10s of megabytes in the bytea value or reproduce the row 1000s of times and you will probably see your browser start straining.  I should have mentioned this I just didn't want to put an incredibly massive example.  In our case we have a table with about 2000 rows and a small amount of binary data for each row that totals 150 megabytes.</p>", "<p>Ah i see what you mean now. What is the behavior you expect? </p>", "<p>Ideally clicking the tables wouldn't include the raw data at all, that could be solved by:\n- only returning the bytea data when selecting it explicitly, either dropping it at the server or preferably not selecting it\n- a way to edit the 'you selected the table' query so you can exclude columns</p>", "<p>This was pretty much fixed for me by limiting the number of rows returned when clicking a table.</p>\n<p>Thanks for all your wonderful work @sosedoff! </p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/155", "title": "Upgrade to Go1.6, use vendor", "status": "closed", "labels": [], "priority": null, "description": ["<p>Also make sure we're using a more recent version of godep</p>", ["<p>Good idea. Might as well add go1.6 to travis CI.</p>", "<p>Just needs a git squash and it should be good to go</p>", "<p>Thanks!</p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/154", "title": "Multiple Query tabs", "status": "closed", "labels": ["new-feature"], "priority": null, "description": ["<p>Hello,</p>\n<p>first of all, awesome project :+1: . I've been looking for a slick open-source postgres interface for a while now, and this seems to be going in the right direction.</p>\n<p>Therefore, may I suggest a feature: allow for multiple query tabs to be open at the same time, like you can have in SQL server, HeidiSQL, ... I think I'm not the only one who like to have different queries + result sets open at the same time :smile: </p>\n<p>Thanks!</p>", ["<p>There's a multi-session support available right now, but its slightly different from what you're asking. Although it allows you to run number of connection with different servers in the same browser.</p>\n<p>Thanks for the suggestion, i'll look into it as soon as i have spare time.</p>", "<p>This feature would require a major overhaul of the current backend and frontend implementations, so closing this until better times. </p>", "<p>@sosedoff I implemented the same feature in mysqlweb using bootstrap-tabs. Every tab contains it's own query window &amp; result window.\nIf it helps:\nhttps://github.com/smurfpandey/mysqlweb/commit/cdedd5f8f920e2b933c6f915e624f5cecfa5713d\nhttps://github.com/smurfpandey/mysqlweb/commit/ba875b6c487cd64d28ba428636e7c05ef7d67a04</p>", "<p>Thats cool, although i just don't see an immediate need for the feature at this time. If someone really wants it  they're free to implement it and open a PR. </p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/153", "title": "push to dockerhub?", "status": "closed", "labels": [], "priority": null, "description": ["<p>It would be great to get pgweb 0.9.2 from dockerhub, if you have time.</p>", ["<p>sure thing. i should probably automate that, always forget.</p>", "<p>done</p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/152", "title": "docker run failing", "status": "closed", "labels": [], "priority": null, "description": ["<p>The run command to boot up the web ui is failing.\nAs per wiki instructions: https://github.com/sosedoff/pgweb/wiki/Docker</p>\n<p>I am not that familiar with docker, but it may be to do with the fact i am using the latest docker for mac on OSX that uses xhyve (and not virtual box), and it maybe an API change with dockers latest release ?</p>\n<p>Docker Information\nAPI Endpoint: dockerapi\nAPI Version: 1.23\nDocker version: 1.11.1</p>\n<p>```</p>\n<p>x-MacBook-Pro:pgweb apple$ docker run -p 8081:8081 --link db:db -e DATABASE_URL=postgres://postgres:postgres@db:5432/postgres\ndocker: \"run\" requires a minimum of 1 argument.\nSee 'docker run --help'.</p>\n<p>Usage:  docker run [OPTIONS] IMAGE [COMMAND] [ARG...]</p>\n<p>Run a command in a new container\nx-MacBook-Pro:pgweb apple$ </p>\n<p>```</p>", ["<p>I updated the wiki to include the proper command. It was missing the image name (sosedoff/pgweb).</p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/151", "title": "Can't get pgweb running from docker with wiki config", "status": "closed", "labels": [], "priority": null, "description": ["<p><code>docker run</code> prints out that it starts at 0.0.0.0:8081,but in wiki I see localhost:8080 and nothing of it works</p>\n<p>It works when I change port to 8081 <code>docker run -p 8081:8081 ...</code></p>", ["<p>You should be using port 8081, i think i havent updated wiki to reflect the change in default port used by pgweb.</p>", "<p>Thanks for the response I fugured it out and update comment :+1: </p>", "<p>Everything works fine with port 8081</p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/150", "title": "Specify search_path (schema via cmd)", "status": "closed", "labels": [], "priority": null, "description": ["<p>I would like a --search-path command line argument which connects to the correct schema.</p>\n<p>Currently im launching pgweb programaticly and would like an option to run\nset search_path to XXXX; so i dont have to input it in the webui before running my selects.</p>\n<p><code>Run(\"pgweb\",\n            \"--port\", db.Port(),\n            \"--host\", db.Host(),\n            \"--user\", db.Username(),\n            \"--pass\", db.Password(),\n            \"--db\", db.Db(),\n            \"--ssl\", \"disable\",\n        )</code></p>", ["<p>Since you're running pgweb programmatically, you can make a call to the api to set the schema. Here's an example:</p>\n<p><code>curl http://localhost:8081/api/query?query=SET%20search_path%20TO%20myschema</code></p>", "<p>Oh, thanks. Closing this as this solves my issue!</p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/149", "title": "failling tests: executables not found in $PATH", "status": "closed", "labels": [], "priority": null, "description": ["<p>im getting the following error on <code>make test</code>. looks like https://github.com/sosedoff/pgweb/pull/139 is also failing due to the same error.</p>\n<p><code>github.com/sosedoff/pgweb  master \u2714                                                                                                                                                                   46d\n\u25b6 make test\ngodep go test -cover ./...\n?       github.com/sosedoff/pgweb   [no test files]\nok      github.com/sosedoff/pgweb/pkg/api   0.018s  coverage: 8.3% of statements\nok      github.com/sosedoff/pgweb/pkg/bookmarks 0.020s  coverage: 100.0% of statements\nTeardown error: exec: \"dropdb\": executable file not found in $PATH\nDatabase creation failed:\nError: exec: \"createdb\": executable file not found in $PATH\nFAIL    github.com/sosedoff/pgweb/pkg/client    0.010s\nok      github.com/sosedoff/pgweb/pkg/command   0.013s  coverage: 80.0% of statements\nok      github.com/sosedoff/pgweb/pkg/connection    0.187s  coverage: 90.0% of statements\n?       github.com/sosedoff/pgweb/pkg/data  [no test files]\n?       github.com/sosedoff/pgweb/pkg/history   [no test files]\n?       github.com/sosedoff/pgweb/pkg/shared    [no test files]\n?       github.com/sosedoff/pgweb/pkg/statements    [no test files]\n?       github.com/sosedoff/pgweb/pkg/util  [no test files]\ngodep: go exit status 1\nmake: *** [test] Error 1</code></p>", ["<p>Do you have postgresql installed locally?</p>\n<p>For my local dev i use mostly homebrew-provided postgresql:</p>\n<p><code>$ which createdb\n/usr/local/bin/createdb</code></p>", "<p>the issue was i didn't have the postgres command lines tools installed. i fixed it now and it is working.</p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/148", "title": "responsive search bar", "status": "closed", "labels": [], "priority": null, "description": ["<p>the search bar gets all weird when the window is resized. i am running chrome 49.0.2623.112 (64-bit) on a mac os x 10.10.3 (yosemite). this is a low hanging fruit -</p>\n<p><img alt=\"screen shot 2016-04-16 at 11 58 30 am\" src=\"https://cloud.githubusercontent.com/assets/3751173/14582139/d2b7c0fe-03ca-11e6-945d-34aef23b6ffe.png\" /></p>", ["<p>@akarki15 if you'd like to fix this - go ahead. otherwise let me know if i can close the issue, it hasn't been a problem for me afaik.</p>", "<p>You can close this one</p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/147", "title": "A small typo fix", "status": "closed", "labels": [], "priority": null, "description": ["<p>Noticed a typo while going through code.</p>", []]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/146", "title": "Make tabs sticky", "status": "closed", "labels": ["enhancement"], "priority": null, "description": ["<p>It would be nice to make tabs sticky- it is annoying that whenever I change table, it defaults to <code>Rows</code>. A lot of times I am just concerned with the <code>Structure</code> or schema of the table. </p>\n<p>Hence making the tabs sticky is a quick yet effective solution to this.</p>", ["<p>Thanks for the feedback. This change should be a fairly easy one, i might get to work on it this week unless you have a PR ready. </p>", "<p>I don't have a PR yet, so feel free to work on it!</p>", "<p>Implemented. Should be soon in master. </p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/145", "title": "Support for Client Certificates", "status": "closed", "labels": [], "priority": null, "description": ["<p>When a database is configured to only allow Client Certificate connections, pgweb will fail to connect and we see the following error <code>pq: connection requires a valid client certificate</code>. Is there a way pgweb can support Client Certificate connections?</p>", ["<p>This seems to be a legit issue. Btw, how are you connecting to your server? Via host/port/etc or via database uri string?</p>", "<p>No feedback. Closing. </p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/144", "title": "long table name/object name breaking the format in sidebar", "status": "closed", "labels": [], "priority": null, "description": ["<p><img alt=\"image\" src=\"https://cloud.githubusercontent.com/assets/998606/13370982/2baae9b2-dd55-11e5-9087-44d594fb4ab0.png\" />\n<img alt=\"image\" src=\"https://cloud.githubusercontent.com/assets/998606/13370985/51ffd7d0-dd55-11e5-8ae0-f80056b2e460.png\" />\nseq name <code>namecheap_subscription_periods_id_seq</code> is so long that it becomes a newline rather than the same line with the circle</p>", ["<p>This issue has already been fixed in master and will be available in the next release.</p>", "<p>@sosedoff thanks</p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/143", "title": "Session id for export", "status": "closed", "labels": [], "priority": null, "description": ["<p>Addresses the issue with missing session id in multi-session mode</p>", []]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/142", "title": "Include session token for export endpoint", "status": "closed", "labels": ["bug"], "priority": null, "description": ["<p>In multi-session mode export to csv/json/xml does not work because pgweb does not include\nthe session token in the export url parameters.</p>", []]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/141", "title": "Table Information no vertical scroll bar", "status": "closed", "labels": [], "priority": null, "description": ["<p>Fix https://github.com/sosedoff/pgweb/issues/140</p>", ["<p>Thanks. Next time please make sure to run <code>make assets</code> before submitting pr so that update bindata.go is included. </p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/140", "title": "Table Information always shows vertical scroll bar", "status": "closed", "labels": [], "priority": null, "description": ["<p><img alt=\"screen shot 2016-02-25 at 10 04 53 am\" src=\"https://cloud.githubusercontent.com/assets/733544/13307579/4763511c-dba7-11e5-9085-35808a9bc79d.png\" /></p>\n<p>Vertical scroll bar is always shown even when the browser window is very large. </p>\n<p>Chrome Version 48.0.2564.116 (64-bit)\uff0c OS X 10.11.3</p>", []]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/139", "title": "Wip/query server timeout", "status": "closed", "labels": [], "priority": null, "description": ["<p>hi Dan!</p>\n<p>I made a small modify, to manage server timeout of query.\nIt's possible set a new parameter from command line (timeout) and all queries are blocked when exceed this execution time.</p>\n<p>what do you think?</p>\n<p>thanks</p>\n<p>ciao\np</p>", ["<p>Couple of things here:\n- There needs to be a an automated test for this feature to make sure it works on all supported postgres versions (9.x)\n- Whats the reason for js timeout change to 1 hour?\n- Probably a good idea to change new flag to <code>--query-timeout</code> (and the var in struct) so that its clear that timeout is related to sql stuff</p>", "<p>I agree,</p>\n<p>1) I'm checking and modifying automated test.\n2) well... I try to set js-timeout like server timeout, but I have a problem to parametrize app.js... I'm investigating (this is my first go-coding...).\n3) ok</p>\n<p>thanks</p>\n<p>p</p>", "<p>Hi Dan,</p>\n<p>I made recommended modifications.</p>\n<p>Thanks</p>\n<p>ciao\np</p>", "<p>Having an extra API endpoint just to fetch timeout setting is a bit overkill in my opinion. There arent any other options that could be exposed so i would really prefer to have a hardcoded \"max\" value for the timeout. 5 minutes sounds about right as pgweb was not designed to be running any queries that could take more time than that.</p>\n<p>Also, since i dont have any windows machines around to test pgweb stuff, im not sure i understand why <code>FORCE_WIN_TEST</code> is \"enabled\" (by setting it to \"0\") by default.</p>", "<p>FORCE_WIN_TEST: I do not understood because you bypass test of client_test.go on windows  environment. Well for security I do not change your check and I prefer add this  environment variable to bypass your check.</p>\n<p>And yes, I work on windows :)</p>\n<p>thanks<br />\nciao\np</p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/138", "title": "Click \"Edit Connection\" twice, scheme field cleared.", "status": "closed", "labels": [], "priority": null, "description": ["<p>How to reproduce:\n1. <code>./pgweb_darwin_amd64</code>\n2. Enter scheme and click connect\n3. Click \"Edit Connection\"\n4. Click Cancel\n5. Click \"Edit Connection\"</p>\n<p>Now the scheme field is blank. It should be filled with the current connected scheme.</p>", ["<p>Fixed in master. </p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/137", "title": "Sanitize SQL queries where possible", "status": "closed", "labels": ["bug"], "priority": null, "description": ["<p>Right now its pretty easy to make an SQL injection</p>", ["<p>I don't understand this \"bug\".  This tool lets you run any SQL you want.  There is no need to inject SQL into another SQL statement when you can run any SQL you want directly.</p>", "<p>I opened this ticket from a private conversion (as a reminder), but i think its no longer valid. In other words, pgweb should not be used in untrusted environments, or used with a read-only user. Closing this for now. </p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/136", "title": "How to disable tabs like history and activity without self building the code.", "status": "closed", "labels": [], "priority": null, "description": ["<p>I want to remove history and activity tabs from pgweb. Is there some way to do so without self building the code. Where does history and activity data gets stored?\n I am using executable for linux.</p>", ["<p>Query history is stored in memory while pgweb is running. Activity data is actually not something that is being stored and comes directly from postgresql server. Right now there's no way to disable both these features so your only option is to build from source.</p>", "<p>Thanks.</p>", "<p>FYI, if you want to rebuild pgweb without activity and history tabs, you can remove the following lines here (https://github.com/sosedoff/pgweb/blob/master/static/index.html#L27-L28) and then build pgweb:</p>\n<p><code>make build     # build for current OS\nmake release # build for all supported OS</code></p>", "<p>Changes in static/index.html are not reflecting after building. I can not figure out whats the problem?\ncommands I have used:\nmake setup\ngo get\nmake build</p>", "<p>Try running <code>make assets</code> first.</p>", "<p>I have tried that too. Even if I remove index.html from static folder it still works and no change is reflected.</p>", "<p>Hm, i just did the following:\n1. opened index.html file, removed both tabs (activity/history)\n2. ran <code>make build</code> (which runs asset build task as well)\n3. started pgweb from current dir <code>./pgweb</code></p>\n<p>and both tabs are gone from the interface. are you sure you're not starting your system-wide pgweb version instead of freshly built one?</p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/135", "title": "Add ability to launch pgweb with url prefix", "status": "closed", "labels": [], "priority": null, "description": ["<p>Run pgweb on a given url prefix with <code>--prefix</code> CLI option</p>", []]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/134", "title": "Show connection progressbar", "status": "closed", "labels": ["enhancement"], "priority": null, "description": ["<p>After clicking on \"connect\" button, render some spinner to  indicate that connection is being established. Otherwise its not clear why nothing is going on while in fact connection is being opened. This makes more sense for any SSH-base connection as those take significantly more time to complete.  </p>", []]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/133", "title": "Return number of affected rows if sql query is update or delete", "status": "closed", "labels": [], "priority": null, "description": ["<p>Should fix #129</p>", []]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/132", "title": "Base64 encoding got `+` causing `pq: syntax error`", "status": "closed", "labels": ["bug"], "priority": null, "description": ["<p>when downloading as csv or something equivalent, some base64 encoded sql contents also have <code>+</code> in their results causing <code>pq: syntax error</code></p>\n<p>e.g.: </p>\n<p><code>select \n    median(extract(epoch from (start_at - created_at))/60/60/24), 'free-&gt;paid-overall-median' from subscriptions where state='paid'\nunion select \n    median(extract(epoch from (start_at - created_at))/60/60/24), 'free-&gt;trial-overall-median' from subscriptions where state='trial'\nunion select \n    median(extract(epoch from (start_at - created_at))/60/60/24), 'free-&gt;paid-2013-median' from subscriptions where state='paid' and created_at &gt;= '20130101' and created_at &lt; '20140101'\nunion select \n    median(extract(epoch from (start_at - created_at))/60/60/24), 'free-&gt;trial-2013-median' from subscriptions where state='trial' and created_at &gt;= '20130101' and created_at &lt; '20140101'\nunion select \n    median(extract(epoch from (start_at - created_at))/60/60/24), 'free-&gt;paid-2014-median' from subscriptions where state='paid' and created_at &gt;= '20140101' and created_at &lt; '20150101'\nunion select \n    median(extract(epoch from (start_at - created_at))/60/60/24), 'free-&gt;trial-2014-median' from subscriptions where state='trial' and created_at &gt;= '20140101' and created_at &lt; '20150101'\nunion select \n    median(extract(epoch from (start_at - created_at))/60/60/24), 'free-&gt;paid-2015-median' from subscriptions where state='paid' and created_at &gt;= '20150101' and created_at &lt; '20160101'\nunion select \n    median(extract(epoch from (start_at - created_at))/60/60/24), 'free-&gt;trial-2015-median' from subscriptions where state='trial' and created_at &gt;= '20150101' and created_at &lt; '20160101'\nunion select \n    median(extract(epoch from (start_at - created_at))/60/60/24), 'free-&gt;paid-2016-median' from subscriptions where state='paid' and created_at &gt;= '20150101'\nunion select \n    median(extract(epoch from (start_at - created_at))/60/60/24), 'free-&gt;trial-2016-median' from subscriptions where state='trial' and created_at &gt;= '20150101'\nunion select \n    avg(extract(epoch from (start_at - created_at))/60/60/24), 'free-&gt;paid-overall-average' from subscriptions where state='paid'\nunion select \n    avg(extract(epoch from (start_at - created_at))/60/60/24), 'free-&gt;trial-overall-average' from subscriptions where state='trial'\nunion select \n    avg(extract(epoch from (start_at - created_at))/60/60/24), 'free-&gt;paid-2013-average' from subscriptions where state='paid' and created_at &gt;= '20130101' and created_at &lt; '20140101'\nunion select \n    avg(extract(epoch from (start_at - created_at))/60/60/24), 'free-&gt;trial-2013-average' from subscriptions where state='trial' and created_at &gt;= '20130101' and created_at &lt; '20140101'\nunion select \n    avg(extract(epoch from (start_at - created_at))/60/60/24), 'free-&gt;paid-2014-average' from subscriptions where state='paid' and created_at &gt;= '20140101' and created_at &lt; '20150101'\nunion select \n    avg(extract(epoch from (start_at - created_at))/60/60/24), 'free-&gt;trial-2014-average' from subscriptions where state='trial' and created_at &gt;= '20140101' and created_at &lt; '20150101'\nunion select \n    avg(extract(epoch from (start_at - created_at))/60/60/24), 'free-&gt;paid-2015-average' from subscriptions where state='paid' and created_at &gt;= '20150101' and created_at &lt; '20160101'\nunion select \n    avg(extract(epoch from (start_at - created_at))/60/60/24), 'free-&gt;trial-2015-average' from subscriptions where state='trial' and created_at &gt;= '20150101' and created_at &lt; '20160101'\nunion select \n    avg(extract(epoch from (start_at - created_at))/60/60/24), 'free-&gt;paid-2016-average' from subscriptions where state='paid' and created_at &gt;= '20150101'\nunion select \n    avg(extract(epoch from (start_at - created_at))/60/60/24), 'free-&gt;trial-2016-average' from subscriptions where state='trial' and created_at &gt;= '20150101'</code></p>\n<p>will be encoded to:</p>\n<p><code>c2VsZWN0IA0KICAgIG1lZGlhbihleHRyYWN0KGVwb2NoIGZyb20gKHN0YXJ0X2F0IC0gY3JlYXRlZF9hdCkpLzYwLzYwLzI0KSwgJ2ZyZWUtPnBhaWQtb3ZlcmFsbC1tZWRpYW4nIGZyb20gc3Vic2NyaXB0aW9ucyB3aGVyZSBzdGF0ZT0ncGFpZCcNCnVuaW9uIHNlbGVjdCANCiAgICBtZWRpYW4oZXh0cmFjdChlcG9jaCBmcm9tIChzdGFydF9hdCAtIGNyZWF0ZWRfYXQpKS82MC82MC8yNCksICdmcmVlLT50cmlhbC1vdmVyYWxsLW1lZGlhbicgZnJvbSBzdWJzY3JpcHRpb25zIHdoZXJlIHN0YXRlPSd0cmlhbCcNCnVuaW9uIHNlbGVjdCANCiAgICBtZWRpYW4oZXh0cmFjdChlcG9jaCBmcm9tIChzdGFydF9hdCAtIGNyZWF0ZWRfYXQpKS82MC82MC8yNCksICdmcmVlLT5wYWlkLTIwMTMtbWVkaWFuJyBmcm9tIHN1YnNjcmlwdGlvbnMgd2hlcmUgc3RhdGU9J3BhaWQnIGFuZCBjcmVhdGVkX2F0ID49ICcyMDEzMDEwMScgYW5kIGNyZWF0ZWRfYXQgPCAnMjAxNDAxMDEnDQp1bmlvbiBzZWxlY3QgDQogICAgbWVkaWFuKGV4dHJhY3QoZXBvY2ggZnJvbSAoc3RhcnRfYXQgLSBjcmVhdGVkX2F0KSkvNjAvNjAvMjQpLCAnZnJlZS0+dHJpYWwtMjAxMy1tZWRpYW4nIGZyb20gc3Vic2NyaXB0aW9ucyB3aGVyZSBzdGF0ZT0ndHJpYWwnIGFuZCBjcmVhdGVkX2F0ID49ICcyMDEzMDEwMScgYW5kIGNyZWF0ZWRfYXQgPCAnMjAxNDAxMDEnDQp1bmlvbiBzZWxlY3QgDQogICAgbWVkaWFuKGV4dHJhY3QoZXBvY2ggZnJvbSAoc3RhcnRfYXQgLSBjcmVhdGVkX2F0KSkvNjAvNjAvMjQpLCAnZnJlZS0+cGFpZC0yMDE0LW1lZGlhbicgZnJvbSBzdWJzY3JpcHRpb25zIHdoZXJlIHN0YXRlPSdwYWlkJyBhbmQgY3JlYXRlZF9hdCA+PSAnMjAxNDAxMDEnIGFuZCBjcmVhdGVkX2F0IDwgJzIwMTUwMTAxJw0KdW5pb24gc2VsZWN0IA0KICAgIG1lZGlhbihleHRyYWN0KGVwb2NoIGZyb20gKHN0YXJ0X2F0IC0gY3JlYXRlZF9hdCkpLzYwLzYwLzI0KSwgJ2ZyZWUtPnRyaWFsLTIwMTQtbWVkaWFuJyBmcm9tIHN1YnNjcmlwdGlvbnMgd2hlcmUgc3RhdGU9J3RyaWFsJyBhbmQgY3JlYXRlZF9hdCA+PSAnMjAxNDAxMDEnIGFuZCBjcmVhdGVkX2F0IDwgJzIwMTUwMTAxJw0KdW5pb24gc2VsZWN0IA0KICAgIG1lZGlhbihleHRyYWN0KGVwb2NoIGZyb20gKHN0YXJ0X2F0IC0gY3JlYXRlZF9hdCkpLzYwLzYwLzI0KSwgJ2ZyZWUtPnBhaWQtMjAxNS1tZWRpYW4nIGZyb20gc3Vic2NyaXB0aW9ucyB3aGVyZSBzdGF0ZT0ncGFpZCcgYW5kIGNyZWF0ZWRfYXQgPj0gJzIwMTUwMTAxJyBhbmQgY3JlYXRlZF9hdCA8ICcyMDE2MDEwMScNCnVuaW9uIHNlbGVjdCANCiAgICBtZWRpYW4oZXh0cmFjdChlcG9jaCBmcm9tIChzdGFydF9hdCAtIGNyZWF0ZWRfYXQpKS82MC82MC8yNCksICdmcmVlLT50cmlhbC0yMDE1LW1lZGlhbicgZnJvbSBzdWJzY3JpcHRpb25zIHdoZXJlIHN0YXRlPSd0cmlhbCcgYW5kIGNyZWF0ZWRfYXQgPj0gJzIwMTUwMTAxJyBhbmQgY3JlYXRlZF9hdCA8ICcyMDE2MDEwMScNCnVuaW9uIHNlbGVjdCANCiAgICBtZWRpYW4oZXh0cmFjdChlcG9jaCBmcm9tIChzdGFydF9hdCAtIGNyZWF0ZWRfYXQpKS82MC82MC8yNCksICdmcmVlLT5wYWlkLTIwMTYtbWVkaWFuJyBmcm9tIHN1YnNjcmlwdGlvbnMgd2hlcmUgc3RhdGU9J3BhaWQnIGFuZCBjcmVhdGVkX2F0ID49ICcyMDE1MDEwMScNCnVuaW9uIHNlbGVjdCANCiAgICBtZWRpYW4oZXh0cmFjdChlcG9jaCBmcm9tIChzdGFydF9hdCAtIGNyZWF0ZWRfYXQpKS82MC82MC8yNCksICdmcmVlLT50cmlhbC0yMDE2LW1lZGlhbicgZnJvbSBzdWJzY3JpcHRpb25zIHdoZXJlIHN0YXRlPSd0cmlhbCcgYW5kIGNyZWF0ZWRfYXQgPj0gJzIwMTUwMTAxJw0KdW5pb24gc2VsZWN0IA0KICAgIGF2ZyhleHRyYWN0KGVwb2NoIGZyb20gKHN0YXJ0X2F0IC0gY3JlYXRlZF9hdCkpLzYwLzYwLzI0KSwgJ2ZyZWUtPnBhaWQtb3ZlcmFsbC1hdmVyYWdlJyBmcm9tIHN1YnNjcmlwdGlvbnMgd2hlcmUgc3RhdGU9J3BhaWQnDQp1bmlvbiBzZWxlY3QgDQogICAgYXZnKGV4dHJhY3QoZXBvY2ggZnJvbSAoc3RhcnRfYXQgLSBjcmVhdGVkX2F0KSkvNjAvNjAvMjQpLCAnZnJlZS0+dHJpYWwtb3ZlcmFsbC1hdmVyYWdlJyBmcm9tIHN1YnNjcmlwdGlvbnMgd2hlcmUgc3RhdGU9J3RyaWFsJw0KdW5pb24gc2VsZWN0IA0KICAgIGF2ZyhleHRyYWN0KGVwb2NoIGZyb20gKHN0YXJ0X2F0IC0gY3JlYXRlZF9hdCkpLzYwLzYwLzI0KSwgJ2ZyZWUtPnBhaWQtMjAxMy1hdmVyYWdlJyBmcm9tIHN1YnNjcmlwdGlvbnMgd2hlcmUgc3RhdGU9J3BhaWQnIGFuZCBjcmVhdGVkX2F0ID49ICcyMDEzMDEwMScgYW5kIGNyZWF0ZWRfYXQgPCAnMjAxNDAxMDEnDQp1bmlvbiBzZWxlY3QgDQogICAgYXZnKGV4dHJhY3QoZXBvY2ggZnJvbSAoc3RhcnRfYXQgLSBjcmVhdGVkX2F0KSkvNjAvNjAvMjQpLCAnZnJlZS0+dHJpYWwtMjAxMy1hdmVyYWdlJyBmcm9tIHN1YnNjcmlwdGlvbnMgd2hlcmUgc3RhdGU9J3RyaWFsJyBhbmQgY3JlYXRlZF9hdCA+PSAnMjAxMzAxMDEnIGFuZCBjcmVhdGVkX2F0IDwgJzIwMTQwMTAxJw0KdW5pb24gc2VsZWN0IA0KICAgIGF2ZyhleHRyYWN0KGVwb2NoIGZyb20gKHN0YXJ0X2F0IC0gY3JlYXRlZF9hdCkpLzYwLzYwLzI0KSwgJ2ZyZWUtPnBhaWQtMjAxNC1hdmVyYWdlJyBmcm9tIHN1YnNjcmlwdGlvbnMgd2hlcmUgc3RhdGU9J3BhaWQnIGFuZCBjcmVhdGVkX2F0ID49ICcyMDE0MDEwMScgYW5kIGNyZWF0ZWRfYXQgPCAnMjAxNTAxMDEnDQp1bmlvbiBzZWxlY3QgDQogICAgYXZnKGV4dHJhY3QoZXBvY2ggZnJvbSAoc3RhcnRfYXQgLSBjcmVhdGVkX2F0KSkvNjAvNjAvMjQpLCAnZnJlZS0+dHJpYWwtMjAxNC1hdmVyYWdlJyBmcm9tIHN1YnNjcmlwdGlvbnMgd2hlcmUgc3RhdGU9J3RyaWFsJyBhbmQgY3JlYXRlZF9hdCA+PSAnMjAxNDAxMDEnIGFuZCBjcmVhdGVkX2F0IDwgJzIwMTUwMTAxJw0KdW5pb24gc2VsZWN0IA0KICAgIGF2ZyhleHRyYWN0KGVwb2NoIGZyb20gKHN0YXJ0X2F0IC0gY3JlYXRlZF9hdCkpLzYwLzYwLzI0KSwgJ2ZyZWUtPnBhaWQtMjAxNS1hdmVyYWdlJyBmcm9tIHN1YnNjcmlwdGlvbnMgd2hlcmUgc3RhdGU9J3BhaWQnIGFuZCBjcmVhdGVkX2F0ID49ICcyMDE1MDEwMScgYW5kIGNyZWF0ZWRfYXQgPCAnMjAxNjAxMDEnDQp1bmlvbiBzZWxlY3QgDQogICAgYXZnKGV4dHJhY3QoZXBvY2ggZnJvbSAoc3RhcnRfYXQgLSBjcmVhdGVkX2F0KSkvNjAvNjAvMjQpLCAnZnJlZS0+dHJpYWwtMjAxNS1hdmVyYWdlJyBmcm9tIHN1YnNjcmlwdGlvbnMgd2hlcmUgc3RhdGU9J3RyaWFsJyBhbmQgY3JlYXRlZF9hdCA+PSAnMjAxNTAxMDEnIGFuZCBjcmVhdGVkX2F0IDwgJzIwMTYwMTAxJw0KdW5pb24gc2VsZWN0IA0KICAgIGF2ZyhleHRyYWN0KGVwb2NoIGZyb20gKHN0YXJ0X2F0IC0gY3JlYXRlZF9hdCkpLzYwLzYwLzI0KSwgJ2ZyZWUtPnBhaWQtMjAxNi1hdmVyYWdlJyBmcm9tIHN1YnNjcmlwdGlvbnMgd2hlcmUgc3RhdGU9J3BhaWQnIGFuZCBjcmVhdGVkX2F0ID49ICcyMDE1MDEwMScNCnVuaW9uIHNlbGVjdCANCiAgICBhdmcoZXh0cmFjdChlcG9jaCBmcm9tIChzdGFydF9hdCAtIGNyZWF0ZWRfYXQpKS82MC82MC8yNCksICdmcmVlLT50cmlhbC0yMDE2LWF2ZXJhZ2UnIGZyb20gc3Vic2NyaXB0aW9ucyB3aGVyZSBzdGF0ZT0ndHJpYWwnIGFuZCBjcmVhdGVkX2F0ID49ICcyMDE1MDEwMSc=</code></p>", ["<p>similar to #95 </p>", "<p>Thanks for the report. Will fix.</p>", "<p>Fix is pushed to master, please give it a try.</p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/131", "title": "relative paths for static assets", "status": "closed", "labels": [], "priority": null, "description": ["<p>I would like to expose this tool as a page on an admin site as <code>admin.site.com/db</code>.  However, this is very hard since the client side code uses absolute paths to assets.</p>\n<p>My approach would be something like this:</p>\n<p><code>// pseudocode\nif (path matches /^\\/db\\/(.*)$/ ) {\n  authenticate request\n  proxy request to pgweb/$1\n} else {\n  run regular site\n}</code></p>\n<p>But this is currently impossible, because <code>index.html</code> references all of its required assets in an absolute sense.  I believe that all that would be required would be make all client side code &amp; assets reference <em>root</em> as <code>./</code> instead of <code>/</code>.</p>\n<p>The serverside (API) code should work just fine without change, since the proxy will strip the <code>/db</code> from the beginning of each request.</p>\n<p>If this a patch that you'd accept if I were to write it?</p>", ["<p>Sure, if you have a patch that does not introduce any breaking changes i'd gladly accept it.</p>", "<p>On the other hand i would probably prefer a solution that changes the path prefix for the whole application. That would work better IMO. Thoughts?</p>", "<p>In short: I don't think it adds any additional value.  To elaborate...</p>\n<p>I think the value of relative paths is being able to run pgweb alongside another web app (so pgweb doesn't need an entire subdomain).  However, to do that, you're going to need an HTTP reverse proxy in front of it anyway (since how else would you share the same tcp port)?</p>\n<p>I could see 3 possible scenarios here to run Pgweb next to another web app.</p>\n<p>```\n1.\nINTERNET ----&gt; NGINX ---  /db/* ---- &gt; PGWEB\n                 --- * ---&gt; OTHER WEB APP</p>\n<p>2.\nINTERNET ----&gt; OTHER WEB APP ---  /db/* ---- &gt; PGWEB\n                     ---- * ---&gt; OTHER WEB APP</p>\n<p>3.\nINTERNET ----&gt; PGWEB ---  /db/* ---- &gt; PGWEB\n                   ---- * ---&gt; OTHER WEB APP</p>\n<p>```</p>\n<p>For solutions 1 and 2, I think there is absolutely no value in adding a prefix in Go, since every single reverse proxy basically provides this out of the box.  (This is <em>so</em> common, in fact, I think it might be a lot of extra work to leave the prefix on).</p>\n<p>For solution 3, I suppose it would be useful - but I don't know if I would recommend proxying all your web traffic through pgweb :)</p>", "<p>I don't necessarily agree that having a url prefix does not provide any value. Having a url prefix baked into the app's makes it super easy to use with software like nginx.</p>\n<p>I pushed a new git branch <code>url-prefix</code> that implements url prefix for pgweb, you can compile the source code from that branch and then start pgweb with <code>--prefix=db/</code>. </p>\n<p>For nginx, then you can configure pgweb as follows:</p>\n<p>```\nupstream pgweb {\n  server 127.0.0.1:8081;\n}</p>\n<p>server {\n  # other stuff\n  # ...</p>\n<p># proxy any database stuff directly to pgweb\n  location /db {\n    proxy_pass http://pgweb;\n  } \n}\n```</p>\n<p>If that works for you - great, otherwise please provide your own solution and will gladly review and accept the patch for the feature in question. Cheers.</p>", "<p>Ah, cool. I think you can also put:</p>\n<p>location /db/ { proxy_pass http://pgweb; }\u00a0</p>\n<p>(Note the trailing slash on /db/) and it will strip \"db\" off the proxied request. One extra character for no additional code in golang.</p>\n<p>\u2014\nSent from Mailbox</p>\n<p>On Fri, Feb 19, 2016 at 7:30 PM, Dan Sosedoff notifications@github.com\nwrote:</p>\n<blockquote>\n<p>I don't necessarily agree that having a url prefix does not provide any value. Having a url prefix baked into the app's makes it super easy to use with software like nginx.\nI pushed a new git branch <code>url-prefix</code> that implements url prefix for pgweb, you can compile the source code from that branch and then start pgweb with <code>--prefix=db/</code>. \nFor nginx, then you can configure pgweb as follows:</p>\n<p><code>upstream pgweb {\n  server 127.0.0.1:8081;\n}\nserver {\n  # other stuff\n  # ...\n  # proxy any database stuff directly to pgweb\n  location /db {\n    proxy_pass http://pgweb;\n  } \n}</code></p>\n<h2>If that works for you - great, otherwise please provide your own solution and will gladly review and accept the patch for the feature in question. Cheers.</h2>\n<p>Reply to this email directly or view it on GitHub:\nhttps://github.com/sosedoff/pgweb/issues/131#issuecomment-186497480</p>\n</blockquote>", "<p>But either way works for me, thanks so much for doing this!!</p>\n<p>\u2014\nSent from Mailbox</p>\n<p>On Fri, Feb 19, 2016 at 7:30 PM, Dan Sosedoff notifications@github.com\nwrote:</p>\n<blockquote>\n<p>I don't necessarily agree that having a url prefix does not provide any value. Having a url prefix baked into the app's makes it super easy to use with software like nginx.\nI pushed a new git branch <code>url-prefix</code> that implements url prefix for pgweb, you can compile the source code from that branch and then start pgweb with <code>--prefix=db/</code>. \nFor nginx, then you can configure pgweb as follows:</p>\n<p><code>upstream pgweb {\n  server 127.0.0.1:8081;\n}\nserver {\n  # other stuff\n  # ...\n  # proxy any database stuff directly to pgweb\n  location /db {\n    proxy_pass http://pgweb;\n  } \n}</code></p>\n<h2>If that works for you - great, otherwise please provide your own solution and will gladly review and accept the patch for the feature in question. Cheers.</h2>\n<p>Reply to this email directly or view it on GitHub:\nhttps://github.com/sosedoff/pgweb/issues/131#issuecomment-186497480</p>\n</blockquote>", "<p>Implemented on master. Feel free to reopen if you find any issues</p>", "<p>Currently, the solution proposed by @skabbes works for me, but the solution using <code>--prefix=...</code> does not (I receive a 404 error from the Go application - not from nginx).</p>\n<p>This is problematic:</p>\n<p><code>pgweb_linux_amd64 --listen=9090  --prefix=pgweb/</code></p>\n<p>nginx config:\n<code>location /pgweb {\n    proxy_pass http://127.0.0.1:9090/;\n}</code></p>\n<p>Anyway, running without the <code>prefix</code> argument, but with the trailing slash in the <code>location</code> section seems fine:\n<code>location /pgweb/ {\n    proxy_pass http://127.0.0.1:9090/;\n}</code></p>", "<p>@andreibancioiu when i start pgweb with <code>--prefix=pgweb/</code> i can access the url with that prefix just fine. did you verify that by accessing <code>http://localhost:9090/pgweb</code>? if it does not work you will get 404 page. </p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/130", "title": "Support for .pgpass config file", "status": "open", "labels": ["enhancement"], "priority": null, "description": ["<p>The <code>psql</code> CLI supports reading from the <code>~/.pgpass</code> configuration file with a standard format, so that you don't need to put passwords into the command-line history or enter them in every time.</p>\n<p>Could pgweb read this file and replace an empty password with one found in there for a matching host?</p>", ["<p>Yes, this feature could be supported, but only in a single session mode.</p>", "<p>Closing due to no activity. I've personally never used pgpass files and nobody else expressed interest in the feature so far. </p>", "<p>I just found (and liked) your UI, and support for ~/.pgpass is the first thing I went to check.</p>\n<p>I would strongly prefer to use ~/.pgpass, precisely for the reason original posted requested: don't want passwords in history and in command line. psql client requires that ~/.pgpass be readable only by the file owner, whereas no such check exists for the shell's history file.</p>\n<p>I would offer to implement this, but alas I haven't written (and until today - not even read) a single line of go code.</p>", "<p>Btw, while i havent added the support for pgpass file, you can get away with using bookmarks. By using bookmarks you're not exposing any passwords in the web or cli.</p>", "<p>Since I posted my original comment, I have indeed found bookmarks, which do provide this functionality. (.pgpass would have the benefit of working w/o me adding a password to yet another file).</p>\n<p>Thank you for your response and for reconsidering this ticket.</p>", "<p>I think <code>.pgpass</code> would provide a way for pgweb to use connections without adding the credentials to the urls.</p>\n<p>My issue so far is that I would like to use bookmarks feature and expose some databases to users, however there is no way to hide the credentials for the db. pgpass would provide a solution. </p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/129", "title": "See records affected by update/insert/delete", "status": "closed", "labels": [], "priority": null, "description": ["<p>When running</p>\n<p><code>update mytable set color = 'blue'</code></p>\n<p>would be nice to show 'UPDATE 5' instead of 'No records found'.</p>", ["<p>As far as i know there's no alternative to MySQL's <code>mysql_affected_rows</code> function in PostgreSQL.\nhttp://dev.mysql.com/doc/refman/5.7/en/mysql-affected-rows.html</p>", "<p>psql does it somehow:</p>\n<p>```\n$ psql mydb\npsql (9.3.9)\nType \"help\" for help.</p>\n<p>mydb=# update mytable set color = 'blue'\nUPDATE 3\n```</p>\n<p>but not sure how it does it.</p>", "<p>i can see that it somehow does it too, but there are no extra sql queries in the server log, so it must be something internal. I'll have a look later today.</p>", "<p>https://golang.org/pkg/database/sql/#Result</p>", "<p>Try master, it should now display number of affected rows if sql statement starts with <code>UPDATE</code> or <code>DELETE</code>.</p>", "<p>:+1: Looks good!</p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/128", "title": "Add option to drop all tables in the schema", "status": "closed", "labels": ["enhancement"], "priority": null, "description": ["<p>During development sometimes its necessary to delete all tables. The easiest way of achieving that is by dropping the public (or any other) schema and then recreating it. However, database user might not be the owner of that schema so it wont work.</p>", ["<p>Closing due to no need. Dropping all tables in schema is a very specific behavior which i personally had very little use for. Better to drop the schema/db instead.</p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/127", "title": "Close Connection", "status": "closed", "labels": ["enhancement"], "priority": null, "description": ["<p>I might be blind, but how do i close a connection from the frontend?</p>", ["<p>You're not blind, there's no button to close connection. If you're using single connection mode you can just stop/kill the app.</p>", "<p>I am using the session mode.\nSo in that case, this is a feature request for a \"Close Connection\" button :).</p>", "<p>Cool, i'll look into it and perhaps add the feature to the next release</p>", "<p>I can help out if you want.</p>", "<p>Fix has been pushed to master. Please verify if it works for you.</p>", "<p>Closing the connection works as expected. However there seems to be a glitch with the interface:\n1. Log in\n2. Click on Connect\n3. Click on Cancel\n4. Click on Disconnect</p>\n<p>Now the connection is closed, but i have the ability to Cancel again. Which brings me back to the interface with all the loaded data still being presented. However new queries are errored out with \"ERROR: sql: database is closed\".</p>", "<p>Try now</p>", "<p>Looking good!</p>", "<p>Cool. Closing for now then. </p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/126", "title": "Camel case column names are broken in search", "status": "closed", "labels": ["bug"], "priority": null, "description": ["<p>I have a database where columns are named with a camel case convention. It seems that the search does not respect that.</p>\n<p>Here the column name is <code>lastName</code> but the search error lists it as <code>lastname</code>.</p>\n<p><img alt=\"pgwebcamelcase\" src=\"https://cloud.githubusercontent.com/assets/225712/12704301/96bf21c8-c860-11e5-8b83-dc95de5a2a29.png\" /></p>\n<p>I know should find something with that query.</p>\n<p>Using version v0.9.1 d3d408bc684f3e2c36f86bea2f1e760d68215183 and <code>9.4.5-2.pgdg12.4+1</code> Postgresql on Ubuntu Trusty.</p>", ["<p>Try running pgweb from master, it should have a fix in place.</p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/125", "title": "Quick database switch", "status": "closed", "labels": ["enhancement"], "priority": null, "description": ["<p>Add ability to switch between available databases via some sort of dropdown. This is super useful when doing local dev and having to switch between different browser tabs or even pgweb sessions. This should not be very tricky to implement since database connection object saves the full connection url, so maybe there's need to expose another endpoint like <code>/api/switchdb</code> to handle this. One of the reasons for to have a new endpoint is when api cant return the full connection string for security reasons while running in multi-session mode. New feature needs to have support for bow regular and ssh connections. </p>", ["<p>agreed. i have to constantly go back to the login screen and change the database name to switch</p>", "<p>i can look into adding this feature</p>", "<p>Implemented in master. UI is not superb, but it does the job. UI will be improved in the next releases. </p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/124", "title": "Show table triggers", "status": "closed", "labels": ["enhancement", "help wanted"], "priority": null, "description": ["<p>I don't think this currently exists but if it does please feel free to smack me and close.</p>\n<p>I'd like to be able to see what triggers are attached to a particular table. I think the best place for this information is the structure tab.</p>", ["<p>Right now structure tab is very simple and does not have ability to display data from multiple \"sources\", i.e it just displays a single table as any other view. There's a need to rebuild structure view to include more data but i don't think its a priority for me right now, at least not until i get to refactor the way different table views are displayed. I'll keep this issue open for now. If you wish to help out - please do and open a PR and i will happily review your contributions. Thanks.</p>", "<p>Closing due to no action (im personally not interested on working on this feature)</p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/123", "title": "Persistent Query Panel", "status": "closed", "labels": [], "priority": null, "description": ["<p>It'd be great if the SQL panel could remember the code across refreshes and maybe even if the server is restarted.</p>\n<p>You could simply store the code in <code>localStorage</code> every time it's executed.\nYou might want to clear the storage if the user/DB changes or store it with a prefix for each.</p>", ["<p>Oops, it does. I was sure it didn't restore it. Maybe because I didn't execute the query.</p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/122", "title": "Keyboard Shortcuts", "status": "closed", "labels": [], "priority": null, "description": ["<p>Hi, you should document the supported shortcuts and maybe add some more.</p>\n<p>By experimenting I discovered <code>ctrl+enter</code> for submitting queries. This info is key for the wiki.\nIs there a similar shortcut for explaining?</p>\n<p>You could also support the ones pgAdmin does, <code>F5</code> for querying and <code>F7</code> for explaining.</p>\n<p>There are probably more undocumented and useful+missing shortcuts</p>", ["<p>Added wiki page regarding keyboard shortcuts (there only few available): https://github.com/sosedoff/pgweb/wiki/Keyboard-Shortcuts</p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/121", "title": "Have bookmarkable/persistent  URLs", "status": "closed", "labels": ["enhancement", "help wanted"], "priority": null, "description": ["<p>This is not a critical one, but it'd be nice if (for example) clicking the Activity tab would also change the path to something like \"/activity\".</p>\n<p>It's a common feature of single-page web apps like this.</p>", ["<p>Hi and thanks for the feedback. I agree that having more friendly links is better and helps\na lot when sharing pages, but unfortunately its not a priority for pgweb (or myself) at the moment.\nI see that this feature could be easily implemented with any sort of routing/lightweight js framework, perhaps even with vanilla jquery. Will keep this open for now, feel free to contribute if you have any\ninterest in making this feature happen. </p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/120", "title": "Long table names wrapping", "status": "closed", "labels": ["bug"], "priority": null, "description": ["<p><img alt=\"image\" src=\"https://cloud.githubusercontent.com/assets/9039521/12464092/94245d0a-bf84-11e5-9d8c-30639f03ebd4.png\" /></p>", ["<p>Hi, this issue is a basic regression and will be fixed in the next minor release. Thanks for the feedback.</p>", "<p>Fixed</p>", "<p>I am having the same issue in the current release with long table names. Looks exactly like the screenshot from the OP.</p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/119", "title": "Stuck saying \"Please wait, query executing...\"", "status": "closed", "labels": [], "priority": null, "description": ["<p>When running some ad-hoc queries, pgweb shows 'Please wait, query executing\". No results grid shown. Browser still responding. Javascript console showing:</p>\n<p><code>Uncaught TypeError: Cannot read property 'forEach' of null\nbuildTable @ app.js:242\n(anonymous function) @ app.js:485\n$.ajax.success @ app.js:71\nj @ jquery.js:2\nk.fireWith @ jquery.js:2\nx @ jquery.js:4\n(anonymous function) @ jquery.js:4</code></p>\n<p>Behaviour is repeatable. Not sure what is common about the queries it fails on. Usually they are more complex.</p>", ["<p>Simplifying the select list seems to help (e.g. changing from <code>t.*</code> to <code>count(*)</code>)</p>", "<p>I think i just fixed this bug in master, please give it a try. </p>", "<p>I think that fixed it. Will reopen if I see it again. Thanks!</p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/118", "title": "Add ability to resize custom sql query window", "status": "open", "labels": ["enhancement", "hacktoberfest"], "priority": null, "description": ["<p>Right now it cant be resized and makes it harder to write bigger queries.</p>", ["<p>Speaking of resizes, other components should be able to be resized, not just the query window. Planning on working on it in the next releases (will open another issue). </p>", "<p>any timeline on this? as it stands it's basically the only gripe i have with an otherwise awesome tool.</p>", "<p>Will work on it this week probably</p>", "<p>any updates?</p>", "<p>Unfortunately no, i've been very busy with work and have no time for any updates. </p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/117", "title": "Explicitly set timeout to a very high value in javascript code", "status": "closed", "labels": [], "priority": null, "description": ["<p>I find that different browsers might have different timeout values. If you don't set timeout in javascript code,  the browser will set one.</p>\n<p>Ref:</p>\n<blockquote>\n<p>http://stackoverflow.com/questions/4148830/what-is-jquerys-ajax-default-timeout-value\nhttp://stackoverflow.com/questions/7297833/how-long-will-the-browser-wait-after-an-ajax-request</p>\n</blockquote>\n<p>I request this to solve an issue I meet. I use the WebView control of Cocoa, it is like an embedded version of Safari. But unfortunately it has a very small default timeout value. And whenever I run a long running sql query, the request timeouts and the UI freezes for ever.</p>\n<p>Let me know if you think what I said above makes sense. </p>\n<p>Thank you very much!</p>\n<p>Tyler</p>", ["<p>Or can we show a popup message to tell the user that it has been timeout. It's better than to let the user wait for ever.</p>", "<p>I set timeout to 2 minutes, that should be enough for most queries. Use master branch to verify the fix</p>", "<p>@sosedoff Could we make it 5 minutes? There is no disadvantages to set a higher value.</p>\n<p>And by the way, if it does timeout, could we show a popup to notice the user?</p>\n<p>Thank you for your hard work!  :+1: </p>", "<p>Done</p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/116", "title": "Database for live demo", "status": "closed", "labels": [], "priority": null, "description": ["<p>This looks like a very nice project! </p>\n<p>I tried to use the live demo, but didn't see any login information to be used. </p>\n<p>Did I miss it?\nDo I have to supply my own Internet-exposed postgres server in order to use the live demo?</p>", ["<p>Yeah, you will have to provide a sample database in order to connect using demo instance. The reason why there's no database is because demo is hosted on heroku and they dont provide ability to create read-only users, at least not on free plan. </p>", "<p>Thanks for the clarification.</p>\n<p>Again, awesome project.</p>", "<p>Do you save connection data somewhere? :)</p>", "<p>What do you mean? The demo site does not save any data that passes through it, you can check the source code.</p>", "<p>I came here with the same question...it feels like it either wants a \"actual demo\" (since I can't connect to local DB's from the demo) or else some kind of...youtube demo or screenshot demo, to see how it looks...thanks!  (or at least instructions on the demo page \"create your own publicly facing pg database\" but that is hard for passersby...)</p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/115", "title": "Materialized views support", "status": "closed", "labels": [], "priority": null, "description": ["<p>Wow, looks like we started this at almost same time :)\nhttps://github.com/sosedoff/pgweb/commit/3af20f932731c78eccd4382d5f05879d75b8341b</p>\n<p>If you'll find something useful here - I'm glad to share.</p>", ["<p>P.S. Are you using old postgres? Materialized views are removed from <code>information_schema</code> since 9.3\nhttp://stackoverflow.com/a/19129980</p>", "<p>Here's the postgres version im using locally:</p>\n<p><code>PostgreSQL 9.4.4 on x86_64-apple-darwin14.3.0, compiled by Apple LLVM version 6.1.0 (clang-602.0.53) (based on LLVM 3.6.0svn), 64-bit</code></p>", "<p>I am using <code>9.4.5</code> on OSX - it just means that materialized views structure should be fetched by different query than the one for tables</p>", "<p>Are you sure about that? If you run <code>\\dm</code> using <code>psql</code> tool, it'll produce the following sql:</p>\n<p><code>sql\nSELECT n.nspname as \"Schema\",\n  c.relname as \"Name\",\n  CASE c.relkind WHEN 'r' THEN 'table' WHEN 'v' THEN 'view' WHEN 'm' THEN 'materialized view' WHEN 'i' THEN 'index' WHEN 'S' THEN 'sequence' WHEN 's' THEN 'special' WHEN 'f' THEN 'foreign table' END as \"Type\",\n  pg_catalog.pg_get_userbyid(c.relowner) as \"Owner\"\nFROM pg_catalog.pg_class c\n     LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace\nWHERE c.relkind IN ('m','')\n      AND n.nspname &lt;&gt; 'pg_catalog'\n      AND n.nspname &lt;&gt; 'information_schema'\n      AND n.nspname !~ '^pg_toast'\n  AND pg_catalog.pg_table_is_visible(c.oid)\nORDER BY 1,2;</code></p>\n<p>Thats pretty much what is being used in pgweb and is verified on postgresql 9.3+</p>", "<p>Pushed to master</p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/114", "title": "SSH Tunnels", "status": "closed", "labels": [], "priority": null, "description": ["<p>Automatically start ssh tunnel and forward connection to postgresql server. Until now it was not possible\nto use pgweb directly with servers behind firewalls.</p>\n<p>New SSH tunnel feature allows to connect to servers using local ssh key (in ~/.ssh/id_rsa) or via plain password. Browsing data will most likely be slower than when using normal postgresql connection, but not slower than when using pgweb in tandem with standalone ssh tool.</p>", []]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/113", "title": "What about schemas ?", "status": "closed", "labels": [], "priority": null, "description": ["<p>Hi,</p>\n<p>I tested your web interface and I can't navigate through schemas. :-)\nIs it normal ?</p>\n<p>Is this supported ?</p>\n<p>Regards</p>\n<p>Guillaume S</p>", ["<p>Can you be more specific? Also, are you using latest master or latest binary release?</p>\n<p>On Wed, Jan 13, 2016 at 8:34 AM, gstoffer notifications@github.com\nwrote:</p>\n<blockquote>\n<p>Hi,\nI tested your web interface and I can't navigate through schemas :-)\nIs it normal ?\nIs this supported ?\nRegards</p>\n<h2>Guillaume S</h2>\n<p>Reply to this email directly or view it on GitHub:\nhttps://github.com/sosedoff/pgweb/issues/113</p>\n</blockquote>", "<p>Closing due to no response. </p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/112", "title": "Multiple schemas", "status": "closed", "labels": [], "priority": null, "description": ["<p>Adds support for browsing multiple schemas in the database</p>", ["<p>Thanks for this feature @sosedoff!</p>\n<p>When do you think you'll get time to publish this to the docker hub?</p>", "<p>0.9.0 is now available in docker hub</p>", "<p>:fireworks: thanks @sosedoff!</p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/111", "title": "Database sessions", "status": "closed", "labels": [], "priority": null, "description": ["<p>Implements database sessions which will allow using pgweb for multiple database connections.\nBy default the feature is turned off, but could be easily enabled with <code>--sessions</code> CLI flag or when\n<code>SESSIONS</code> environment variable is present.</p>\n<p>Database sessions are unique per browser. Session ID is generate on the frontend and is stored in\nlocalStorage. It should not be an issue for majority of modern browsers.</p>", []]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/110", "title": "Filter and pagination", "status": "closed", "labels": [], "priority": null, "description": ["<p>First pass at pagination and simple filtering</p>", []]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/109", "title": "Convert bigints that exceed js number limits to strings", "status": "closed", "labels": [], "priority": null, "description": ["<p>Should fix #108 </p>", ["<p>Thanks so much!  Any chance you'll release a 0.7.1 soon?</p>", "<p>I'll release 0.7.1 in a day or so, working on a few other things that should go in too.</p>", "<p>All that said, I'm not going to complain about free software :)</p>\n<p>Thanks for you're awesome contribution to the OSS community.</p>", "<p>FYI 0.8.0 is published to homebrew cask.</p>", "<p>Awesome! Muchas gracias, could you push to dockerhub too when you have a chance?</p>", "<p>Done</p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/108", "title": "bigint columns truncated to Javascript limits (52 - 53 bits)", "status": "closed", "labels": [], "priority": null, "description": ["<p>If you have columns that are bigint, they are truncated when displaying.  This will only happen if the values are larger the js limit.</p>\n<p><code>sql\n-- where amby_id is of type bigint\nselect amby_id, amby_id::text from amby;</code></p>\n<p><img width=\"344\" alt=\"screenshot 2016-01-06 11 08 44\" src=\"https://cloud.githubusercontent.com/assets/592178/12151910/649638ac-b466-11e5-8ade-549aa00e1a56.png\"></p>", ["<p>Perhaps this could be solved by casting all rows' values to strings in JSON response. Its not the best solution (and def not the correct one), but otherwise it'll require some bignum js library to be brought in. Any other ideas ?</p>", "<p>I haven't really dug into the code much, so bear with my naming...</p>\n<p>From a quick glance, it seems like you have the column names only, but I believe postgres allow you to extract the type information as well as the column names.  So perhaps we could add another field to <a href=\"https://github.com/sosedoff/pgweb/blob/master/pkg/client/result.go#L12-L15\">Result</a> enumerating the types as well.</p>\n<p>Then when you marshal the data to json, you could take the types into account and bigint should be send down as strings.</p>\n<p>Another possible solution would be to parse the response form the API with something like <a href=\"https://github.com/sidorares/json-bigint\">json-bigint</a>.</p>", "<p>Yeah, i did experiment with automatic encoding of bigint's as strings and it works fine, will probably fix the issue sometime this week. </p>", "<p>Sounds great - thanks so much.  This is an awesome product I use daily.</p>", "<p>@skabbes try latest master, the issue should be fixed now.</p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/107", "title": "Export to JSON / XML", "status": "closed", "labels": [], "priority": null, "description": ["<p>Adds ability to export table data and query results to JSON and XML.</p>", []]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/106", "title": "Feature: Access multiple databases", "status": "closed", "labels": [], "priority": null, "description": ["<p>It would be great if you could authenticate to pgweb, then access a number of databases once logged in.</p>\n<p>I.e. you might want to give access to some developers and they might need to access several databases on the same (or different) servers, each database will have its own set of permissions.</p>\n<p>I guess a simple role based authentication would be fantastic?</p>", ["<p>This makes sense, yes, but unfortunately pgweb does not use any sort of database to store its own settings or state so having any kind of authentication system will require it to have one. I was thinking about it for a while now since i sometimes too want to use pgweb in multiple \"sessions\". Adding this feature will require a significant refactoring effort so its not something i can work on right now, unless you are willing to help out on your end. Feel free to reopen the issue. </p>", "<p>@sosedoff About the multiple pgweb sessions in different tabs, I have implemented this in my fork <a href=\"https://github.com/smurfpandey/mysqlweb\">mysqlweb</a>.\nBasically I am storing a UUID for each new connection, and then sending that UUID on the frontend. On every API request, that UUID is passed in header.\n1. Return UUID when new connection is created: https://github.com/smurfpandey/mysqlweb/blob/master/client.go#L50\n2. Pass this UUID on each API call: \n   https://github.com/smurfpandey/mysqlweb/blob/master/static/js/app.js#L1430\n   https://github.com/smurfpandey/mysqlweb/blob/master/static/js/app.js#L57\n3. On the backend get the the DB connection for this UUID\n   https://github.com/smurfpandey/mysqlweb/blob/master/api.go#L128</p>\n<p>Hope this helps :)</p>", "<p>@smurfpandey thanks, yeah i get that, but i think the original question was not only related to database sessions, but also involves some sort of permission model. Anyways, i was hoping to get to session implementation soon. </p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/105", "title": "Custom table row limits", "status": "closed", "labels": ["enhancement"], "priority": null, "description": ["<p>It looks like it's currently set to 100, but it would be nice to be able to configure that from a settings page.</p>", ["<p>I'll be working on table browse page in the next couple of days and should take care of this. Thanks.</p>", "<p>+1 !</p>", "<p>Implemented in master and will be part of the upcoming 0.8.0 release</p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/104", "title": "Show table constraints", "status": "closed", "labels": [], "priority": null, "description": ["<p><img alt=\"image\" src=\"https://cloud.githubusercontent.com/assets/938138/11604532/effbbca8-9aaa-11e5-983a-02b0029b6a22.png\" /></p>\n<p>Tests pass, ran make assets.</p>", []]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/103", "title": "Filter column and index info to public table", "status": "closed", "labels": [], "priority": null, "description": ["<p>We have tables with the same name in different schemas (e.g. public.cars and testing.cars).</p>\n<p>Only show column and index information from the public schema table (e.g. public.cars).</p>", ["<p>This should be fixed in master which adds support for multiple schemas</p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/102", "title": "Postgis types support", "status": "closed", "labels": [], "priority": null, "description": ["<p>Is it possible to add postgis types support?</p>", ["<p>Closing this for now since postgis really has nothing to do with pgweb. Unless the question was more related to the UI part. Feel free to reopen though. </p>", "<p>It would be great some kind of integration with postgis like \"PostGIS Preview\" http://chriswhong.com/data-visualization/introducing-postgis-preview/ </p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/101", "title": "Visual analyze", "status": "closed", "labels": [], "priority": null, "description": ["<p>Is it possible to add visual analylize like in pgadmin3?</p>\n<p>offtop: 9.4 support? I have 9.4 on all my machines, pgweb works with it, but on installation wiki page 9.3 is latest supported</p>", ["<blockquote>\n<p>Is it possible to add visual analylize like in pgadmin3?\nof course it is! all PRs are welcome</p>\n<p>offtop: 9.4 support?\nshould be working fine with anything 9.x at this point</p>\n</blockquote>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/100", "title": "Add sequence.", "status": "closed", "labels": [], "priority": null, "description": ["<p>Add Sequences.</p>", ["<p>Could you please rebase and also make sure to run <code>make assets</code> ?</p>", "<p>I executed rebase and make assets. please confirm.</p>", "<p>Pardon me, i meant squash not rebase. Just wanted to make sure there's a single commit with all your changes. </p>", "<p>I was aware . It is all of my change to the minute that are currently committed .</p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/99", "title": "SQL update never finishes", "status": "closed", "labels": [], "priority": null, "description": ["<p>I notices this several times.  I have a SQL update statement (or create index statement) which will take around 3 minutes (measured in psql). When I execute this statement in pgweb, it never finishes and I have to wait for ever.</p>\n<p>I think it is because the frontend of pgweb timeouts and it won't wait for PostgreSQL to finish. So the frontend never updates even when the statement execution is finished.</p>\n<p>How to reproduce the prolem: just create a table and populate it with millions of data. Then try to create index on a string column. We know that it might take minutes to hours to finish. But inside pgweb, the frontend never tell you that  it's finished no matter how long you wait(even days). </p>", ["<p>This may be easier to reproduce with <code>pg_sleep()</code>.</p>", "<p>@tylerlong did the issue only appear on longer (hours) requests? The behavior is indeed a bug, but i personally havent tested pgweb with longer running queries since it was not intended for that in the first place. Im currently running a long test using <code>pg_sleep</code>, maybe i can reproduce the bug. </p>", "<p>@cbandy brilliant idea!</p>\n<p>@sosedoff  Yes only appear on longer requests. But not hours, minutes is able to reproduce.</p>\n<p>I just tested this: <code>SELECT pg_sleep(300);</code>. This should be finished in 300 seconds, aka 5 minutes. But I have been waiting for 30 minutes and I am still waiting. I don't think pgweb will ever tell me that it's finished.</p>", "<p>@tylerlong i was able to run sleep query for 300 seconds, and web ui responded correctly. could you specify your stack? (postgresql version, web browser and its version). also, are you running latest pgweb version too?</p>", "<p>@sosedoff I just tested latest version with Chrome browser, it did work without problem.</p>\n<p>What I had problem is Cocoa webview: https://developer.apple.com/library/mac/documentation/Cocoa/Reference/WebKit/Classes/WebView_Class/</p>\n<p>So this might not be pgweb's issue. Let me test more and get back to you later.</p>", "<p>@tylerlong im going to close this for now, feel free to reopen the issue once you have some steps to reproduce the issue. </p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/98", "title": "about map function you use in client.query", "status": "closed", "labels": [], "priority": null, "description": ["<p>I read this on https://blog.golang.org/go-maps-in-action</p>\n<p>Maps are not safe for concurrent use: it's not defined what happens when you read and write to them simultaneously. If you need to read from and write to a map from concurrently executing goroutines, the accesses must be mediated by some kind of synchronization mechanism. One common way to protect maps is with sync.RWMutex.</p>\n<p>I see you use map but not rwmutex. do you use it because there is no other way to display dynamic struct from database and ignore lock since pgweb commonly use for local application or you have handle concurency with another way?</p>", ["<p>Which piece of code in particular are you talking about?</p>", "<p>I think this one which generate object to return as json in pgweb</p>\n<p>```\nfunc (client <em>Client) query(query string, args ...interface{}) (</em>Result, error) {\n    rows, err := client.db.Queryx(query, args...)</p>\n<pre><code>if err != nil {\n    return nil, err\n}\n\ndefer rows.Close()\n\ncols, err := rows.Columns()\nif err != nil {\n    return nil, err\n}\n\nresult := Result{Columns: cols}\n\nfor rows.Next() {\n    obj, err := rows.SliceScan()\n\n    for i, item := range obj {\n        if item == nil {\n            obj[i] = nil\n        } else {\n            t := reflect.TypeOf(item).Kind().String()\n\n            if t == \"slice\" {\n                obj[i] = string(item.([]byte))\n            }\n        }\n    }\n\n    if err == nil {\n        result.Rows = append(result.Rows, obj)\n    }\n}\n\nreturn &amp;result, nil\n</code></pre>\n<p>}\n```</p>", "<p>I dont see any maps in the code you provided. Am i missing something ? <code>rows.SliceScan()</code> returns <code>[]interface{}</code> https://github.com/jmoiron/sqlx/blob/master/sqlx.go#L540</p>", "<p>ok, I'm sorry, I thought it was same with<br />\n        arrayobj := make([]map[string]interface{}, 0)\n        for rows.Next() {\n            // get RawBytes from data\n            err = rows.Scan(scanArgs...)\n            if err != nil {\n                panic(err.Error()) // proper error handling instead of panic in your app\n            }</p>\n<p><code>var value string\n        var vobj = make(map[string]interface{})</code></p>\n<p>.\n .\n .</p>\n<p>thank you for give me direction to code in go</p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/97", "title": "Redshift support", "status": "closed", "labels": [], "priority": null, "description": ["<p>Would like to have redshift support.. </p>\n<p>is this still supported ? anyone took over ?</p>", ["<p>It does work for me. But it doesn't show any of my tables on the left hand side, is that what happened to you?</p>\n<p><img alt=\"screen shot 2015-10-09 at 16 23 57\" src=\"https://cloud.githubusercontent.com/assets/1543321/10389267/9edb62b2-6ea2-11e5-8090-65c1304b31fc.png\" /></p>", "<p>Yes.. same here.. the table defs aren't defined in the same place perhaps.. I remember using \"information_schema\" or something like that. I know there are two ways of accessing the same meta info.</p>", "<p>Same problem with Amazon RDS (Postgresql) btw.</p>", "<p>Amazon RDS should now be supported. I pushed support for multiple schemas into master.</p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/96", "title": "Special characters support", "status": "closed", "labels": ["bug"], "priority": null, "description": ["<p>I tried using this amazing tool and figured it doesn't read my password.</p>\n<p>The password I'm using for my user is <code>%yaron11</code> and for some reason I get the following message (using web or cli):</p>\n<p><code>Error: parse postgres://autheticated:%yaron11@localhost:5432/customerrecords?sslmode=disable: invalid URL escape \"%ya\"</code></p>", ["<p>Ah, i think someone mentioned about this before. Will fix. </p>", "<p>Fixed in latest release. However, you should be using proper escaping for the full uri's</p>", "<p>Confirmed, I must say I'm impressed, blazing fast and very easy to use, thank you for the wonderful tool!</p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/95", "title": "Issue with downloading the CSV ", "status": "closed", "labels": [], "priority": null, "description": ["<p>Runs the query but when I download csv I get an error message.  I believe its because I'm using \"+\" to add two different columns </p>", ["<p>Could you provide a more detailed example?</p>", "<p>Hey,</p>\n<p>So my query included a line \"application_funders.amount +\nCOALESCE(application_prior_fundings.buyout_amount,0) as \"total approved\namount\" FROM applications \"</p>\n<p>I have no problem running the query but when I try to download it I get an\nerror \"pg: syntax error at or near \"COALESCE\"\"</p>\n<p>Thanks,\nELana</p>\n<p>On Mon, Aug 3, 2015 at 3:41 PM, Dan Sosedoff notifications@github.com\nwrote:</p>\n<blockquote>\n<p>Could you provide a more detailed example?</p>\n<p>\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/sosedoff/pgweb/issues/95#issuecomment-127383220.</p>\n</blockquote>", "<p>Thanks, i'll have a look later today</p>", "<p>Fixed in latest release</p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/94", "title": "Out of memory error on large selects", "status": "closed", "labels": [], "priority": null, "description": ["<p>Hey there,</p>\n<p>Getting a runtime error \"out of memory\" when doing a large SQL select on a semi large table.</p>\n<p>The table is 4.6 million rows and has about 40 columns defined.  I'm happy to give more details if necessary!</p>\n<p>```\nPgweb v0.6.2 (git: 68ceb212b583b5737a86f357d05978c551c3351d)\nStarting server...\nTo view database open http://localhost:8081 in browser\n[GIN] 2015/07/29 - 11:04:19 | 200 |   3.887318ms | 127.0.0.1:58659 |   GET     /\n[GIN] 2015/07/29 - 11:04:19 | 200 |   2.541076ms | 127.0.0.1:58659 |   GET     /static/css/bootstrap.css\n[GIN] 2015/07/29 - 11:04:19 | 200 |    838.084\u00b5s | 127.0.0.1:58661 |   GET     /static/css/font-awesome.css\n[GIN] 2015/07/29 - 11:04:19 | 200 |    312.717\u00b5s | 127.0.0.1:58666 |   GET     /static/css/app.css\n[GIN] 2015/07/29 - 11:04:19 | 200 |   2.245542ms | 127.0.0.1:58667 |   GET     /static/js/jquery.js\n[GIN] 2015/07/29 - 11:04:19 | 200 |   1.401028ms | 127.0.0.1:58669 |   GET     /static/js/ace-pgsql.js\n[GIN] 2015/07/29 - 11:04:19 | 200 |   16.85013ms | 127.0.0.1:58668 |   GET     /static/js/ace.js\n[GIN] 2015/07/29 - 11:04:19 | 200 |   1.105922ms | 127.0.0.1:58661 |   GET     /static/js/app.js\n[GIN] 2015/07/29 - 11:04:19 | 200 |    149.141\u00b5s | 127.0.0.1:58659 |   GET     /static/js/bootstrap-contextmenu.js\n[GIN] 2015/07/29 - 11:04:19 | 400 |     27.456\u00b5s | 127.0.0.1:58668 |   GET     /api/connection\n[GIN] 2015/07/29 - 11:04:19 | 400 |    119.127\u00b5s | 127.0.0.1:58668 |   GET     /api/bookmarks\n[GIN] 2015/07/29 - 11:04:27 | 200 |  13.850061ms | 127.0.0.1:58668 |   POST    /api/connect\n[GIN] 2015/07/29 - 11:04:27 | 200 |   6.199428ms | 127.0.0.1:58661 |   GET     /static/fonts/fontawesome-webfont.woff\n[GIN] 2015/07/29 - 11:04:27 | 200 |    9.03663ms | 127.0.0.1:58668 |   GET     /api/tables\nfatal error: runtime: out of memory</p>\n<p>runtime stack:\nruntime.SysMap(0xc2c2d90000, 0x100000, 0x0, 0xb276d8)\n    /usr/local/Cellar/go/1.4.2/libexec/src/runtime/mem_linux.c:149 +0x98\nruntime.MHeap_SysAlloc(0xb2cdc0, 0x100000, 0x42e1a2)\n    /usr/local/Cellar/go/1.4.2/libexec/src/runtime/malloc.c:284 +0x124\nruntime.MHeap_Alloc(0xb2cdc0, 0x1, 0x10000000002, 0x40d72e)\n    /usr/local/Cellar/go/1.4.2/libexec/src/runtime/mheap.c:240 +0x66\nruntime.MCentral_CacheSpan(0xb33938, 0xc208198e10)\n    /usr/local/Cellar/go/1.4.2/libexec/src/runtime/mcentral.c:85 +0x167\nruntime.MCache_Refill(0x7f36bf843000, 0x2, 0x8be9486c0)\n    /usr/local/Cellar/go/1.4.2/libexec/src/runtime/mcache.c:90 +0xa0</p>\n<p>goroutine 13 [running]:\nruntime.switchtoM()\n    /usr/local/Cellar/go/1.4.2/libexec/src/runtime/asm_amd64.s:198 fp=0xc208199168 sp=0xc208199160\nruntime.mallocgc(0x10, 0x72f4a0, 0x7f3600000000, 0xc2c2d8dff0)\n    /usr/local/Cellar/go/1.4.2/libexec/src/runtime/malloc.go:178 +0x849 fp=0xc208199218 sp=0xc208199168\nruntime.newobject(0x72f4a0, 0x717380)\n    /usr/local/Cellar/go/1.4.2/libexec/src/runtime/malloc.go:353 +0x49 fp=0xc208199240 sp=0xc208199218\ngithub.com/jmoiron/sqlx.SliceScan(0x7f36bf858468, 0xc208050690, 0x0, 0x0, 0x0, 0x0, 0x0)\n    /Users/sosedoff/Go/src/github.com/jmoiron/sqlx/sqlx.go:754 +0x181 fp=0xc2081992e8 sp=0xc208199240\ngithub.com/jmoiron/sqlx.(<em>Rows).SliceScan(0xc208050690, 0x0, 0x0, 0x0, 0x0, 0x0)\n    /Users/sosedoff/Go/src/github.com/jmoiron/sqlx/sqlx.go:541 +0x7f fp=0xc208199340 sp=0xc2081992e8\ngithub.com/sosedoff/pgweb/pkg/client.(</em>Client).query(0xc2080e6f60, 0xc20801f1a0, 0x18, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0)\n    /Users/sosedoff/Go/src/github.com/sosedoff/pgweb/pkg/client/client.go:172 +0x23e fp=0xc2081994f0 sp=0xc208199340\ngithub.com/sosedoff/pgweb/pkg/client.(<em>Client).Query(0xc2080e6f60, 0xc20801f1a0, 0x18, 0x40e112, 0x0, 0x0)\n    /Users/sosedoff/Go/src/github.com/sosedoff/pgweb/pkg/client/client.go:145 +0x81 fp=0xc2081995a8 sp=0xc2081994f0\ngithub.com/sosedoff/pgweb/pkg/api.HandleQuery(0xc20801f1a0, 0x18, 0xc208036630)\n    /Users/sosedoff/Go/src/github.com/sosedoff/pgweb/pkg/api/api.go:177 +0x4f fp=0xc208199718 sp=0xc2081995a8\ngithub.com/sosedoff/pgweb/pkg/api.RunQuery(0xc208036630)\n    /Users/sosedoff/Go/src/github.com/sosedoff/pgweb/pkg/api/api.go:81 +0x1bc fp=0xc2081997a0 sp=0xc208199718\ngithub.com/gin-gonic/gin.(</em>Context).Next(0xc208036630)\n    /Users/sosedoff/Go/src/github.com/gin-gonic/gin/context.go:114 +0x95 fp=0xc2081997d0 sp=0xc2081997a0\ngithub.com/sosedoff/pgweb/pkg/api.func\u00b7001(0xc208036630)\n    /Users/sosedoff/Go/src/github.com/sosedoff/pgweb/pkg/api/helpers.go:54 +0x45 fp=0xc208199878 sp=0xc2081997d0\ngithub.com/gin-gonic/gin.(<em>Context).Next(0xc208036630)\n    /Users/sosedoff/Go/src/github.com/gin-gonic/gin/context.go:114 +0x95 fp=0xc2081998a8 sp=0xc208199878\ngithub.com/gin-gonic/gin.func\u00b7006(0xc208036630)\n    /Users/sosedoff/Go/src/github.com/gin-gonic/gin/logger.go:49 +0x68 fp=0xc208199ad8 sp=0xc2081998a8\ngithub.com/gin-gonic/gin.(</em>Context).Next(0xc208036630)\n    /Users/sosedoff/Go/src/github.com/gin-gonic/gin/context.go:114 +0x95 fp=0xc208199b08 sp=0xc208199ad8\ngithub.com/gin-gonic/gin.func\u00b7008(0xc208036630)\n    /Users/sosedoff/Go/src/github.com/gin-gonic/gin/recovery.go:96 +0x61 fp=0xc208199b28 sp=0xc208199b08\ngithub.com/gin-gonic/gin.(<em>Context).Next(0xc208036630)\n    /Users/sosedoff/Go/src/github.com/gin-gonic/gin/context.go:114 +0x95 fp=0xc208199b58 sp=0xc208199b28\ngithub.com/gin-gonic/gin.func\u00b7009(0x7f36bf856578, 0xc208092000, 0xc208044b60, 0x0, 0x0, 0x0)\n    /Users/sosedoff/Go/src/github.com/gin-gonic/gin/routergroup.go:57 +0xa3 fp=0xc208199bd8 sp=0xc208199b58\ngithub.com/julienschmidt/httprouter.(</em>Router).ServeHTTP(0xc20801e6e0, 0x7f36bf856578, 0xc208092000, 0xc208044b60)\n    /Users/sosedoff/Go/src/github.com/julienschmidt/httprouter/router.go:281 +0x188 fp=0xc208199c88 sp=0xc208199bd8\ngithub.com/gin-gonic/gin.(<em>Engine).ServeHTTP(0xc20809e100, 0x7f36bf856578, 0xc208092000, 0xc208044b60)\n    /Users/sosedoff/Go/src/github.com/gin-gonic/gin/gin.go:126 +0x4a fp=0xc208199cb0 sp=0xc208199c88\nnet/http.serverHandler.ServeHTTP(0xc208034a80, 0x7f36bf856578, 0xc208092000, 0xc208044b60)\n    /usr/local/Cellar/go/1.4.2/libexec/src/net/http/server.go:1703 +0x19a fp=0xc208199d08 sp=0xc208199cb0\nnet/http.(</em>conn).serve(0xc208092320)\n    /usr/local/Cellar/go/1.4.2/libexec/src/net/http/server.go:1204 +0xb57 fp=0xc208199fd8 sp=0xc208199d08\nruntime.goexit()\n    /usr/local/Cellar/go/1.4.2/libexec/src/runtime/asm_amd64.s:2232 +0x1 fp=0xc208199fe0 sp=0xc208199fd8\ncreated by net/http.(*Server).Serve\n    /usr/local/Cellar/go/1.4.2/libexec/src/net/http/server.go:1751 +0x35e</p>\n<p>goroutine 1 [chan receive]:\nmain.handleSignals()\n    /Users/sosedoff/go/src/github.com/sosedoff/pgweb/main.go:102 +0x10f\nmain.main()\n    /Users/sosedoff/go/src/github.com/sosedoff/pgweb/main.go:140 +0x99</p>\n<p>goroutine 5 [syscall]:\nos/signal.loop()\n    /usr/local/Cellar/go/1.4.2/libexec/src/os/signal/signal_unix.go:21 +0x1f\ncreated by os/signal.init\u00b71\n    /usr/local/Cellar/go/1.4.2/libexec/src/os/signal/signal_unix.go:27 +0x35</p>\n<p>goroutine 6 [IO wait]:\nnet.(<em>pollDesc).Wait(0xc208010920, 0x72, 0x0, 0x0)\n    /usr/local/Cellar/go/1.4.2/libexec/src/net/fd_poll_runtime.go:84 +0x47\nnet.(</em>pollDesc).WaitRead(0xc208010920, 0x0, 0x0)\n    /usr/local/Cellar/go/1.4.2/libexec/src/net/fd_poll_runtime.go:89 +0x43\nnet.(<em>netFD).accept(0xc2080108c0, 0x0, 0x7f36bf854d48, 0xc208104898)\n    /usr/local/Cellar/go/1.4.2/libexec/src/net/fd_unix.go:419 +0x40b\nnet.(</em>TCPListener).AcceptTCP(0xc20804e248, 0x5414de, 0x0, 0x0)\n    /usr/local/Cellar/go/1.4.2/libexec/src/net/tcpsock_posix.go:234 +0x4e\nnet/http.tcpKeepAliveListener.Accept(0xc20804e248, 0x0, 0x0, 0x0, 0x0)\n    /usr/local/Cellar/go/1.4.2/libexec/src/net/http/server.go:1976 +0x4c\nnet/http.(<em>Server).Serve(0xc208034a80, 0x7f36bf856348, 0xc20804e248, 0x0, 0x0)\n    /usr/local/Cellar/go/1.4.2/libexec/src/net/http/server.go:1728 +0x92\nnet/http.(</em>Server).ListenAndServe(0xc208034a80, 0x0, 0x0)\n    /usr/local/Cellar/go/1.4.2/libexec/src/net/http/server.go:1718 +0x154\nnet/http.ListenAndServe(0xc20800b750, 0xe, 0x7f36bf855230, 0xc20809e100, 0x0, 0x0)\n    /usr/local/Cellar/go/1.4.2/libexec/src/net/http/server.go:1808 +0xba\ngithub.com/gin-gonic/gin.(*Engine).Run(0xc20809e100, 0xc20800b750, 0xe, 0x0, 0x0)\n    /Users/sosedoff/Go/src/github.com/gin-gonic/gin/gin.go:131 +0x170\nmain.func\u00b7001()\n    /Users/sosedoff/go/src/github.com/sosedoff/pgweb/main.go:91 +0x18b\ncreated by main.startServer\n    /Users/sosedoff/go/src/github.com/sosedoff/pgweb/main.go:96 +0x2c9</p>\n<p>goroutine 9 [IO wait]:\nnet.(<em>pollDesc).Wait(0xc208010a00, 0x72, 0x0, 0x0)\n    /usr/local/Cellar/go/1.4.2/libexec/src/net/fd_poll_runtime.go:84 +0x47\nnet.(</em>pollDesc).WaitRead(0xc208010a00, 0x0, 0x0)\n    /usr/local/Cellar/go/1.4.2/libexec/src/net/fd_poll_runtime.go:89 +0x43\nnet.(<em>netFD).Read(0xc2080109a0, 0xc2080d6000, 0x1000, 0x1000, 0x0, 0x7f36bf854d48, 0xc2081051c0)\n    /usr/local/Cellar/go/1.4.2/libexec/src/net/fd_unix.go:242 +0x40f\nnet.(</em>conn).Read(0xc20804e2a0, 0xc2080d6000, 0x1000, 0x1000, 0x0, 0x0, 0x0)\n    /usr/local/Cellar/go/1.4.2/libexec/src/net/net.go:121 +0xdc\nnet/http.(<em>liveSwitchReader).Read(0xc208092b88, 0xc2080d6000, 0x1000, 0x1000, 0x4eb135, 0x0, 0x0)\n    /usr/local/Cellar/go/1.4.2/libexec/src/net/http/server.go:214 +0xab\nio.(</em>LimitedReader).Read(0xc20801fc80, 0xc2080d6000, 0x1000, 0x1000, 0x4713f8, 0x0, 0x0)\n    /usr/local/Cellar/go/1.4.2/libexec/src/io/io.go:408 +0xce\nbufio.(<em>Reader).fill(0xc208034cc0)\n    /usr/local/Cellar/go/1.4.2/libexec/src/bufio/bufio.go:97 +0x1ce\nbufio.(</em>Reader).ReadSlice(0xc208034cc0, 0x90000000000000a, 0x0, 0x0, 0x0, 0x0, 0x0)\n    /usr/local/Cellar/go/1.4.2/libexec/src/bufio/bufio.go:295 +0x257\nbufio.(<em>Reader).ReadLine(0xc208034cc0, 0x0, 0x0, 0x0, 0xc207ff1900, 0x0, 0x0)\n    /usr/local/Cellar/go/1.4.2/libexec/src/bufio/bufio.go:324 +0x62\nnet/textproto.(</em>Reader).readLineSlice(0xc2080e69c0, 0x0, 0x0, 0x0, 0x0, 0x0)\n    /usr/local/Cellar/go/1.4.2/libexec/src/net/textproto/reader.go:55 +0x9e\nnet/textproto.(<em>Reader).ReadLine(0xc2080e69c0, 0x0, 0x0, 0x0, 0x0)\n    /usr/local/Cellar/go/1.4.2/libexec/src/net/textproto/reader.go:36 +0x4f\nnet/http.ReadRequest(0xc208034cc0, 0xc208045790, 0x0, 0x0)\n    /usr/local/Cellar/go/1.4.2/libexec/src/net/http/request.go:598 +0xcb\nnet/http.(</em>conn).readRequest(0xc208092b40, 0x0, 0x0, 0x0)\n    /usr/local/Cellar/go/1.4.2/libexec/src/net/http/server.go:586 +0x26f\nnet/http.(<em>conn).serve(0xc208092b40)\n    /usr/local/Cellar/go/1.4.2/libexec/src/net/http/server.go:1162 +0x69e\ncreated by net/http.(</em>Server).Serve\n    /usr/local/Cellar/go/1.4.2/libexec/src/net/http/server.go:1751 +0x35e</p>\n<p>goroutine 10 [IO wait]:\nnet.(<em>pollDesc).Wait(0xc208122a70, 0x72, 0x0, 0x0)\n    /usr/local/Cellar/go/1.4.2/libexec/src/net/fd_poll_runtime.go:84 +0x47\nnet.(</em>pollDesc).WaitRead(0xc208122a70, 0x0, 0x0)\n    /usr/local/Cellar/go/1.4.2/libexec/src/net/fd_poll_runtime.go:89 +0x43\nnet.(<em>netFD).Read(0xc208122a10, 0xc20800f000, 0x1000, 0x1000, 0x0, 0x7f36bf854d48, 0xc208106868)\n    /usr/local/Cellar/go/1.4.2/libexec/src/net/fd_unix.go:242 +0x40f\nnet.(</em>conn).Read(0xc20804e020, 0xc20800f000, 0x1000, 0x1000, 0x0, 0x0, 0x0)\n    /usr/local/Cellar/go/1.4.2/libexec/src/net/net.go:121 +0xdc\nnet/http.(<em>liveSwitchReader).Read(0xc208092188, 0xc20800f000, 0x1000, 0x1000, 0xc000000004eb135, 0x0, 0x0)\n    /usr/local/Cellar/go/1.4.2/libexec/src/net/http/server.go:214 +0xab\nio.(</em>LimitedReader).Read(0xc2080e0720, 0xc20800f000, 0x1000, 0x1000, 0x4713f8, 0x0, 0x0)\n    /usr/local/Cellar/go/1.4.2/libexec/src/io/io.go:408 +0xce\nbufio.(<em>Reader).fill(0xc208034ae0)\n    /usr/local/Cellar/go/1.4.2/libexec/src/bufio/bufio.go:97 +0x1ce\nbufio.(</em>Reader).ReadSlice(0xc208034ae0, 0xa, 0x0, 0x0, 0x0, 0x0, 0x0)\n    /usr/local/Cellar/go/1.4.2/libexec/src/bufio/bufio.go:295 +0x257\nbufio.(<em>Reader).ReadLine(0xc208034ae0, 0x0, 0x0, 0x0, 0xc207ff1900, 0x0, 0x0)\n    /usr/local/Cellar/go/1.4.2/libexec/src/bufio/bufio.go:324 +0x62\nnet/textproto.(</em>Reader).readLineSlice(0xc2080e64e0, 0x0, 0x0, 0x0, 0x0, 0x0)\n    /usr/local/Cellar/go/1.4.2/libexec/src/net/textproto/reader.go:55 +0x9e\nnet/textproto.(<em>Reader).ReadLine(0xc2080e64e0, 0x0, 0x0, 0x0, 0x0)\n    /usr/local/Cellar/go/1.4.2/libexec/src/net/textproto/reader.go:36 +0x4f\nnet/http.ReadRequest(0xc208034ae0, 0xc208044a90, 0x0, 0x0)\n    /usr/local/Cellar/go/1.4.2/libexec/src/net/http/request.go:598 +0xcb\nnet/http.(</em>conn).readRequest(0xc208092140, 0x0, 0x0, 0x0)\n    /usr/local/Cellar/go/1.4.2/libexec/src/net/http/server.go:586 +0x26f\nnet/http.(<em>conn).serve(0xc208092140)\n    /usr/local/Cellar/go/1.4.2/libexec/src/net/http/server.go:1162 +0x69e\ncreated by net/http.(</em>Server).Serve\n    /usr/local/Cellar/go/1.4.2/libexec/src/net/http/server.go:1751 +0x35e</p>\n<p>goroutine 11 [IO wait]:\nnet.(<em>pollDesc).Wait(0xc208122ae0, 0x72, 0x0, 0x0)\n    /usr/local/Cellar/go/1.4.2/libexec/src/net/fd_poll_runtime.go:84 +0x47\nnet.(</em>pollDesc).WaitRead(0xc208122ae0, 0x0, 0x0)\n    /usr/local/Cellar/go/1.4.2/libexec/src/net/fd_poll_runtime.go:89 +0x43\nnet.(<em>netFD).Read(0xc208122a80, 0xc208117000, 0x1000, 0x1000, 0x0, 0x7f36bf854d48, 0xc2081050f0)\n    /usr/local/Cellar/go/1.4.2/libexec/src/net/fd_unix.go:242 +0x40f\nnet.(</em>conn).Read(0xc20804e028, 0xc208117000, 0x1000, 0x1000, 0x0, 0x0, 0x0)\n    /usr/local/Cellar/go/1.4.2/libexec/src/net/net.go:121 +0xdc\nnet/http.(<em>liveSwitchReader).Read(0xc208092228, 0xc208117000, 0x1000, 0x1000, 0x4eb135, 0x0, 0x0)\n    /usr/local/Cellar/go/1.4.2/libexec/src/net/http/server.go:214 +0xab\nio.(</em>LimitedReader).Read(0xc2080e07a0, 0xc208117000, 0x1000, 0x1000, 0x4713f8, 0x0, 0x0)\n    /usr/local/Cellar/go/1.4.2/libexec/src/io/io.go:408 +0xce\nbufio.(<em>Reader).fill(0xc208034b40)\n    /usr/local/Cellar/go/1.4.2/libexec/src/bufio/bufio.go:97 +0x1ce\nbufio.(</em>Reader).ReadSlice(0xc208034b40, 0xa, 0x0, 0x0, 0x0, 0x0, 0x0)\n    /usr/local/Cellar/go/1.4.2/libexec/src/bufio/bufio.go:295 +0x257\nbufio.(<em>Reader).ReadLine(0xc208034b40, 0x0, 0x0, 0x0, 0x1f252f00, 0x0, 0x0)\n    /usr/local/Cellar/go/1.4.2/libexec/src/bufio/bufio.go:324 +0x62\nnet/textproto.(</em>Reader).readLineSlice(0xc2080e6090, 0x0, 0x0, 0x0, 0x0, 0x0)\n    /usr/local/Cellar/go/1.4.2/libexec/src/net/textproto/reader.go:55 +0x9e\nnet/textproto.(<em>Reader).ReadLine(0xc2080e6090, 0x0, 0x0, 0x0, 0x0)\n    /usr/local/Cellar/go/1.4.2/libexec/src/net/textproto/reader.go:36 +0x4f\nnet/http.ReadRequest(0xc208034b40, 0xc208045040, 0x0, 0x0)\n    /usr/local/Cellar/go/1.4.2/libexec/src/net/http/request.go:598 +0xcb\nnet/http.(</em>conn).readRequest(0xc2080921e0, 0x0, 0x0, 0x0)\n    /usr/local/Cellar/go/1.4.2/libexec/src/net/http/server.go:586 +0x26f\nnet/http.(<em>conn).serve(0xc2080921e0)\n    /usr/local/Cellar/go/1.4.2/libexec/src/net/http/server.go:1162 +0x69e\ncreated by net/http.(</em>Server).Serve\n    /usr/local/Cellar/go/1.4.2/libexec/src/net/http/server.go:1751 +0x35e</p>\n<p>goroutine 12 [IO wait]:\nnet.(<em>pollDesc).Wait(0xc208122b50, 0x72, 0x0, 0x0)\n    /usr/local/Cellar/go/1.4.2/libexec/src/net/fd_poll_runtime.go:84 +0x47\nnet.(</em>pollDesc).WaitRead(0xc208122b50, 0x0, 0x0)\n    /usr/local/Cellar/go/1.4.2/libexec/src/net/fd_poll_runtime.go:89 +0x43\nnet.(<em>netFD).Read(0xc208122af0, 0xc2080cd000, 0x1000, 0x1000, 0x0, 0x7f36bf854d48, 0xc208105140)\n    /usr/local/Cellar/go/1.4.2/libexec/src/net/fd_unix.go:242 +0x40f\nnet.(</em>conn).Read(0xc20804e030, 0xc2080cd000, 0x1000, 0x1000, 0x0, 0x0, 0x0)\n    /usr/local/Cellar/go/1.4.2/libexec/src/net/net.go:121 +0xdc\nnet/http.(<em>liveSwitchReader).Read(0xc2080922c8, 0xc2080cd000, 0x1000, 0x1000, 0x4eb135, 0x0, 0x0)\n    /usr/local/Cellar/go/1.4.2/libexec/src/net/http/server.go:214 +0xab\nio.(</em>LimitedReader).Read(0xc2080e0820, 0xc2080cd000, 0x1000, 0x1000, 0x4713f8, 0x0, 0x0)\n    /usr/local/Cellar/go/1.4.2/libexec/src/io/io.go:408 +0xce\nbufio.(<em>Reader).fill(0xc208034c00)\n    /usr/local/Cellar/go/1.4.2/libexec/src/bufio/bufio.go:97 +0x1ce\nbufio.(</em>Reader).ReadSlice(0xc208034c00, 0x20000000000000a, 0x0, 0x0, 0x0, 0x0, 0x0)\n    /usr/local/Cellar/go/1.4.2/libexec/src/bufio/bufio.go:295 +0x257\nbufio.(<em>Reader).ReadLine(0xc208034c00, 0x0, 0x0, 0x0, 0x1f2add00, 0x0, 0x0)\n    /usr/local/Cellar/go/1.4.2/libexec/src/bufio/bufio.go:324 +0x62\nnet/textproto.(</em>Reader).readLineSlice(0xc2080e6450, 0x0, 0x0, 0x0, 0x0, 0x0)\n    /usr/local/Cellar/go/1.4.2/libexec/src/net/textproto/reader.go:55 +0x9e\nnet/textproto.(<em>Reader).ReadLine(0xc2080e6450, 0x0, 0x0, 0x0, 0x0)\n    /usr/local/Cellar/go/1.4.2/libexec/src/net/textproto/reader.go:36 +0x4f\nnet/http.ReadRequest(0xc208034c00, 0xc2080451e0, 0x0, 0x0)\n    /usr/local/Cellar/go/1.4.2/libexec/src/net/http/request.go:598 +0xcb\nnet/http.(</em>conn).readRequest(0xc208092280, 0x0, 0x0, 0x0)\n    /usr/local/Cellar/go/1.4.2/libexec/src/net/http/server.go:586 +0x26f\nnet/http.(<em>conn).serve(0xc208092280)\n    /usr/local/Cellar/go/1.4.2/libexec/src/net/http/server.go:1162 +0x69e\ncreated by net/http.(</em>Server).Serve\n    /usr/local/Cellar/go/1.4.2/libexec/src/net/http/server.go:1751 +0x35e</p>\n<p>goroutine 14 [IO wait]:\nnet.(<em>pollDesc).Wait(0xc208122c30, 0x72, 0x0, 0x0)\n    /usr/local/Cellar/go/1.4.2/libexec/src/net/fd_poll_runtime.go:84 +0x47\nnet.(</em>pollDesc).WaitRead(0xc208122c30, 0x0, 0x0)\n    /usr/local/Cellar/go/1.4.2/libexec/src/net/fd_poll_runtime.go:89 +0x43\nnet.(<em>netFD).Read(0xc208122bd0, 0xc208169000, 0x1000, 0x1000, 0x0, 0x7f36bf854d48, 0xc208105160)\n    /usr/local/Cellar/go/1.4.2/libexec/src/net/fd_unix.go:242 +0x40f\nnet.(</em>conn).Read(0xc20804e040, 0xc208169000, 0x1000, 0x1000, 0x0, 0x0, 0x0)\n    /usr/local/Cellar/go/1.4.2/libexec/src/net/net.go:121 +0xdc\nnet/http.(<em>liveSwitchReader).Read(0xc208092408, 0xc208169000, 0x1000, 0x1000, 0x4eb135, 0x0, 0x0)\n    /usr/local/Cellar/go/1.4.2/libexec/src/net/http/server.go:214 +0xab\nio.(</em>LimitedReader).Read(0xc2080e0900, 0xc208169000, 0x1000, 0x1000, 0x4713f8, 0x0, 0x0)\n    /usr/local/Cellar/go/1.4.2/libexec/src/io/io.go:408 +0xce\nbufio.(<em>Reader).fill(0xc208034d80)\n    /usr/local/Cellar/go/1.4.2/libexec/src/bufio/bufio.go:97 +0x1ce\nbufio.(</em>Reader).ReadSlice(0xc208034d80, 0x30000000000000a, 0x0, 0x0, 0x0, 0x0, 0x0)\n    /usr/local/Cellar/go/1.4.2/libexec/src/bufio/bufio.go:295 +0x257\nbufio.(<em>Reader).ReadLine(0xc208034d80, 0x0, 0x0, 0x0, 0xc207ff1900, 0x0, 0x0)\n    /usr/local/Cellar/go/1.4.2/libexec/src/bufio/bufio.go:324 +0x62\nnet/textproto.(</em>Reader).readLineSlice(0xc2080e6930, 0x0, 0x0, 0x0, 0x0, 0x0)\n    /usr/local/Cellar/go/1.4.2/libexec/src/net/textproto/reader.go:55 +0x9e\nnet/textproto.(<em>Reader).ReadLine(0xc2080e6930, 0x0, 0x0, 0x0, 0x0)\n    /usr/local/Cellar/go/1.4.2/libexec/src/net/textproto/reader.go:36 +0x4f\nnet/http.ReadRequest(0xc208034d80, 0xc2080452b0, 0x0, 0x0)\n    /usr/local/Cellar/go/1.4.2/libexec/src/net/http/request.go:598 +0xcb\nnet/http.(</em>conn).readRequest(0xc2080923c0, 0x0, 0x0, 0x0)\n    /usr/local/Cellar/go/1.4.2/libexec/src/net/http/server.go:586 +0x26f\nnet/http.(<em>conn).serve(0xc2080923c0)\n    /usr/local/Cellar/go/1.4.2/libexec/src/net/http/server.go:1162 +0x69e\ncreated by net/http.(</em>Server).Serve\n    /usr/local/Cellar/go/1.4.2/libexec/src/net/http/server.go:1751 +0x35e</p>\n<p>goroutine 15 [chan receive]:\ndatabase/sql.(*DB).connectionOpener(0xc208093220)\n    /usr/local/Cellar/go/1.4.2/libexec/src/database/sql/sql.go:589 +0x4c\ncreated by database/sql.Open\n    /usr/local/Cellar/go/1.4.2/libexec/src/database/sql/sql.go:452 +0x31c\n```</p>", ["<p>So this error happens all the time or randomly? </p>", "<p>It happens all the time on a number of our tables.</p>\n<p>Here are the two test cases.</p>\n<p>1) pgWeb 'select * from test_table' (a large table with a relatively simple schema and 1 million rows) and the browser rendered view never returns (get the 'aw snap') error in Chrome.</p>\n<p>Create 1 million rows</p>\n<p><code>create table test_table as ( SELECT generate_series(1,1000000) AS id, md5(random()::text) AS descr1, md5(random()::text) AS descr2, md5(random()::text) AS descr3, md5(random()::text) AS descr4 );</code></p>\n<p><code>Pgweb v0.6.2 (git: 68ceb212b583b5737a86f357d05978c551c3351d)\nStarting server...\nTo view database open http://localhost:8081 in browser\n[GIN] 2015/07/29 - 13:12:51 | 200 |   8.028248ms | 127.0.0.1:58739 |   GET     /static/css/font-awesome.css\n[GIN] 2015/07/29 - 13:12:51 | 200 |   1.123979ms | 127.0.0.1:58738 |   GET     /static/css/bootstrap.css\n[GIN] 2015/07/29 - 13:12:51 | 200 |    285.512\u00b5s | 127.0.0.1:58741 |   GET     /\n[GIN] 2015/07/29 - 13:12:51 | 200 |    651.532\u00b5s | 127.0.0.1:58740 |   GET     /static/css/app.css\n[GIN] 2015/07/29 - 13:13:00 | 200 |     391.83\u00b5s | 127.0.0.1:58741 |   GET     /static/css/app.css\n[GIN] 2015/07/29 - 13:13:00 | 200 |   1.972954ms | 127.0.0.1:58740 |   GET     /static/css/font-awesome.css\n[GIN] 2015/07/29 - 13:13:00 | 200 |   3.094008ms | 127.0.0.1:58739 |   GET     /static/js/jquery.js\n[GIN] 2015/07/29 - 13:13:00 | 200 |   3.346939ms | 127.0.0.1:58738 |   GET     /static/css/bootstrap.css\n[GIN] 2015/07/29 - 13:13:00 | 200 |    186.698\u00b5s | 127.0.0.1:58740 |   GET     /static/js/app.js\n[GIN] 2015/07/29 - 13:13:00 | 200 |    234.626\u00b5s | 127.0.0.1:58741 |   GET     /static/js/bootstrap-contextmenu.js\n[GIN] 2015/07/29 - 13:13:00 | 200 |   1.546753ms | 127.0.0.1:58745 |   GET     /static/js/ace-pgsql.js\n[GIN] 2015/07/29 - 13:13:00 | 200 |  15.472393ms | 127.0.0.1:58743 |   GET     /static/js/ace.js\n[GIN] 2015/07/29 - 13:13:01 | 400 |     54.423\u00b5s | 127.0.0.1:58743 |   GET     /api/connection\n[GIN] 2015/07/29 - 13:13:01 | 400 |    185.374\u00b5s | 127.0.0.1:58743 |   GET     /api/bookmarks\n[GIN] 2015/07/29 - 13:13:35 | 200 |   5.467798ms | 127.0.0.1:58743 |   POST    /api/connect\n[GIN] 2015/07/29 - 13:13:35 | 200 |    771.586\u00b5s | 127.0.0.1:58745 |   GET     /static/fonts/fontawesome-webfont.woff\n[GIN] 2015/07/29 - 13:13:35 | 200 |   9.180807ms | 127.0.0.1:58743 |   GET     /api/tables\n[GIN] 2015/07/29 - 13:14:07 | 200 | 24.706151284s | 127.0.0.1:58745 |   POST    /api/query\n[GIN] 2015/07/29 - 13:15:25 | 200 |     282.12\u00b5s | 127.0.0.1:58745 |   GET     /\n[GIN] 2015/07/29 - 13:15:25 | 200 |    936.821\u00b5s | 127.0.0.1:58739 |   GET     /static/js/ace-pgsql.js\n[GIN] 2015/07/29 - 13:15:25 | 200 |   5.241221ms | 127.0.0.1:58741 |   GET     /static/js/jquery.js\n[GIN] 2015/07/29 - 13:15:25 | 200 |    5.03265ms | 127.0.0.1:58740 |   GET     /static/js/ace.js\n[GIN] 2015/07/29 - 13:15:25 | 200 |    1.96152ms | 127.0.0.1:58745 |   GET     /static/css/bootstrap.css\n[GIN] 2015/07/29 - 13:15:25 | 200 |    558.966\u00b5s | 127.0.0.1:58743 |   GET     /static/css/font-awesome.css\n[GIN] 2015/07/29 - 13:15:25 | 200 |    220.591\u00b5s | 127.0.0.1:58738 |   GET     /static/css/app.css\n[GIN] 2015/07/29 - 13:15:25 | 200 |     334.75\u00b5s | 127.0.0.1:58739 |   GET     /static/js/bootstrap-contextmenu.js\n[GIN] 2015/07/29 - 13:15:25 | 200 |    441.934\u00b5s | 127.0.0.1:58738 |   GET     /static/js/app.js\n[GIN] 2015/07/29 - 13:15:25 | 200 |    342.704\u00b5s | 127.0.0.1:58740 |   GET     /api/connection\n[GIN] 2015/07/29 - 13:15:25 | 200 |    738.346\u00b5s | 127.0.0.1:58738 |   GET     /static/fonts/fontawesome-webfont.woff\n[GIN] 2015/07/29 - 13:15:25 | 200 |    1.23567ms | 127.0.0.1:58740 |   GET     /api/tables</code></p>\n<p>2) pgWeb 'select * from test_table2' (a large table with a relatively simple schema and 5 million rows) and the browser rendered view never returns (get the 'aw snap') error in Chrome.</p>\n<p><code>create table test_table as ( SELECT generate_series(1,5000000) AS id, md5(random()::text) AS descr1, md5(random()::text) AS descr2, md5(random()::text) AS descr3, md5(random()::text) AS descr4 );</code></p>\n<p>```\nPgweb v0.6.2 (git: 68ceb212b583b5737a86f357d05978c551c3351d)\nStarting server...\nTo view database open http://localhost:8081 in browser\n[GIN] 2015/07/29 - 13:25:42 | 200 |   3.515789ms | 127.0.0.1:58776 |   GET     /\n[GIN] 2015/07/29 - 13:25:42 | 200 |    704.997\u00b5s | 127.0.0.1:58779 |   GET     /static/css/font-awesome.css\n[GIN] 2015/07/29 - 13:25:43 | 200 |  18.812191ms | 127.0.0.1:58783 |   GET     /static/js/jquery.js\n[GIN] 2015/07/29 - 13:25:43 | 200 |    290.342\u00b5s | 127.0.0.1:58780 |   GET     /static/css/app.css\n[GIN] 2015/07/29 - 13:25:43 | 200 |    411.346\u00b5s | 127.0.0.1:58780 |   GET     /static/js/app.js\n[GIN] 2015/07/29 - 13:25:43 | 200 |    448.703\u00b5s | 127.0.0.1:58779 |   GET     /static/js/bootstrap-contextmenu.js\n[GIN] 2015/07/29 - 13:25:43 | 200 |  10.569147ms | 127.0.0.1:58776 |   GET     /static/css/bootstrap.css\n[GIN] 2015/07/29 - 13:25:43 | 200 |  25.179581ms | 127.0.0.1:58784 |   GET     /static/js/ace.js\n[GIN] 2015/07/29 - 13:25:43 | 200 |  17.919021ms | 127.0.0.1:58786 |   GET     /static/js/ace-pgsql.js\n[GIN] 2015/07/29 - 13:25:43 | 400 |     51.242\u00b5s | 127.0.0.1:58784 |   GET     /api/connection\n[GIN] 2015/07/29 - 13:25:43 | 400 |   1.191882ms | 127.0.0.1:58784 |   GET     /api/bookmarks\n[GIN] 2015/07/29 - 13:25:54 | 200 |  81.823107ms | 127.0.0.1:58784 |   POST    /api/connect\n[GIN] 2015/07/29 - 13:25:54 | 200 |   1.832567ms | 127.0.0.1:58786 |   GET     /static/fonts/fontawesome-webfont.woff\n[GIN] 2015/07/29 - 13:25:54 | 200 |  37.664201ms | 127.0.0.1:58784 |   GET     /api/tables\nfatal error: runtime: out of memory</p>\n<p>runtime stack:\nruntime.SysMap(0xc2d9210000, 0x505a0000, 0xc208083b00, 0xb276d8)\n    /usr/local/Cellar/go/1.4.2/libexec/src/runtime/mem_linux.c:149 +0x98\nruntime.MHeap_SysAlloc(0xb2cdc0, 0x505a0000, 0x42e1a2)\n    /usr/local/Cellar/go/1.4.2/libexec/src/runtime/malloc.c:284 +0x124\nruntime.MHeap_Alloc(0xb2cdc0, 0x282ca, 0x10100000000, 0x0)\n    /usr/local/Cellar/go/1.4.2/libexec/src/runtime/mheap.c:240 +0x66</p>\n<p>goroutine 13 [running]:\nruntime.switchtoM()\n    /usr/local/Cellar/go/1.4.2/libexec/src/runtime/asm_amd64.s:198 fp=0xc208156aa0 sp=0xc208156a98\nruntime.mallocgc(0x50592e70, 0x733260, 0x1, 0x602abe)\n    /usr/local/Cellar/go/1.4.2/libexec/src/runtime/malloc.go:199 +0x9f3 fp=0xc208156b50 sp=0xc208156aa0\nruntime.newarray(0x733260, 0x50592e70, 0xc208020a80)\n    /usr/local/Cellar/go/1.4.2/libexec/src/runtime/malloc.go:365 +0xc1 fp=0xc208156b88 sp=0xc208156b50\nruntime.makeslice(0x724f40, 0x50592e70, 0x50592e70, 0x0, 0x0, 0x0)\n    /usr/local/Cellar/go/1.4.2/libexec/src/runtime/slice.go:32 +0x15c fp=0xc208156bd0 sp=0xc208156b88\nbytes.makeSlice(0x50592e70, 0x0, 0x0, 0x0)\n    /usr/local/Cellar/go/1.4.2/libexec/src/bytes/buffer.go:191 +0x6a fp=0xc208156c20 sp=0xc208156bd0\nbytes.(<em>Buffer).grow(0xc20808a0b0, 0x20, 0x1)\n    /usr/local/Cellar/go/1.4.2/libexec/src/bytes/buffer.go:99 +0x243 fp=0xc208156c98 sp=0xc208156c20\nbytes.(</em>Buffer).WriteString(0xc20808a0b0, 0xc25850b000, 0x20, 0x0, 0x0, 0x0)\n    /usr/local/Cellar/go/1.4.2/libexec/src/bytes/buffer.go:136 +0x4c fp=0xc208156ce8 sp=0xc208156c98\nencoding/json.(<em>encodeState).string(0xc20808a0b0, 0xc25850b000, 0x20, 0xc25850b000, 0x0, 0x0)\n    /usr/local/Cellar/go/1.4.2/libexec/src/encoding/json/encode.go:854 +0x16d fp=0xc208156d58 sp=0xc208156ce8\nencoding/json.stringEncoder(0xc20808a0b0, 0x732d60, 0xc22f0e9fb0, 0x58, 0xc22f0e9f00)\n    /usr/local/Cellar/go/1.4.2/libexec/src/encoding/json/encode.go:548 +0x29f fp=0xc208156e00 sp=0xc208156d58\nencoding/json.(</em>encodeState).reflectValue(0xc20808a0b0, 0x732d60, 0xc22f0e9fb0, 0x58)\n    /usr/local/Cellar/go/1.4.2/libexec/src/encoding/json/encode.go:299 +0x72 fp=0xc208156e30 sp=0xc208156e00\nencoding/json.interfaceEncoder(0xc20808a0b0, 0x72f4a0, 0xc25265ce70, 0xd4, 0x72f400)\n    /usr/local/Cellar/go/1.4.2/libexec/src/encoding/json/encode.go:557 +0xd9 fp=0xc208156e80 sp=0xc208156e30\nencoding/json.(<em>arrayEncoder).encode(0xc20804e0d0, 0xc20808a0b0, 0x7336e0, 0xc27e79f188, 0xd7, 0x60ad00)\n    /usr/local/Cellar/go/1.4.2/libexec/src/encoding/json/encode.go:687 +0x11e fp=0xc208156ee8 sp=0xc208156e80\nencoding/json.</em>arrayEncoder.(encoding/json.encode)\u00b7fm(0xc20808a0b0, 0x7336e0, 0xc27e79f188, 0xd7, 0x282c900)\n    /usr/local/Cellar/go/1.4.2/libexec/src/encoding/json/encode.go:694 +0x58 fp=0xc208156f20 sp=0xc208156ee8\nencoding/json.(<em>sliceEncoder).encode(0xc20804e0e0, 0xc20808a0b0, 0x7336e0, 0xc27e79f188, 0xd7, 0x282c9600)\n    /usr/local/Cellar/go/1.4.2/libexec/src/encoding/json/encode.go:664 +0xb4 fp=0xc208156f58 sp=0xc208156f20\nencoding/json.</em>sliceEncoder.(encoding/json.encode)\u00b7fm(0xc20808a0b0, 0x7336e0, 0xc27e79f188, 0xd7, 0x733600)\n    /usr/local/Cellar/go/1.4.2/libexec/src/encoding/json/encode.go:673 +0x58 fp=0xc208156f90 sp=0xc208156f58\nencoding/json.(<em>arrayEncoder).encode(0xc20804e0e8, 0xc20808a0b0, 0x722ba0, 0xc20811df08, 0xd7, 0x0)\n    /usr/local/Cellar/go/1.4.2/libexec/src/encoding/json/encode.go:687 +0x11e fp=0xc208156ff8 sp=0xc208156f90\nencoding/json.</em>arrayEncoder.(encoding/json.encode)\u00b7fm(0xc20808a0b0, 0x722ba0, 0xc20811df08, 0xd7, 0x0)\n    /usr/local/Cellar/go/1.4.2/libexec/src/encoding/json/encode.go:694 +0x58 fp=0xc208157030 sp=0xc208156ff8\nencoding/json.(<em>sliceEncoder).encode(0xc20804e0f8, 0xc20808a0b0, 0x722ba0, 0xc20811df08, 0xd7, 0x0)\n    /usr/local/Cellar/go/1.4.2/libexec/src/encoding/json/encode.go:664 +0xb4 fp=0xc208157068 sp=0xc208157030\nencoding/json.</em>sliceEncoder.(encoding/json.encode)\u00b7fm(0xc20808a0b0, 0x722ba0, 0xc20811df08, 0xd7, 0x0)\n    /usr/local/Cellar/go/1.4.2/libexec/src/encoding/json/encode.go:673 +0x58 fp=0xc2081570a0 sp=0xc208157068\nencoding/json.(<em>structEncoder).encode(0xc20811c3f0, 0xc20808a0b0, 0x7ebc00, 0xc20811def0, 0xd9, 0xc208157200)\n    /usr/local/Cellar/go/1.4.2/libexec/src/encoding/json/encode.go:584 +0x2ba fp=0xc208157248 sp=0xc2081570a0\nencoding/json.</em>structEncoder.(encoding/json.encode)\u00b7fm(0xc20808a0b0, 0x7ebc00, 0xc20811def0, 0xd9, 0xc20811de00)\n    /usr/local/Cellar/go/1.4.2/libexec/src/encoding/json/encode.go:598 +0x58 fp=0xc208157280 sp=0xc208157248\nencoding/json.(<em>ptrEncoder).encode(0xc20804e108, 0xc20808a0b0, 0x7e5bc0, 0xc20811def0, 0x16, 0x0)\n    /usr/local/Cellar/go/1.4.2/libexec/src/encoding/json/encode.go:706 +0xeb fp=0xc2081572d0 sp=0xc208157280\nencoding/json.</em>ptrEncoder.(encoding/json.encode)\u00b7fm(0xc20808a0b0, 0x7e5bc0, 0xc20811def0, 0x16, 0xc20811de00)\n    /usr/local/Cellar/go/1.4.2/libexec/src/encoding/json/encode.go:711 +0x58 fp=0xc208157308 sp=0xc2081572d0\nencoding/json.(<em>encodeState).reflectValue(0xc20808a0b0, 0x7e5bc0, 0xc20811def0, 0x16)\n    /usr/local/Cellar/go/1.4.2/libexec/src/encoding/json/encode.go:299 +0x72 fp=0xc208157338 sp=0xc208157308\nencoding/json.(</em>encodeState).marshal(0xc20808a0b0, 0x7e5bc0, 0xc20811def0, 0x0, 0x0)\n    /usr/local/Cellar/go/1.4.2/libexec/src/encoding/json/encode.go:270 +0xca fp=0xc208157390 sp=0xc208157338\nencoding/json.(<em>Encoder).Encode(0xc2860214c0, 0x7e5bc0, 0xc20811def0, 0x0, 0x0)\n    /usr/local/Cellar/go/1.4.2/libexec/src/encoding/json/stream.go:160 +0x9a fp=0xc208157438 sp=0xc208157390\ngithub.com/gin-gonic/gin/render.jsonRender.Render(0x7f80e8da8190, 0xc20808a420, 0xc8, 0xc28601d7a0, 0x1, 0x1, 0x0, 0x0)\n    /Users/sosedoff/Go/src/github.com/gin-gonic/gin/render/render.go:60 +0x125 fp=0xc208157490 sp=0xc208157438\ngithub.com/gin-gonic/gin/render.(</em>jsonRender).Render(0xb25890, 0x7f80e8da8190, 0xc20808a420, 0xc8, 0xc28601d7a0, 0x1, 0x1, 0x0, 0x0)\n    <autogenerated>:2 +0xeb fp=0xc2081574d8 sp=0xc208157490\ngithub.com/gin-gonic/gin.(<em>Context).Render(0xc20808a420, 0xc8, 0x7f80e8da8168, 0xb25890, 0xc28601d7a0, 0x1, 0x1)\n    /Users/sosedoff/Go/src/github.com/gin-gonic/gin/context.go:322 +0xab fp=0xc208157550 sp=0xc2081574d8\ngithub.com/gin-gonic/gin.(</em>Context).JSON(0xc20808a420, 0xc8, 0x7e5bc0, 0xc20811def0)\n    /Users/sosedoff/Go/src/github.com/gin-gonic/gin/context.go:331 +0xf1 fp=0xc2081575a8 sp=0xc208157550\ngithub.com/sosedoff/pgweb/pkg/api.HandleQuery(0xc208116600, 0x1a, 0xc20808a420)\n    /Users/sosedoff/Go/src/github.com/sosedoff/pgweb/pkg/api/api.go:197 +0x64c fp=0xc208157718 sp=0xc2081575a8\ngithub.com/sosedoff/pgweb/pkg/api.RunQuery(0xc20808a420)\n    /Users/sosedoff/Go/src/github.com/sosedoff/pgweb/pkg/api/api.go:81 +0x1bc fp=0xc2081577a0 sp=0xc208157718\ngithub.com/gin-gonic/gin.(<em>Context).Next(0xc20808a420)\n    /Users/sosedoff/Go/src/github.com/gin-gonic/gin/context.go:114 +0x95 fp=0xc2081577d0 sp=0xc2081577a0\ngithub.com/sosedoff/pgweb/pkg/api.func\u00b7001(0xc20808a420)\n    /Users/sosedoff/Go/src/github.com/sosedoff/pgweb/pkg/api/helpers.go:54 +0x45 fp=0xc208157878 sp=0xc2081577d0\ngithub.com/gin-gonic/gin.(</em>Context).Next(0xc20808a420)\n    /Users/sosedoff/Go/src/github.com/gin-gonic/gin/context.go:114 +0x95 fp=0xc2081578a8 sp=0xc208157878\ngithub.com/gin-gonic/gin.func\u00b7006(0xc20808a420)\n    /Users/sosedoff/Go/src/github.com/gin-gonic/gin/logger.go:49 +0x68 fp=0xc208157ad8 sp=0xc2081578a8\ngithub.com/gin-gonic/gin.(<em>Context).Next(0xc20808a420)\n    /Users/sosedoff/Go/src/github.com/gin-gonic/gin/context.go:114 +0x95 fp=0xc208157b08 sp=0xc208157ad8\ngithub.com/gin-gonic/gin.func\u00b7008(0xc20808a420)\n    /Users/sosedoff/Go/src/github.com/gin-gonic/gin/recovery.go:96 +0x61 fp=0xc208157b28 sp=0xc208157b08\ngithub.com/gin-gonic/gin.(</em>Context).Next(0xc20808a420)\n    /Users/sosedoff/Go/src/github.com/gin-gonic/gin/context.go:114 +0x95 fp=0xc208157b58 sp=0xc208157b28\ngithub.com/gin-gonic/gin.func\u00b7009(0x7f80e8da64b8, 0xc20808d9a0, 0xc2082ea0d0, 0x0, 0x0, 0x0)\n    /Users/sosedoff/Go/src/github.com/gin-gonic/gin/routergroup.go:57 +0xa3 fp=0xc208157bd8 sp=0xc208157b58\ngithub.com/julienschmidt/httprouter.(<em>Router).ServeHTTP(0xc20801e6e0, 0x7f80e8da64b8, 0xc20808d9a0, 0xc2082ea0d0)\n    /Users/sosedoff/Go/src/github.com/julienschmidt/httprouter/router.go:281 +0x188 fp=0xc208157c88 sp=0xc208157bd8\ngithub.com/gin-gonic/gin.(</em>Engine).ServeHTTP(0xc20809e100, 0x7f80e8da64b8, 0xc20808d9a0, 0xc2082ea0d0)\n    /Users/sosedoff/Go/src/github.com/gin-gonic/gin/gin.go:126 +0x4a fp=0xc208157cb0 sp=0xc208157c88\nnet/http.serverHandler.ServeHTTP(0xc208034a20, 0x7f80e8da64b8, 0xc20808d9a0, 0xc2082ea0d0)\n    /usr/local/Cellar/go/1.4.2/libexec/src/net/http/server.go:1703 +0x19a fp=0xc208157d08 sp=0xc208157cb0\nnet/http.(<em>conn).serve(0xc20808c1e0)\n    /usr/local/Cellar/go/1.4.2/libexec/src/net/http/server.go:1204 +0xb57 fp=0xc208157fd8 sp=0xc208157d08\nruntime.goexit()\n    /usr/local/Cellar/go/1.4.2/libexec/src/runtime/asm_amd64.s:2232 +0x1 fp=0xc208157fe0 sp=0xc208157fd8\ncreated by net/http.(</em>Server).Serve\n    /usr/local/Cellar/go/1.4.2/libexec/src/net/http/server.go:1751 +0x35e</p>\n<p>goroutine 1 [chan receive]:\nmain.handleSignals()\n    /Users/sosedoff/go/src/github.com/sosedoff/pgweb/main.go:102 +0x10f\nmain.main()\n    /Users/sosedoff/go/src/github.com/sosedoff/pgweb/main.go:140 +0x99</p>\n<p>goroutine 5 [syscall]:\nos/signal.loop()\n    /usr/local/Cellar/go/1.4.2/libexec/src/os/signal/signal_unix.go:21 +0x1f\ncreated by os/signal.init\u00b71\n    /usr/local/Cellar/go/1.4.2/libexec/src/os/signal/signal_unix.go:27 +0x35</p>\n<p>goroutine 6 [IO wait]:\nnet.(<em>pollDesc).Wait(0xc208010920, 0x72, 0x0, 0x0)\n    /usr/local/Cellar/go/1.4.2/libexec/src/net/fd_poll_runtime.go:84 +0x47\nnet.(</em>pollDesc).WaitRead(0xc208010920, 0x0, 0x0)\n    /usr/local/Cellar/go/1.4.2/libexec/src/net/fd_poll_runtime.go:89 +0x43\nnet.(<em>netFD).accept(0xc2080108c0, 0x0, 0x7f80e8da4d48, 0xc208118490)\n    /usr/local/Cellar/go/1.4.2/libexec/src/net/fd_unix.go:419 +0x40b\nnet.(</em>TCPListener).AcceptTCP(0xc20804e248, 0x5414de, 0x0, 0x0)\n    /usr/local/Cellar/go/1.4.2/libexec/src/net/tcpsock_posix.go:234 +0x4e\nnet/http.tcpKeepAliveListener.Accept(0xc20804e248, 0x0, 0x0, 0x0, 0x0)\n    /usr/local/Cellar/go/1.4.2/libexec/src/net/http/server.go:1976 +0x4c\nnet/http.(<em>Server).Serve(0xc208034a20, 0x7f80e8da62d8, 0xc20804e248, 0x0, 0x0)\n    /usr/local/Cellar/go/1.4.2/libexec/src/net/http/server.go:1728 +0x92\nnet/http.(</em>Server).ListenAndServe(0xc208034a20, 0x0, 0x0)\n    /usr/local/Cellar/go/1.4.2/libexec/src/net/http/server.go:1718 +0x154\nnet/http.ListenAndServe(0xc20800b730, 0xe, 0x7f80e8da5170, 0xc20809e100, 0x0, 0x0)\n    /usr/local/Cellar/go/1.4.2/libexec/src/net/http/server.go:1808 +0xba\ngithub.com/gin-gonic/gin.(*Engine).Run(0xc20809e100, 0xc20800b730, 0xe, 0x0, 0x0)\n    /Users/sosedoff/Go/src/github.com/gin-gonic/gin/gin.go:131 +0x170\nmain.func\u00b7001()\n    /Users/sosedoff/go/src/github.com/sosedoff/pgweb/main.go:91 +0x18b\ncreated by main.startServer\n    /Users/sosedoff/go/src/github.com/sosedoff/pgweb/main.go:96 +0x2c9</p>\n<p>goroutine 9 [IO wait]:\nnet.(<em>pollDesc).Wait(0xc208010a00, 0x72, 0x0, 0x0)\n    /usr/local/Cellar/go/1.4.2/libexec/src/net/fd_poll_runtime.go:84 +0x47\nnet.(</em>pollDesc).WaitRead(0xc208010a00, 0x0, 0x0)\n    /usr/local/Cellar/go/1.4.2/libexec/src/net/fd_poll_runtime.go:89 +0x43\nnet.(<em>netFD).Read(0xc2080109a0, 0xc2080fa000, 0x1000, 0x1000, 0x0, 0x7f80e8da4d48, 0xc2081191d0)\n    /usr/local/Cellar/go/1.4.2/libexec/src/net/fd_unix.go:242 +0x40f\nnet.(</em>conn).Read(0xc20804e2a0, 0xc2080fa000, 0x1000, 0x1000, 0x0, 0x0, 0x0)\n    /usr/local/Cellar/go/1.4.2/libexec/src/net/net.go:121 +0xdc\nnet/http.(<em>liveSwitchReader).Read(0xc20808cb88, 0xc2080fa000, 0x1000, 0x1000, 0x4eb135, 0x0, 0x0)\n    /usr/local/Cellar/go/1.4.2/libexec/src/net/http/server.go:214 +0xab\nio.(</em>LimitedReader).Read(0xc20801fc80, 0xc2080fa000, 0x1000, 0x1000, 0x4713f8, 0x0, 0x0)\n    /usr/local/Cellar/go/1.4.2/libexec/src/io/io.go:408 +0xce\nbufio.(<em>Reader).fill(0xc208034cc0)\n    /usr/local/Cellar/go/1.4.2/libexec/src/bufio/bufio.go:97 +0x1ce\nbufio.(</em>Reader).ReadSlice(0xc208034cc0, 0x50000000000000a, 0x0, 0x0, 0x0, 0x0, 0x0)\n    /usr/local/Cellar/go/1.4.2/libexec/src/bufio/bufio.go:295 +0x257\nbufio.(<em>Reader).ReadLine(0xc208034cc0, 0x0, 0x0, 0x0, 0xc207fee300, 0x0, 0x0)\n    /usr/local/Cellar/go/1.4.2/libexec/src/bufio/bufio.go:324 +0x62\nnet/textproto.(</em>Reader).readLineSlice(0xc20811ced0, 0x0, 0x0, 0x0, 0x0, 0x0)\n    /usr/local/Cellar/go/1.4.2/libexec/src/net/textproto/reader.go:55 +0x9e\nnet/textproto.(<em>Reader).ReadLine(0xc20811ced0, 0x0, 0x0, 0x0, 0x0)\n    /usr/local/Cellar/go/1.4.2/libexec/src/net/textproto/reader.go:36 +0x4f\nnet/http.ReadRequest(0xc208034cc0, 0xc20803d860, 0x0, 0x0)\n    /usr/local/Cellar/go/1.4.2/libexec/src/net/http/request.go:598 +0xcb\nnet/http.(</em>conn).readRequest(0xc20808cb40, 0x0, 0x0, 0x0)\n    /usr/local/Cellar/go/1.4.2/libexec/src/net/http/server.go:586 +0x26f\nnet/http.(<em>conn).serve(0xc20808cb40)\n    /usr/local/Cellar/go/1.4.2/libexec/src/net/http/server.go:1162 +0x69e\ncreated by net/http.(</em>Server).Serve\n    /usr/local/Cellar/go/1.4.2/libexec/src/net/http/server.go:1751 +0x35e</p>\n<p>goroutine 10 [IO wait]:\nnet.(<em>pollDesc).Wait(0xc208108140, 0x72, 0x0, 0x0)\n    /usr/local/Cellar/go/1.4.2/libexec/src/net/fd_poll_runtime.go:84 +0x47\nnet.(</em>pollDesc).WaitRead(0xc208108140, 0x0, 0x0)\n    /usr/local/Cellar/go/1.4.2/libexec/src/net/fd_poll_runtime.go:89 +0x43\nnet.(<em>netFD).Read(0xc2081080e0, 0xc20800f000, 0x1000, 0x1000, 0x0, 0x7f80e8da4d48, 0xc2081190e0)\n    /usr/local/Cellar/go/1.4.2/libexec/src/net/fd_unix.go:242 +0x40f\nnet.(</em>conn).Read(0xc20804e2a8, 0xc20800f000, 0x1000, 0x1000, 0x0, 0x0, 0x0)\n    /usr/local/Cellar/go/1.4.2/libexec/src/net/net.go:121 +0xdc\nnet/http.(<em>liveSwitchReader).Read(0xc20808c048, 0xc20800f000, 0x1000, 0x1000, 0x4eb135, 0x0, 0x0)\n    /usr/local/Cellar/go/1.4.2/libexec/src/net/http/server.go:214 +0xab\nio.(</em>LimitedReader).Read(0xc208094160, 0xc20800f000, 0x1000, 0x1000, 0x4713f8, 0x0, 0x0)\n    /usr/local/Cellar/go/1.4.2/libexec/src/io/io.go:408 +0xce\nbufio.(<em>Reader).fill(0xc208034ae0)\n    /usr/local/Cellar/go/1.4.2/libexec/src/bufio/bufio.go:97 +0x1ce\nbufio.(</em>Reader).ReadSlice(0xc208034ae0, 0xa, 0x0, 0x0, 0x0, 0x0, 0x0)\n    /usr/local/Cellar/go/1.4.2/libexec/src/bufio/bufio.go:295 +0x257\nbufio.(<em>Reader).ReadLine(0xc208034ae0, 0x0, 0x0, 0x0, 0xc20185aa00, 0x0, 0x0)\n    /usr/local/Cellar/go/1.4.2/libexec/src/bufio/bufio.go:324 +0x62\nnet/textproto.(</em>Reader).readLineSlice(0xc20811cd50, 0x0, 0x0, 0x0, 0x0, 0x0)\n    /usr/local/Cellar/go/1.4.2/libexec/src/net/textproto/reader.go:55 +0x9e\nnet/textproto.(<em>Reader).ReadLine(0xc20811cd50, 0x0, 0x0, 0x0, 0x0)\n    /usr/local/Cellar/go/1.4.2/libexec/src/net/textproto/reader.go:36 +0x4f\nnet/http.ReadRequest(0xc208034ae0, 0xc20803d790, 0x0, 0x0)\n    /usr/local/Cellar/go/1.4.2/libexec/src/net/http/request.go:598 +0xcb\nnet/http.(</em>conn).readRequest(0xc20808c000, 0x0, 0x0, 0x0)\n    /usr/local/Cellar/go/1.4.2/libexec/src/net/http/server.go:586 +0x26f\nnet/http.(<em>conn).serve(0xc20808c000)\n    /usr/local/Cellar/go/1.4.2/libexec/src/net/http/server.go:1162 +0x69e\ncreated by net/http.(</em>Server).Serve\n    /usr/local/Cellar/go/1.4.2/libexec/src/net/http/server.go:1751 +0x35e</p>\n<p>goroutine 11 [IO wait]:\nnet.(<em>pollDesc).Wait(0xc2081081b0, 0x72, 0x0, 0x0)\n    /usr/local/Cellar/go/1.4.2/libexec/src/net/fd_poll_runtime.go:84 +0x47\nnet.(</em>pollDesc).WaitRead(0xc2081081b0, 0x0, 0x0)\n    /usr/local/Cellar/go/1.4.2/libexec/src/net/fd_poll_runtime.go:89 +0x43\nnet.(<em>netFD).Read(0xc208108150, 0xc208097000, 0x1000, 0x1000, 0x0, 0x7f80e8da4d48, 0xc208118eb0)\n    /usr/local/Cellar/go/1.4.2/libexec/src/net/fd_unix.go:242 +0x40f\nnet.(</em>conn).Read(0xc20804e020, 0xc208097000, 0x1000, 0x1000, 0x0, 0x0, 0x0)\n    /usr/local/Cellar/go/1.4.2/libexec/src/net/net.go:121 +0xdc\nnet/http.(<em>liveSwitchReader).Read(0xc20808c0e8, 0xc208097000, 0x1000, 0x1000, 0x4eb135, 0x0, 0x0)\n    /usr/local/Cellar/go/1.4.2/libexec/src/net/http/server.go:214 +0xab\nio.(</em>LimitedReader).Read(0xc2080941e0, 0xc208097000, 0x1000, 0x1000, 0x4713f8, 0x0, 0x0)\n    /usr/local/Cellar/go/1.4.2/libexec/src/io/io.go:408 +0xce\nbufio.(<em>Reader).fill(0xc208034b40)\n    /usr/local/Cellar/go/1.4.2/libexec/src/bufio/bufio.go:97 +0x1ce\nbufio.(</em>Reader).ReadSlice(0xc208034b40, 0xa, 0x0, 0x0, 0x0, 0x0, 0x0)\n    /usr/local/Cellar/go/1.4.2/libexec/src/bufio/bufio.go:295 +0x257\nbufio.(<em>Reader).ReadLine(0xc208034b40, 0x0, 0x0, 0x0, 0xc201686e00, 0x0, 0x0)\n    /usr/local/Cellar/go/1.4.2/libexec/src/bufio/bufio.go:324 +0x62\nnet/textproto.(</em>Reader).readLineSlice(0xc20811c990, 0x0, 0x0, 0x0, 0x0, 0x0)\n    /usr/local/Cellar/go/1.4.2/libexec/src/net/textproto/reader.go:55 +0x9e\nnet/textproto.(<em>Reader).ReadLine(0xc20811c990, 0x0, 0x0, 0x0, 0x0)\n    /usr/local/Cellar/go/1.4.2/libexec/src/net/textproto/reader.go:36 +0x4f\nnet/http.ReadRequest(0xc208034b40, 0xc20803d5f0, 0x0, 0x0)\n    /usr/local/Cellar/go/1.4.2/libexec/src/net/http/request.go:598 +0xcb\nnet/http.(</em>conn).readRequest(0xc20808c0a0, 0x0, 0x0, 0x0)\n    /usr/local/Cellar/go/1.4.2/libexec/src/net/http/server.go:586 +0x26f\nnet/http.(<em>conn).serve(0xc20808c0a0)\n    /usr/local/Cellar/go/1.4.2/libexec/src/net/http/server.go:1162 +0x69e\ncreated by net/http.(</em>Server).Serve\n    /usr/local/Cellar/go/1.4.2/libexec/src/net/http/server.go:1751 +0x35e</p>\n<p>goroutine 12 [IO wait]:\nnet.(<em>pollDesc).Wait(0xc208108220, 0x72, 0x0, 0x0)\n    /usr/local/Cellar/go/1.4.2/libexec/src/net/fd_poll_runtime.go:84 +0x47\nnet.(</em>pollDesc).WaitRead(0xc208108220, 0x0, 0x0)\n    /usr/local/Cellar/go/1.4.2/libexec/src/net/fd_poll_runtime.go:89 +0x43\nnet.(<em>netFD).Read(0xc2081081c0, 0xc20811b000, 0x1000, 0x1000, 0x0, 0x7f80e8da4d48, 0xc208118760)\n    /usr/local/Cellar/go/1.4.2/libexec/src/net/fd_unix.go:242 +0x40f\nnet.(</em>conn).Read(0xc20804e028, 0xc20811b000, 0x1000, 0x1000, 0x0, 0x0, 0x0)\n    /usr/local/Cellar/go/1.4.2/libexec/src/net/net.go:121 +0xdc\nnet/http.(<em>liveSwitchReader).Read(0xc20808c188, 0xc20811b000, 0x1000, 0x1000, 0xc000000004eb135, 0x0, 0x0)\n    /usr/local/Cellar/go/1.4.2/libexec/src/net/http/server.go:214 +0xab\nio.(</em>LimitedReader).Read(0xc208094260, 0xc20811b000, 0x1000, 0x1000, 0x4713f8, 0x0, 0x0)\n    /usr/local/Cellar/go/1.4.2/libexec/src/io/io.go:408 +0xce\nbufio.(<em>Reader).fill(0xc208034c00)\n    /usr/local/Cellar/go/1.4.2/libexec/src/bufio/bufio.go:97 +0x1ce\nbufio.(</em>Reader).ReadSlice(0xc208034c00, 0xa, 0x0, 0x0, 0x0, 0x0, 0x0)\n    /usr/local/Cellar/go/1.4.2/libexec/src/bufio/bufio.go:295 +0x257\nbufio.(<em>Reader).ReadLine(0xc208034c00, 0x0, 0x0, 0x0, 0xc207fee300, 0x0, 0x0)\n    /usr/local/Cellar/go/1.4.2/libexec/src/bufio/bufio.go:324 +0x62\nnet/textproto.(</em>Reader).readLineSlice(0xc20811c7e0, 0x0, 0x0, 0x0, 0x0, 0x0)\n    /usr/local/Cellar/go/1.4.2/libexec/src/net/textproto/reader.go:55 +0x9e\nnet/textproto.(<em>Reader).ReadLine(0xc20811c7e0, 0x0, 0x0, 0x0, 0x0)\n    /usr/local/Cellar/go/1.4.2/libexec/src/net/textproto/reader.go:36 +0x4f\nnet/http.ReadRequest(0xc208034c00, 0xc20803d1e0, 0x0, 0x0)\n    /usr/local/Cellar/go/1.4.2/libexec/src/net/http/request.go:598 +0xcb\nnet/http.(</em>conn).readRequest(0xc20808c140, 0x0, 0x0, 0x0)\n    /usr/local/Cellar/go/1.4.2/libexec/src/net/http/server.go:586 +0x26f\nnet/http.(<em>conn).serve(0xc20808c140)\n    /usr/local/Cellar/go/1.4.2/libexec/src/net/http/server.go:1162 +0x69e\ncreated by net/http.(</em>Server).Serve\n    /usr/local/Cellar/go/1.4.2/libexec/src/net/http/server.go:1751 +0x35e</p>\n<p>goroutine 14 [IO wait]:\nnet.(<em>pollDesc).Wait(0xc208108300, 0x72, 0x0, 0x0)\n    /usr/local/Cellar/go/1.4.2/libexec/src/net/fd_poll_runtime.go:84 +0x47\nnet.(</em>pollDesc).WaitRead(0xc208108300, 0x0, 0x0)\n    /usr/local/Cellar/go/1.4.2/libexec/src/net/fd_poll_runtime.go:89 +0x43\nnet.(<em>netFD).Read(0xc2081082a0, 0xc2080e9000, 0x1000, 0x1000, 0x0, 0x7f80e8da4d48, 0xc20800b120)\n    /usr/local/Cellar/go/1.4.2/libexec/src/net/fd_unix.go:242 +0x40f\nnet.(</em>conn).Read(0xc20804e038, 0xc2080e9000, 0x1000, 0x1000, 0x0, 0x0, 0x0)\n    /usr/local/Cellar/go/1.4.2/libexec/src/net/net.go:121 +0xdc\nnet/http.(<em>liveSwitchReader).Read(0xc20808c2c8, 0xc2080e9000, 0x1000, 0x1000, 0x4eb135, 0x0, 0x0)\n    /usr/local/Cellar/go/1.4.2/libexec/src/net/http/server.go:214 +0xab\nio.(</em>LimitedReader).Read(0xc208094380, 0xc2080e9000, 0x1000, 0x1000, 0x4713f8, 0x0, 0x0)\n    /usr/local/Cellar/go/1.4.2/libexec/src/io/io.go:408 +0xce\nbufio.(<em>Reader).fill(0xc208034d80)\n    /usr/local/Cellar/go/1.4.2/libexec/src/bufio/bufio.go:97 +0x1ce\nbufio.(</em>Reader).ReadSlice(0xc208034d80, 0xa, 0x0, 0x0, 0x0, 0x0, 0x0)\n    /usr/local/Cellar/go/1.4.2/libexec/src/bufio/bufio.go:295 +0x257\nbufio.(<em>Reader).ReadLine(0xc208034d80, 0x0, 0x0, 0x0, 0xc235cb6f00, 0x0, 0x0)\n    /usr/local/Cellar/go/1.4.2/libexec/src/bufio/bufio.go:324 +0x62\nnet/textproto.(</em>Reader).readLineSlice(0xc20811cf00, 0x0, 0x0, 0x0, 0x0, 0x0)\n    /usr/local/Cellar/go/1.4.2/libexec/src/net/textproto/reader.go:55 +0x9e\nnet/textproto.(<em>Reader).ReadLine(0xc20811cf00, 0x0, 0x0, 0x0, 0x0)\n    /usr/local/Cellar/go/1.4.2/libexec/src/net/textproto/reader.go:36 +0x4f\nnet/http.ReadRequest(0xc208034d80, 0xc2082ea000, 0x0, 0x0)\n    /usr/local/Cellar/go/1.4.2/libexec/src/net/http/request.go:598 +0xcb\nnet/http.(</em>conn).readRequest(0xc20808c280, 0x0, 0x0, 0x0)\n    /usr/local/Cellar/go/1.4.2/libexec/src/net/http/server.go:586 +0x26f\nnet/http.(<em>conn).serve(0xc20808c280)\n    /usr/local/Cellar/go/1.4.2/libexec/src/net/http/server.go:1162 +0x69e\ncreated by net/http.(</em>Server).Serve\n    /usr/local/Cellar/go/1.4.2/libexec/src/net/http/server.go:1751 +0x35e</p>\n<p>goroutine 15 [chan receive]:\ndatabase/sql.(*DB).connectionOpener(0xc20808d4a0)\n    /usr/local/Cellar/go/1.4.2/libexec/src/database/sql/sql.go:589 +0x4c\ncreated by database/sql.Open\n    /usr/local/Cellar/go/1.4.2/libexec/src/database/sql/sql.go:452 +0x31c\n```</p>", "<p>Thanks for the examples, i'll try to reproduce and hopefully fix the problem. </p>", "<p>I ran all your example and havent gotten a single crash. Using PostgreSQL 9.3.\nHere's the profiler log (start with <code>-d</code> flag):</p>\n<p><code>[DEBUG] Goroutines: 17, Mem used: 643597512 (613 mb), Mem acquired: 838741264 (799 mb)\n[GIN] 2015/08/01 - 15:38:09 | 200 |   1.227644ms | 127.0.0.1:53274 |   GET     /static/css/bootstrap.css\n[GIN] 2015/08/01 - 15:38:09 | 200 |    208.369\u00b5s | 127.0.0.1:53296 |   GET     /static/css/app.css\n[GIN] 2015/08/01 - 15:38:09 | 200 |    484.422\u00b5s | 127.0.0.1:53298 |   GET     /static/css/font-awesome.css\n[GIN] 2015/08/01 - 15:38:12 | 200 |   1.396976ms | 127.0.0.1:53298 |   GET     /api/tables/test_table/rows\n[GIN] 2015/08/01 - 15:38:12 | 200 |  43.729672ms | 127.0.0.1:53274 |   GET     /api/tables/test_table/info\n[GIN] 2015/08/01 - 15:38:20 | 200 |   1.074291ms | 127.0.0.1:53274 |   GET     /api/tables/test_table/rows\n[GIN] 2015/08/01 - 15:38:20 | 200 |    797.674\u00b5s | 127.0.0.1:53298 |   GET     /api/tables/test_table/info\n[GIN] 2015/08/01 - 15:38:21 | 200 |     448.68\u00b5s | 127.0.0.1:53298 |   GET     /api/tables/schema_migrations/rows\n[GIN] 2015/08/01 - 15:38:21 | 200 |    980.176\u00b5s | 127.0.0.1:53274 |   GET     /api/tables/schema_migrations/info\n[DEBUG] Goroutines: 17, Mem used: 644277808 (614 mb), Mem acquired: 838741264 (799 mb)\n[GIN] 2015/08/01 - 15:38:39 | 400 |    266.471\u00b5s | 127.0.0.1:53274 |   POST    /api/query\n[DEBUG] Goroutines: 17, Mem used: 644285704 (614 mb), Mem acquired: 838741264 (799 mb)\n[GIN] 2015/08/01 - 15:39:19 | 200 |   2.653159ms | 127.0.0.1:53302 |   POST    /api/query\n[GIN] 2015/08/01 - 15:39:26 | 200 |   2.533056ms | 127.0.0.1:53304 |   POST    /api/query\n[DEBUG] Goroutines: 18, Mem used: 53719480 (51 mb), Mem acquired: 838741264 (799 mb)\n[GIN] 2015/08/01 - 15:39:37 | 200 | 5.243092543s | 127.0.0.1:53306 |   POST    /api/query\n[DEBUG] Goroutines: 18, Mem used: 1910728640 (1822 mb), Mem acquired: 2776425168 (2647 mb)\n[GIN] 2015/08/01 - 15:40:13 | 200 | 29.986914504s | 127.0.0.1:53308 |   POST    /api/query</code></p>\n<p>I ran the queries you provided and also these two:</p>\n<p><code>SELECT * FROM test_table\nSELECT * FROM test_table2</code></p>\n<p>Im not sure, whats the expected behavior here? If you're running out of memory there's not much could be done, maybe rescue from that exception and show an error message to the user. Let me know. </p>", "<p>Closing due to no response</p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/93", "title": "Use container-based travis infrastructure", "status": "closed", "labels": [], "priority": null, "description": ["", []]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/92", "title": "Support both postgresql:// and posgres:// url prefix", "status": "closed", "labels": [], "priority": null, "description": ["", []]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/91", "title": "Update pg dependency to latest", "status": "closed", "labels": [], "priority": null, "description": ["", []]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/90", "title": "Some app.json updates to consider", "status": "closed", "labels": [], "priority": null, "description": ["<ol>\n<li>Consider using the secret generator so that deploys don't default to a known secret.</li>\n<li>tag it with golang</li>\n</ol>", []]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/89", "title": "Update app.json", "status": "closed", "labels": [], "priority": null, "description": ["<p>This is no longer needed as we now officially support Go: https://blog.heroku.com/archives/2015/7/7/go_support_now_official_on_heroku</p>", []]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/88", "title": "schema prefix `postgresql://`", "status": "closed", "labels": [], "priority": null, "description": ["<p><code>postgresql://</code> is the recommended prefix according to PostgreSQL's documentation: http://www.postgresql.org/docs/9.3/static/libpq-connect.html#LIBPQ-CONNSTRING But pg web only supports <code>postgres://</code></p>", ["<p>Support was added to lib/pq <a href=\"https://github.com/lib/pq/compare/ec83aaae1acf89e469d8e5cb19a70c4800ab9513%5E...e51fec16be7847e24d0270a5ce1f95cf2482b5e9\">in April</a>.</p>", "<p>Implemented in master.</p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/87", "title": "Update index.html", "status": "closed", "labels": [], "priority": null, "description": ["<p>Field password must type password</p>", []]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/86", "title": "v0.6.0 OSX (amd64) broken", "status": "closed", "labels": [], "priority": null, "description": ["<p>Hi!</p>\n<p>Two obvious issues:</p>\n<p>1) the 0.6.0 tarball's binary reports: Pgweb v0.5.2 (git: 79bf430dee865dbd2be65e7b95a16332f64e826c)\n2) Asset static/index.html can't read by error: Error reading asset static/index.html at /Users/sosedoff/Go/src/github.com/sosedoff/pgweb/static/index.html: open /Users/sosedoff/Go/src/github.com/sosedoff/pgweb/static/index.html: no such file or directory</p>\n<p>And the actual 0.5.2 silently doesn't list any tables on the left (pg 9.4.2).</p>", ["<p>Hi @tcn,</p>\n<p>Thanks for your report. Im aware of 0.6.0 version issue and will fix soon.\nRegarding the second issue, i think this might have been a problematic binary build.. I'll need to redo it\nto fix the problem. </p>\n<p>What about the empty tables list ? Do you see any errors in the console? Alternatively you could run a direct request against api: GET http://localhost:808(or 8081)/api/tables </p>", "<p>Hey,</p>\n<p>Nope, console LGTM. Here's the complete output (incl. the GET which returns \"[]\"):</p>\n<p><code>$ ./pgweb_darwin_amd64 --user foo --host localhost --db foo --pass foo\nPgweb version 0.5.2\nConnecting to server...\nChecking tables...\nStarting server...\nTo view database open http://localhost:8080 in browser\n[GIN] 2015/06/05 - 17:49:27 | 200 |    237.966\u00b5s | 127.0.0.1:63115 |   GET     /\n[GIN] 2015/06/05 - 17:49:28 | 200 |  33.348966ms | 127.0.0.1:63117 |   GET     /static/css/font-awesome.css\n[GIN] 2015/06/05 - 17:49:28 | 200 |  20.655069ms | 127.0.0.1:63115 |   GET     /static/css/app.css\n[GIN] 2015/06/05 - 17:49:28 | 200 |  20.550049ms | 127.0.0.1:63119 |   GET     /static/css/bootstrap.css\n[GIN] 2015/06/05 - 17:49:28 | 200 |  17.738562ms | 127.0.0.1:63121 |   GET     /static/js/jquery.js\n[GIN] 2015/06/05 - 17:49:28 | 200 |  15.190712ms | 127.0.0.1:63123 |   GET     /static/js/ace.js\n[GIN] 2015/06/05 - 17:49:28 | 200 |   5.865284ms | 127.0.0.1:63125 |   GET     /static/js/ace-pgsql.js\n[GIN] 2015/06/05 - 17:49:28 | 200 |    368.272\u00b5s | 127.0.0.1:63117 |   GET     /static/js/app.js\n[GIN] 2015/06/05 - 17:49:28 | 200 |   1.541463ms | 127.0.0.1:63123 |   GET     /api/connection\n[GIN] 2015/06/05 - 17:49:28 | 200 |    1.32848ms | 127.0.0.1:63123 |   GET     /api/tables\n[GIN] 2015/06/05 - 17:49:28 | 200 |   1.871071ms | 127.0.0.1:63123 |   GET     /static/fonts/fontawesome-webfont.woff\n[GIN] 2015/06/05 - 17:49:42 | 200 |   1.413779ms | 127.0.0.1:63123 |   GET     /api/tables\n[GIN] 2015/06/05 - 17:49:42 | 404 |         86ns | 127.0.0.1:63123 |   GET     /favicon.ico</code></p>", "<p>Do you have any tables in public schema ?</p>", "<p>No, the tables are actually in a dedicated schema. Found no way to specify it, though.</p>", "<p>I see. Yeah, right now pgweb only supports public schema but im working on having multiple schema support as well. Dont know ETA, but hopefully in the next version or two. </p>", "<p>@tcn could you please try https://github.com/sosedoff/pgweb/releases/tag/v0.6.1 binary ?</p>", "<p>@sosedoff I just tried <code>v0.6.1</code>. Seems to work. But at first I installed pgweb via <code>brew cask install pgweb</code>, which installed <code>v0.5.2</code>, and I encountered the same problem.</p>", "<p>There was an issue with binary packaging that i did not notice so i'll have more clean build process in the future. If 0.6.1 works fine i'll go ahead and push that to homebrew. </p>", "<p>0.6.1 is released to homebrew cask repo</p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/85", "title": "Run selected text. Implements sosedoff/pgweb#78.", "status": "closed", "labels": [], "priority": null, "description": ["<p>In the Query tab, only run the selected text. If nothing selected, run all text in the editor.</p>", ["<p>Thanks</p>", "<p>Next time make sure to include updated <code>bindata.go</code>, which could be regenerated with <code>make assets</code></p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/84", "title": "Secure connection with SSL", "status": "closed", "labels": [], "priority": null, "description": ["<p>I would love to leave pgweb running for quick access any-time I need it. However, I don't see a way to secure the connection to the web interface using HTTPS. In my case I have a wildcard cert that will work perfect if I could just tell pgweb to use it somehow.</p>\n<p>Is there any current way to secure the connection to pgweb with HTTPS?</p>\n<p>Any possibility of this being added in the future?</p>", ["<p>Hi. You could use nginx as a proxy in front of pgweb, configuration in this case would super simple\nif you already have your ssl certificate. The reason why ssl is not supported out of the box is because\nof the same lack of ssl support in <a href=\"https://github.com/gin-gonic/gin\">gin</a> web framework used by pgweb. </p>", "<p>ah, nginx proxy! I was looking for some way to handle it with my current stack, forgot it does proxying. Thanks for the recommendation.</p>\n<p>This issue may help others too searching at least. Will close up since that handles what I need.</p>", "<p>For anyone else wanting this, I setup an nginx site with this config:</p>\n<p>```</p>\n<p>server {\n    listen [::]443 ssl spdy;\n    listen 443 ssl spdy;</p>\n<pre><code>servername sub.site.com;\n\ninclude h5bp/directive-only/ssl.conf; # From the H5BP Nginx Server Configs, very handy stuff.\n\nlocation / {\n    proxy_pass http://localhost:9999; # set port/domain to whatever you run pgweb bound to.\n    proxy_set_header Host $host;\n    proxy_set_header X-Real-Ip $remote_addr;  # Not even sure if these last two are needed, just pulled from the nginx wiki example.\n}\n</code></pre>\n<p>}</p>\n<p>```</p>\n<p>Boom, nginx proxying to pgweb just fine with full SSL!</p>", "<p>Thanks! I will add that to wiki</p>", "<p>Any idea how to do it using apache2?</p>", "<p>@kurotsukikaitou Just search for Apache reverse proxy instructions. That's all my nginx config is doing.</p>", "<p>@kurotsukikaitou also keep in mind that running pgweb on your production servers is not recommended for security reasons. </p>", "<p>Well.. I planning just running it only when I need to access it. Otherwise, I'll kill the process.</p>", "<p>There are a couple of options to consider if you need to connect to your production database:\n1. Setup pgweb username and password (there's no default), and perhaps a read-only database user.\n2. If you're using ssh keys to connect to the server you can use pgweb's built-in ssh tunnel feature or using native ssh client (https://github.com/sosedoff/pgweb/wiki/SSH-Gateway)</p>", "<p>Protect it with a password (htaccess) and it should be fine unless it gets brute forced. Otherwise I don't see any other potential hole from it in this context as to any other part of your server getting attacked.</p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/83", "title": "Sort columns", "status": "closed", "labels": [], "priority": null, "description": ["<p>I had a go at this.</p>\n<p>I'm not sure if the Angular version is going anywhere. Anyways everything was setup on the backend so the code change is quite minimal.</p>\n<p>What do you think?</p>", ["<p>:+1: </p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/82", "title": "Query activity", "status": "closed", "labels": [], "priority": null, "description": ["", []]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/81", "title": "UI: Moving from SQL Query to Structure leaves query editor on screen.", "status": "closed", "labels": [], "priority": null, "description": ["<p>Steps to reproduce:\n1. Choose a table.\n2. Choose SQL Query.\n3. Choose Structure.</p>\n<p>Query editor stays on the screen. Moving to some other tab and back to Structure fixes it.</p>", ["<p>Thanks, i'll fix it. </p>", "<p>This is fixed in master.</p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/80", "title": "Bookmark.Port expected string.", "status": "closed", "labels": [], "priority": null, "description": ["<p>According to <a href=\"https://github.com/sosedoff/pgweb/wiki/Server-Connection-Bookmarks\">wiki</a>, port in bookmark file should be int, but it fails with</p>\n<p><code>Type mismatch for 'main.Bookmark.Port': Expected string but found 'int64'.</code></p>\n<p>Passing it as string instead works fine.\nEither wiki is wrong or code is wrong :-).</p>", ["<p>Thanks for reporting. I will check. </p>", "<p>All bookmark attributes should be encoded as strings, i corrected the wiki page. Thanks!</p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/79", "title": "Gin 0.5.0", "status": "closed", "labels": [], "priority": null, "description": ["", []]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/78", "title": "Run query for selected text", "status": "closed", "labels": [], "priority": null, "description": ["<p>When text is selected, only run the selected text as a query. Otherwise use the current behaviour, and run all entered text as a query.</p>\n<p>I use the query tab as a scratchpad - adding queries or editing old ones as I navigate a problem. Currently I will comment out all other sql statments, run the query then comment it out and uncomment a different sql statement.</p>", ["<p>I dont think this is a big deal. If you're doing lots of prototyping this is the cost you've gotta pay.\nImagine doing prototyping using a plain-old <code>psql</code>, you cant just \"select\" a query and run it. So unless you have any code to support that i wont be working on this.</p>", "<p>Yeah I agree. Meant this is a minor feature suggestion. If you are open to a pull request I can get it going. If not, no worries - thanks for a great tool.</p>", "<p>Im alway open for a good PR!</p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/77", "title": "Uppercase table names must be quoted", "status": "closed", "labels": [], "priority": null, "description": ["<p>This may be connected to both #29 and #16 (if not the same issue). I have a table that starts with a capital letter (eg: \"Users\") and if I try to do a query 'SELECT * FROM Users' it complains about there being no \"users\" table. However if I do 'SELECT * FROM \"Users\"' then it works.</p>\n<p>I don't have a lot of experience with pgsql (come from a mysql background) and I rarely use uppercase in my table names (the ORM I'm using did it). The structure tab works just fine, it's just queries that are effected. Again, this may be expected behavior but I wanted to open an issue to make sure. Thanks!</p>", ["<p>Which pgweb version are you using? Also on which OS ?</p>", "<p>Hello, @joshstrange I think this may be your case http://blog.lerner.co.il/quoting-postgresql/ </p>", "<p>Closing this issue unless there's a problem. No feedback received. </p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/76", "title": "Getting \"user: Current not implemented on linux/amd64\" trying to connect over SSL", "status": "closed", "labels": ["bug"], "priority": null, "description": ["<p>Tried to connect using the 'Schema' tab. Specified the <code>ssl=true</code>, <code>sslcert</code> and <code>sslkey</code> in the URI. Running <code>Linux &lt;name&gt; 3.13.0-22-generic #44-Ubuntu SMP Wed Apr 2 20:05:40 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux</code></p>\n<p><strong>To reproduce</strong>:\n1. Start process using <code>./pgweb_linux_amd64</code>\n2. Point browser to http://localhost:8080 and select the 'Schema' tab.\n3. Enter url in the format <code>postgresql://user@devenv/appdb?ssl=true&amp;sslcert=/path/to/postgresql.crt&amp;sslkey=/path/to/postgresql.key</code></p>\n<p>The error seems to be (after some quick Googling) to be related to a Go error: http://stackoverflow.com/questions/20609415/cross-compiling-user-current-not-implemented-on-linux-amd64</p>\n<p>Please confirm if this is the case - I haven't tried to build from source though.</p>", ["<p>@insectatorious Issue confirmed.</p>\n<p>I was planning on getting rid of <code>os/user</code> anyway, might as well do it now. The only reason why we need <code>os/user</code> is to figure out current user for localhost connections, for remote connection its most likely that user is something else than <code>postgres</code>.</p>", "<p>@insectatorious Oh btw, i see that your url format is invalid: <code>postgresql://</code>. It should start with <code>postgres://</code>. Format checking is already fixed in master, but new release is not out yet. So if you specify a proper url prefix it should work as you have user defined. Used detection from os settings only happens when user is not provided. </p>", "<p>@sosedoff Doh! You are correct sir. Fixed it and it's working like a charm! Thanks.</p>", "<p>Closing this issue since it was fixed in \"lib/pq\" repo. pgweb will also try to fetch user from OS environment first. </p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/75", "title": "Add file extension when exporting query results to csv", "status": "closed", "labels": ["enhancement"], "priority": null, "description": ["", []]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/74", "title": "Fixed typo in Readme.md", "status": "closed", "labels": [], "priority": null, "description": ["", []]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/73", "title": "Daemon Mode", "status": "closed", "labels": [], "priority": null, "description": ["<p>An argument for forking pgweb to the background would be great</p>", ["<p>Are you using pgweb on osx ? If so, there's an example plist available - https://github.com/sosedoff/pgweb/wiki/Plist</p>", "<p>Daemon mode is not something that i would personally include into codebase at this time.</p>\n<p>This project aims to run on multiple platforms and myself being fairly new to golang i don't see any \nsimple way of implementing cross-platform daemonized version. There are plenty of alternatives\nthat could handle the task of controlling background execution. I could name a few examples: init.d (linux), upstart (linux), supervisor (x-platform), launchd (osx). On linux you can even use nohup to run\nprocess in background.</p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/72", "title": "Schema support using regclass", "status": "closed", "labels": [], "priority": null, "description": ["<p>See #14.\n- Button to refresh table list on demand\n- List tables and views based on the current search path\n- Use regclass to generate properly quoted table identifiers based on the search path</p>\n<p>Issues:\n- Button placement and styling. I just plopped some bootstrap around a <a href=\"http://www.fileformat.info/info/unicode/char/21bb/index.htm\">\u21bb</a>.\n- Table names. Regclass does <a href=\"http://www.postgresql.org/docs/current/static/datatype-oid.html\">the \"right thing\"</a>, prepending the schema only when absolutely necessary (i.e. only for tables with overlapping names AND only for schemata later in the search path.) For a user with multiple schemata and little overlap, this may be confusing to see... Though it matches the logic of unqualified lookups... User feedback may be necessary/best to handle this well.\n- Order of table names. Given the above, I didn't [yet] pick anything by which to order the list of tables. When using search path, the most reasonable to me would be schama-search-path-order followed by alphabetical table name. Thoughts?</p>", ["<blockquote>\n<p>Button to refresh table list on demand</p>\n</blockquote>\n<p>+1, people were asking about this feature.</p>\n<blockquote>\n<p>List tables and views based on the current search path</p>\n</blockquote>\n<p>This could take some time to test. Could you provide a test sql file that i can just load into a new database? I've been thinking about including a sample sql file that will create tables in multiple schemas.</p>\n<blockquote>\n<p>Use regclass to generate properly quoted table identifiers based on the search path\nI dont see any breaking changes, so its good. </p>\n<p>Button placement and styling.</p>\n</blockquote>\n<p>No worries, i can restyle the button to make it fit the ui</p>\n<blockquote>\n<p>Order of table names.</p>\n</blockquote>\n<p>My guess is that tables should be ordered by name asc. </p>", "<p>In addition to all above, i'd really appreciate if you can provide a test sql file and instructions on how you test all new changes. </p>", "<p>Is this still work-in-progress ?</p>", "<p>:+1: \nIm really interested in seeing this feature :-) </p>", "<p>:+1:   </p>", "<p>Any news on this being pulled in? :smile: </p>", "<p>Yes, eventually its going to make into master, but its a slow progress so i cant guarantee any ETA's at this time. </p>", "<p>@sosedoff Cheers :+1: </p>", "<p>Can you please merge this PR? Seems like a lot of people are waiting for this feature.</p>", "<p>yes,also waiting this feature</p>", "<p>Closing this obsolete PR, multiple schemas are implemented in master and will be part of the upcoming release.</p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/71", "title": "Why not use gin's built-in router.Static to serve static files?", "status": "closed", "labels": [], "priority": null, "description": ["<p>I'm still new to golang but I'm genuine curious here, is it because resource consumption of http.FileServer?\nhttp://godoc.org/github.com/gin-gonic/gin#RouterGroup.Static</p>\n<p>Looks like with current implementation only folder depth of 2 is supported and your have to \"assert\" content type, seems unnecessary work to me.</p>\n<p>Thanks for the great work.</p>", ["<p>pgweb does not server any assets from filesystem (unless in dev mode) so it cant use gin's static \nroute.</p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/70", "title": "Bookmark server connections", "status": "closed", "labels": [], "priority": null, "description": ["<p>Another great addition to the pgweb could be \"bookmarked\" connections. This will provide a way to\nquickly server connection settings. Most native database managers do that and its very helpful. </p>\n<p>Few options to consider:</p>\n<p><strong>Store bookmarks in cookie/localstorage</strong>\n- Pros: easy implementations\n- Cons: no real persistence</p>\n<p><strong>Store bookmarks in a local file</strong></p>\n<p>File could be something like <code>~/.pgweb_bookmarks</code>. Not sure about how would this work on\nWindows machines. As for file format, it could be either YAML or TOML. Im leaning towards\nTOML since it has format very similar to INI files. However, JSON does really make sense to use,\nits consumed by browser but it does not have great readability. \n- Pros: opens doors for more customizations, easy implementation\n- Cons: syntax/formatting</p>\n<p>Proposed file format (TOML):</p>\n<p>``` toml</p>\n<h1>If url is defined it takes precedence</h1>\n<p>url = \"postgres://...\"</p>\n<h1>Regular server connection settings</h1>\n<p>host = \"localhost\"\nport = 5432\nuser = \"username\"\ndatabase = \"dbname\"\nssl_mode = \"disable\"\n```</p>\n<p>Would like to get some feedback if anyone is interested.</p>", ["<p>TOML-based bookmarks are implemented in master as read-only. \nWiki page: https://github.com/sosedoff/pgweb/wiki/Server-bookmarks</p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/69", "title": "CREATE TABLE should refresh table listing", "status": "closed", "labels": [], "priority": null, "description": ["<p>When I use pgweb to run a CREATE TABLE command, the response is that no records were found (which makes sense, I wasn't retrieving anything with the query).</p>\n<p>It would be cool if the tool could tell that I was creating a table, and refresh the table listing (and perhaps focus on the newly created table?).</p>", ["<p>A DROP TABLE / ALTER TABLE command would also be good candidates for updating the table listing.</p>", "<p>Added in 742384327c3e18b6cc4bcb4866988cdeec9f69e7\nShould be available in the next binary release. Thanks.</p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/68", "title": "Do not include files ignored by Git in compiled assets", "status": "closed", "labels": [], "priority": null, "description": ["<p>Twice I nearly committed Vim swapfiles into <code>bindata.go</code>.</p>\n<p>This automatically adds files that exist under <code>static/</code> and <a href=\"https://www.kernel.org/pub/software/scm/git/docs/git-ls-files.html\">match user- and project-configured ignores</a> to the ignore list of <code>go-bindata</code>.</p>\n<p><code>\u279c make assets \ngo-bindata   -ignore=static/js/[.]app[.]js[.]swp \\\n                -ignore=[.]gitignore -ignore=[.]gitkeep static/...</code></p>", ["<p>Will this work on windows machines ?</p>", "<p>Ah, not sure. I'm not familiar with tools available in Windows powershell (?).</p>\n<p>If they have <code>make</code>, they probably have <code>awk</code>?</p>", "<p>Im not sure either. </p>\n<p>Btw, could this <code>shell git ls-files -io --exclude-standard static/ | awk '{ gsub(/[.]/, \"[.]\"); printf \"%s\", \" -ignore=\" $$0 }'</code> be extract out of task into var, like <code>BINDATA</code>, for the sake of readability ? </p>", "<p>I thought of doing that, but what if some other target generates/leaves some file that should be ignored?</p>", "<p>OTOH, a var like that could be overridden by the environment.</p>\n<p>I'll do that.</p>", "<ul>\n<li>Renamed existing variable</li>\n<li>New variable</li>\n<li><code>sed</code> instead of <code>awk</code></li>\n</ul>\n<p>My concern about when the variable is expanded was unfounded. This variable is expanded each time it is used.</p>", "<p>Is this good to go ?</p>", "<p>Yep. Works fine for me in bash.</p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/67", "title": "Build queries using parameters", "status": "closed", "labels": [], "priority": null, "description": ["<p>Some changes leading up to support for multiple schemata.</p>\n<p>The built-in queries will get more complex as we check schema name in addition to table name, so I did the following:\n1. Remove \"background\" queries from the history. They are becoming longer than one line and are probably not interesting to end users. I can revert this change if you like.\n2. Move queries inline. It seemed appropriate to keep the SQL near its arguments for a variety of reasons, and none of the constants were used more than once. I can revert this change if you like.\n3. Search path in connection info. The configured search path is important when dealing with multiple schemata, and it was easy to add. It is a Postgres <code>text[]</code>, so it renders with braces and commas, e.g. <code>{a,b,c}</code>. This seemed \"good enough\" to me, but if you like, we can find a nicer way to display this.</p>\n<p>It's not possible to pass an identifier as a query parameter, so <code>SELECT COUNT(*) FROM $1</code> doesn't work. I went ahead and changed this query to read from statistics since it falls down on large tables anyway. I changed the label in the UI to reflect this difference, but did not regenerate <code>bindata.go</code>. Shall I add that to this PR?</p>", ["<ol>\n<li><code>Remove \"background\" queries from the history.</code> -  True, no need to record internal queries.</li>\n<li><code>Move queries inline</code> - I would prefer having a single file that contains all query statements. They don't have to be defined as constants and could be formatted as multiline strings.</li>\n<li><code>SELECT COUNT(*) FROM</code> fix is great, thanks</li>\n<li>Yes, <code>bindata.go</code> should be updated every time assets are changed</li>\n</ol>", "<ol>\n<li>Fixed in 96d7d6eb9471ebee520440fdd5ebfad58cdb0a36</li>\n<li>Fixed in 159f589c0c1ec30346a5b4fda60826e42707dcdd</li>\n</ol>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/66", "title": "Connect using SSH tunnel", "status": "closed", "labels": [], "priority": null, "description": ["<p>Everything works fine until you want to connect to a postgres server that sits behind firewall. </p>\n<p>The only option in this case is to use ssh tunnels. In order to make it work, user has to use <code>ssh</code> to establish connection with a remote machine. Example:</p>\n<p><code>ssh -Ng -L 5433:localhost:5432 user@remotehost.com</code></p>\n<p>This should work on linux and osx but not on windows, which does not have a standard <code>ssh</code> \nbinary available. I've been digging around to find any good and stable example on how to run \nssh tunnel programmatically with Go. No luck yet. </p>\n<p>Having ability to connect to a behind-firewall postgres instance is very useful and i tend to just go ahead\nand implement \"experimental\" support for this feature using good old <code>exec.Command</code> that'll spawn <code>ssh</code>\nand establish a tunnel. I have already tried this solution and it works great (except when internet connection is shitty), client code that communicates with postgres server does not have to be changed at all. But it makes <code>pgweb</code> environment-dependent, which is not great.</p>\n<p>Would like to get some feedback or even examples on how to get this feature done.</p>\n<p>@cbandy @pvh any thoughts?</p>", ["<p>Can't someone who knows how to tunnel just set it up before running pgweb? I think it is normal to setup a tunnel or SOCKS proxy separately from a client. Do other pg clients make this easy?\n1. We could write the feature to support <code>ssh</code> only.\n2. We could allow the user could configure any executable to build the tunnel. ~~It should print <code>host:port</code> or <code>host port</code> when ready.~~</p>\n<p>I've only used Putty on Windows, and it was a long time ago. It supported SOCKS, at least.</p>", "<p>Back when I was a Windows user there was a pretty standard tool for solving\nthis problem that most people used to create ssh tunnels. I wish I could\nremember what it was called. Maybe I used to use Putty for that? Could be.</p>\n<p>I agree with Chris' assessment which is that merging this functionality\ninto pgweb would be weird. Maybe not full-on wrong, but not really high on\nthe list of things I'd expect such a system to do. I'd probably start with\na documentation fix and go from there, particularly since each platform\nwill be different and probably get more different over time.</p>\n<p>-p</p>\n<p>On Fri, Nov 21, 2014 at 12:59 AM, Chris Bandy notifications@github.com\nwrote:</p>\n<blockquote>\n<p>Can't someone who knows how to tunnel just set it up before running pgweb?\nI think it is normal to setup a tunnel or SOCKS proxy separately from a\nclient. Do other pg clients make this easy?\n1. We could write the feature to support ssh only.\n2. We could allow the user could configure any executable to build the\n   tunnel. It should print host:port or host port when ready.</p>\n<p>I've only used Putty on Windows, and it was a long time ago. It supported\nSOCKS, at least.</p>\n<p>\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/sosedoff/pgweb/issues/66#issuecomment-63942283.</p>\n</blockquote>", "<p>Yeah, i posted instructions on how to connect via ssh gateway. But the reason why i want to merge this functionality into pgweb is to simplify usage. Go has ssh support so it just makes sense to implement native support. </p>", "<p>Closing this issue for now. SSH support might be added some day. </p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/65", "title": "Show pgweb version on start", "status": "closed", "labels": [], "priority": null, "description": ["", []]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/64", "title": "Consider using thrust to make this a standalone cross-platform GUI app?", "status": "closed", "labels": [], "priority": null, "description": ["<p>https://github.com/breach/thrust</p>\n<p>It seems that <code>pgweb</code> could use that to become a GUI app.</p>\n<p>It's up to you to decide if the benefits (convenience?) outweigh the cons (heavier download? additional complexity?), I'm only suggesting you look into it.</p>", ["<p>Interesting idea. Revisit later thus closing the issue for now. </p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/63", "title": "update docker demo", "status": "closed", "labels": [], "priority": null, "description": ["<p>update docker instructions in README</p>\n<p>update Dockerfile &amp; add .dockerignore</p>", ["<p>I don't know Docker very well. Can you explain the changes to Dockerfile?</p>", "<p>@cbandy </p>\n<p>docker is an engine. or simply, you can just image the Docker like a virtrual machine\n1. change to get go-bindata:\n   I try the previous docker demo.\n   It show Error reading asset static/index.html at /my-path-on-my-host/to/static/index.html: open /my-path-on-my-host/to/static/index.html: no such file or directory.\n   I think it needs to be reconvert the static file during buiding the docker image.\n   So, I change it with the Make file command.\n2. make build-asserts:\n   You are right. And I will fix it.</p>", "<p>Im closing this because i'm unable to reproduce any issues described in the PR. After a small change to the docker file here https://github.com/sosedoff/pgweb/commit/41cf9cf205bed667e040560c66e6cdd7fd8cc088 i was able to build an image from scratch and start container without any problems. There's also no need to build assets because they are baked into the repository now. </p>", "<p>@sosedoff \nfor the Error reading asset static/index.html problem.  If it is caused by different path of $GOPATH, when I build the project on my own: using  make clean  &amp;&amp; make buid &amp;&amp; make dev.</p>", "<p>Command <code>make dev</code> should only be used on a dev workstation as it modifies the <code>bindata.go</code> file to read assets from files.</p>", "<p>@sosedoff got it</p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/62", "title": "Favicon", "status": "closed", "labels": [], "priority": null, "description": ["<p>Would be really nice to have a clean favicon for pinned tabs and such. I'm no icon designer, but thought I'd mention.</p>", ["<p>There's a favicon right now, but new version is not released yet.</p>\n<p>Icon: https://github.com/sosedoff/pgweb/blob/master/static/img/icon.png</p>", "<p>Sweet!</p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/61", "title": "connection specification problems", "status": "closed", "labels": [], "priority": null, "description": ["<p>This looks really cool, but I can't connect.</p>\n<p>First attempt:</p>\n<p><code>./pgweb_darwin_amd64 --url=postgresql://myhost:5433/mydb\nConnecting to server...\nError: missing \"=\" after \"postgresql://myhost:5433/mydb\" in connection info string\"</code></p>\n<p>Admittedly, it is documented that URLs start with <code>postgres:</code>, not <code>postgresql:</code>, but it's an easy mistake to make, because libpq supports both.  But in any case it shouldn't attempt to interpret a URL it cannot parse as a connection string and then give a bogus error message.</p>\n<p>Next try:</p>\n<p><code>./pgweb_darwin_amd64 --url=postgres://myhost:5433/mydb\nConnecting to server...\nError: pq: SSL is not enabled on the server</code></p>\n<p>I know the Go <code>lib/pq</code> is very particular about SSL, but the help does indicate that it is off by default:</p>\n<p><code>--ssl=       SSL option (disable)</code></p>\n<p>But nothing of the sort</p>\n<p><code>./pgweb_darwin_amd64 --url=postgres://myhost:5433/mydb --ssl=disable</code></p>\n<p>works.</p>\n<p>OK, so maybe in order to be able to set the SSL option, I cannot use URLs.  Next try:</p>\n<p><code>./pgweb_darwin_amd64 --host=myhost --port=5433 --db=mydb --ssl=disable\nConnecting to server...\nError: pq: LDAP authentication failed for user \"postgres\"</code></p>\n<p>So that worked, but why does it default the user to \"postgres\"?  It ought default to my current user name.</p>\n<p>Anyway, next try:</p>\n<p><code>./pgweb_darwin_amd64 --host=myhost --port=5433 --db=mydb --ssl=disable --user=\"Peter Eisentraut\"\nConnecting to server...\nError: missing \"=\" after \"Eisentraut\" in connection info string\"</code></p>\n<p>So apparently it needs some quoting when it assembles the connection string?</p>", ["<p>Are you using pgweb binary from downloads ?</p>", "<p>@petere ping</p>", "<p>Added a note about invalid postgresql connection string format. Closing this since there's no response regarding my question. </p>", "<p>Yes.</p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/60", "title": "Unhelpful error message on unsupplied credentials", "status": "closed", "labels": [], "priority": null, "description": ["<p>When invoking the binary without passing any options, the error message is</p>\n<p><code>Connecting to server...\nChecking tables...\nError: Database does not have any tables</code></p>\n<p>The implication here is that there <em>is</em> a database that has successfully been reached, but it has no tables. This is almost certainly false - I don't have a role or database by the name of the defaults that <code>psql</code> expects when invoked without arguments.</p>", ["<p>This behavior is already changed in master and will be released in 0.4.0.\nIf no flags provided to <code>pgweb</code> binary it will open the web page with database connection URL prompt.</p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/59", "title": "edit", "status": "closed", "labels": [], "priority": null, "description": ["<p>Is there any plan of enabling some sort of row editing?</p>", ["<p>Yes, there is a plan to have a simple row editor, but its not something to be released next, maybe in a new next releases. </p>", "<p>@sosedoff Has this been put off-shelf or will this be worked on now?</p>\n<p>Having an inline editor would be really great :)</p>", "<p>no, its not worked on right now and i don't have an ETA on when its going to be available.</p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/58", "title": "0.3.1's linux amd64 release zip ball is broken", "status": "closed", "labels": [], "priority": null, "description": ["<p>https://github.com/sosedoff/pgweb/releases/download/v0.3.1/pgweb_linux_amd64.zip</p>\n<p>I cannot decompress it in my local machine (linux, using unzip), maybe this zip file has been damaged?</p>", ["<p>I just tested it on linux amd64, works:</p>\n<p>```\nwget https://github.com/sosedoff/pgweb/releases/download/v0.3.1/pgweb_linux_amd64.zip\nunzip pgweb_linux_amd64.zip\n./pgweb_linux_amd64 --version</p>\n<h1>pgweb v0.3.1</h1>\n<p>```</p>\n<p>Check SHA1 sum for the file, it should be:</p>\n<p><code>d6965ed93720aa1c5d4c6380a85d147c29a81e3e</code></p>", "<p>Oh, that must be my network's problem! I can get the correct file now, thanks! :beers:</p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/57", "title": "QUERY PLAN response is truncated", "status": "closed", "labels": [], "priority": null, "description": ["<p><img alt=\"screen shot 2014-11-04 at 09 44 36\" src=\"https://cloud.githubusercontent.com/assets/368717/4896222/7eff6cca-63f6-11e4-970c-f1303149c0fe.png\" /></p>\n<p>query plan response is truncated with ...</p>", []]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/56", "title": "Add docker file instruction to README", "status": "closed", "labels": [], "priority": null, "description": ["", ["<p>Can't accept that: duplicate and unnecessary commits that modify app.js while PR proposes only changes to the readme. </p>", "<p>How can I remove the app.js commits</p>", "<p>@llitfkitfk use git rebase -i as described in http://git-scm.com/book/en/v2/Git-Tools-Rewriting-History</p>", "<p>@mbertheau Thanks a lot.</p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/55", "title": "Added basic support for multiple schemas.", "status": "closed", "labels": [], "priority": null, "description": ["<p>Issue #14. This will just list all tables in all schemas (except information_schema and pg_catalog) in the list on the left. Even better would be to group the schemas in the table on the left, but that should be an easy client-side change.</p>", ["<p>Closing this obsolete PR, multiple schemas are implemented in master and will be part of the upcoming release. Thanks.</p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/54", "title": "brew install pgweb", "status": "closed", "labels": [], "priority": null, "description": ["<p>Not an issue but is anyone working on a formula for homebrew? :smile: </p>", ["<p>https://github.com/sosedoff/pgweb/#compile-from-source</p>", "<p>@corbanb https://github.com/caskroom/homebrew-cask/blob/master/Casks/pgweb.rb</p>\n<p>Not the most recent release though</p>", "<p>thanks guys!</p>", "<p>@sosedoff I guess I should of asked this also. Are you planning on having one that will stay updated? :smile: </p>\n<p>P.S. This is the exact kind of project I have been needing. thanks for the work!</p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/53", "title": "No tables Exception", "status": "closed", "labels": [], "priority": null, "description": ["<p>If there is no tables in database. It cannot start the server.</p>", ["<p>This is done intentionally </p>", "<p>All right. </p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/52", "title": "Reduce duplication in Makefile", "status": "closed", "labels": [], "priority": null, "description": ["<ul>\n<li>~~Install <code>gox</code> and <code>go-bindata</code> only when not installed~~</li>\n<li>Have only one target that specifies the asset bindata</li>\n<li>Build assets as normal dependencies</li>\n</ul>\n<p>This also makes it easy to commit generated files as part of a pre-commit hook, e.g.,</p>\n<p>``` sh</p>\n<h1>!/bin/sh</h1>\n<p>git diff --cached --name-only | grep -qv '^static/' || (\n        make build-assets &amp;&amp; git add -f bindata.go &amp;&amp; make build-dev-assets\n)\n```</p>", ["<p>Hmm. The build probably failed due to the colon in <code>GOPATH</code>. Investigating.</p>", "<blockquote>\n<p>The build probably failed due to ...</p>\n</blockquote>\n<p>I rebased with one fewer commit. Rather than install gox and go-bindata as target dependencies, we call <code>make</code> again to build the dev assets during setup.</p>", "<p>Great, just tested - everything works as expected.</p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/51", "title": "Cannot expand width of column contents", "status": "closed", "labels": [], "priority": null, "description": ["<p>Currently, large results that do not fit into a column are truncated. It would be nice to be able to have a way to expand this view.</p>", ["<p>Im aware of that. My original thought was to implement a double-click action that will show a view with all column data. </p>", "<p>Yes. This is especially annoying when doing <code>explain analyze</code></p>", "<p>This is fixed in master now. Explain results are no longer cropped. Double-click on row cell will transform its value into textarea. </p>", "<p>@sosedoff This is still not optimal. Especially in the case of <code>explain analyze</code> you'd like to have all rows expanded, not row by row. With difficult queries with a high level of nesting you want a total overview with the fewest clicks possible.</p>", "<p>@gglanzani please provide a screenshot</p>", "<p><img alt=\"screen shot 2014-11-04 at 16 46 16\" src=\"https://cloud.githubusercontent.com/assets/630284/4902481/be5650bc-6439-11e4-8b91-842031f4e4cd.png\" /></p>\n<p>Like this?</p>", "<p>Ah, i understand now. I pushed a change to master, give it a try. </p>", "<p>Yes, this fixes it. Thanks.</p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/50", "title": "Add flag to skip opening the browser everytime", "status": "closed", "labels": [], "priority": null, "description": ["<p>Fixes https://github.com/sosedoff/pgweb/issues/48</p>\n<p>Adds a <code>-s</code> flag to just start the server and not open the browser everytime.</p>", []]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/49", "title": "Mysql support", "status": "closed", "labels": [], "priority": null, "description": ["<p>How against adding mysql support would you be? I find your tool very direct and to the point and mysql has nothing remotely like it (they don't even have an open source gui tool like pgadmin) so I think it would be pretty cool. I know that this would add a layer of compatibility and probably would make working with css/html morecomplex as you have to support both but it is so much better than working with phpmyadmin that I think you might gain a lot of users/contributors.</p>\n<p>If you are interested I or someone looking at this can start a fork to add support in the hopes that it gets merged back.</p>\n<p>ps: yes mysql is a worse database manager, please tell that to wordpress core :)</p>", ["<blockquote>\n<p>they don't even have an open source gui tool like pgadmin</p>\n</blockquote>\n<p><a href=\"http://www.mysql.com/products/workbench/\">MySQL Workbench</a>?</p>", "<p>Its an interesting idea but its definitely too early to consider building support for mysql databases.</p>", "<p>@santagada I know this is a old thread, but I wanted to share my fork in case you still need a similar tool for MySQL.  https://github.com/smurfpandey/mysqlweb</p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/48", "title": "Don't open the browser automatically", "status": "closed", "labels": [], "priority": null, "description": ["<p>It would be cool to have some CLI flag to just run the server, without opening the browser.</p>", ["<p>Added a <code>-s</code> flag in https://github.com/sosedoff/pgweb/pull/50</p>", "<p>Implemented and will be released soon. </p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/47", "title": "Added key binding for explain", "status": "closed", "labels": [], "priority": null, "description": ["<p>Similar to https://github.com/sosedoff/pgweb/commit/ad0bc43eeb5c42b67646f1d06d01918fcdb50264 where a keyboard binding was added for running the query, a keyboard binding for explains will also be useful.</p>\n<p>I like using <code>CMD + E</code>, thoughts?</p>", []]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/46", "title": "Set database settings using environmental variables", "status": "closed", "labels": [], "priority": null, "description": ["<p>I found I would like this feature when messing with pgweb.</p>\n<p>Fixes #41</p>", ["<p>First, i feel like <code>PGWEB_</code> prefix is wrong since we're not connecting to <code>pgweb</code>, but to postgresql instead. So i suggest it should be <code>PG</code> prefix, like <code>PGURL</code>, <code>PGHOST</code> and so on, less typing too.  Im also not sure if i want to keep connection settings as CLI arguments since a lot of people expressed interest in having an web page to connect to database. That way usage will simplify by just running <code>pgweb</code> with no postgresql flags.</p>\n<p>Secondly, im using <code>go fmt</code> plugin for sublime so all my code is automatically structured on each file save, no need to change formatting of import statements. </p>", "<p>Alright. I can fix the env naming, would you like to see every flag available as an env variable then?</p>\n<p>About the imports, I didn't even notice. I use goimports which wraps gofmt, and separates stdlib and external imports automatically.</p>", "<p>I think having env var wont hurt. Btw, there's env var missing for <code>ssl</code> flag. Something like <code>PGSSL</code> would work. </p>", "<p>@sosedoff Updated</p>", "<p>Closing this since there's a better approach to specify connection url, via <code>DATABASE_URL</code> environment variable. I think there should not be too many options on how to specify connection settings, so having environment variables for each flag is an overhead in this case. </p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/45", "title": "Use entrypoint for dockerfile", "status": "closed", "labels": [], "priority": null, "description": ["<p>Just a nicer way to run the docker container. Let's us pass flags directly\nto the pgweb binary.</p>\n<p>Env variables are unnecessary since you have defaults anyways.</p>", ["<p>Looks like its a better way, i was testing docker image with custom params as well. Whats your use case for dockerized pgweb ?</p>", "<p>Mostly for running simple one of queries on a postgres database I use for personal projects. I use docker for everything, so it made sense to use pgweb in a docker container.</p>", "<p>Utilising the <code>ENTRYPOINT</code> directive for this is not a good practice. You are sacrificing a clear and idiomatic behaviour for a small and subjective improvement in call syntax. I would like to encourage you to read the <a href=\"https://docs.docker.com/articles/dockerfile_best-practices/\">Dockerfile best practices</a>, especially <a href=\"https://docs.docker.com/articles/dockerfile_best-practices/#entrypoint\">the section</a> about <code>ENTRYPOINT</code>.</p>\n<p>The environment variables I had introduced could be overwritten from the outside, e.g. <code>docker run -e PGHOST=192.168.1.2</code>, allowing for configuration without explicitly having to set command line flags. This plays well with existing docker tooling like <a href=\"http://www.fig.sh/\">fig</a>, and is in the spirit of the <a href=\"http://12factor.net/\">twelve-factor app manifesto</a>.</p>", "<p>@srijs So use <code>CMD</code> instead ?</p>", "<p>@sosedoff Maybe someone can explain what was wrong with the old Dockerfile? What have been the shortcomings that were addressed through this pull request?</p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/44", "title": "Implement HTTP basic authentication", "status": "closed", "labels": [], "priority": null, "description": ["<p>This PR adds support for HTTP basic authentication.</p>\n<p>Example:</p>\n<p><code>pgweb --url mydb --auth-user foo --auth-pass bar</code></p>", ["<p>@pvh ping</p>", "<p>sweet.</p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/43", "title": "one-click Heroku deploy support", "status": "closed", "labels": [], "priority": null, "description": ["<p>So this is semi/totally bullshit, but I figured I'd open the PR for the purpose of further conversation.</p>\n<p>The primary problem is (I think) the vendoring of <code>bindata.go</code>. Obviously idomatic go provides no guidance on how to manage an asset pipeline today, and the popular <code>kr</code> https://github.com/kr/heroku-buildpack-go buildpack doesn't know about how to use your Makefile.</p>\n<p>Adding a <code>Procfile</code>, <code>app.json</code> and vendoring godeps all seem more-or-less reasonable to me.</p>\n<p>Oh, I also stopped checking if there were any tables and crashing if not. <code>pgweb</code> should probably work on empty databases. I mean... why not?</p>\n<p>A logo which isn't your picture for the app.json would be cool too, but with this branch you can hit the <code>deploy</code> button and get a working app. </p>", ["<p>@sosedoff so, thoughts on this one? Given that vendoring bindata.go and Godeps appears (to my surprise) to be good practice, I guess I would kind of consider accepting this if it were me. The \"allow no tables\" commit is probably the only patch here that might be controversial.</p>\n<p>Are you interested in merging some form of this PR?</p>", "<p>Yeah, im interested in merging this, but haven't gotten to the point or running this on heroku.</p>\n<p>Im okay with Godeps as its the most convenient way to vendor packages, but my main concern is with including bindata.go into codebase. If go-bindata package provided a way to use 2 files, one for dev (bindata.go) and another one for release (bindata-release.go) that would be way better, but now it will require recompilation of assets every time they change (run make dev) which will slow down development flow a lot. </p>", "<blockquote>\n<p>now it will require recompilation of assets every time they change (run make dev) which will slow down development flow a lot.</p>\n</blockquote>\n<p>I don't understand. The purpose of <code>go-bindata -debug</code> is to <em>not</em> compile assets during development. When local development is complete, you do a <code>make build</code> then commit. One build per... feature.</p>", "<p>@cbandy go-bindata with <code>-debug</code> flags embeds user's full path into the bindata.go file, like this:</p>\n<p><code>go\n// static_js_jquery_js reads file data from disk. It returns an error on failure.\nfunc static_js_jquery_js() ([]byte, error) {\n    return bindata_read(\n        \"/Users/sosedoff/go/src/github.com/sosedoff/pgweb/static/js/jquery.js\",\n        \"static/js/jquery.js\",\n    )\n}</code></p>", "<blockquote>\n<p>go-bindata with <code>-debug</code> flags embeds user's full path into the bindata.go file</p>\n</blockquote>\n<p>Yes, debug bindata should not be committed--it is for local development. From the docs:</p>\n<blockquote>\n<p><a href=\"https://godoc.org/github.com/jteeuwen/go-bindata\">you do not want to rebuild the whole server and restart it every time you make a change to a bit of javascript. You just want to build and launch the server once. Then just press refresh in the browser to see those changes... When you are finished developing and ready for deployment, just re-invoke <code>go-bindata</code> without the <code>-debug</code> flag.</a></p>\n</blockquote>\n<p>I suppose I'm just used to this flow. Grammars generate parser Go files, bindata generates asset Go files, etc. Committing changes to a grammar, parser or asset involves a call to <code>make clean build</code>.</p>\n<p>If it is a burden, we can probably rig up a pre-commit hook that builds and stages <code>bindata.go</code> when committing something in <code>/static</code>.</p>", "<blockquote>\n<p>If go-bindata package provided a way to use 2 files, one for dev (bindata.go) and another one for release (bindata-release.go) that would be way better</p>\n</blockquote>\n<p>The <code>-o</code> option lets you specify the output file, but I suspect having two files that export <code>Asset</code> will be irritating as well.</p>", "<p>what are you suggesting then?</p>\n<p>\u2014\nSent from Mailbox</p>\n<p>On Thu, Oct 30, 2014 at 11:20 PM, Chris Bandy notifications@github.com\nwrote:</p>\n<blockquote>\n<blockquote>\n<p>If go-bindata package provided a way to use 2 files, one for dev (bindata.go) and another one for release (bindata-release.go) that would be way better</p>\n<h2>The <code>-o</code> option lets you specify the output file, but I suspect having two files that export <code>Asset</code> will be irritating as well.</h2>\n<p>Reply to this email directly or view it on GitHub:\nhttps://github.com/sosedoff/pgweb/pull/43#issuecomment-61215391</p>\n</blockquote>\n</blockquote>", "<p>I suggest that by version 1.0, we commit compiled assets into version control (making the project \"go get-able\".) I've added some make targets in #52 that should make building assets for commit easier.</p>", "<p>@pvh I don't see <code>godep</code> being invoked anywhere. Have you tried this? If it works, I don't think its necessary to commit the Godep workspace.</p>\n<p><code>app.json</code> has links only to https://github.com/pvh/pgweb.</p>", "<p>Ah, yeah, the app.json needs fixing. I'll update that in the PR. </p>\n<p>In order for the Heroku button to work, it needs the compiled assets... or at least the debug assets. It's a similar problem to <code>go get</code> we push the code to Heroku to compile and later run, but we respect the standard <code>go build</code> interface and don't know about Makefiles and things.</p>\n<p>Similarly, committing the current working versions of the Godeps is necessary to guarantee reproducibility. If someone breaks one of the upstream dependencies this guarantees that we'll still be able to build <code>pgweb</code>. This is again (as I understand it) best practice for godep. </p>", "<p>Oh, also - any suggestions on a logo image to use? I used Dan's github avatar...</p>", "<p>@sosedoff See my comment on <code>--bind=</code> on the previous patch. If you change that, you can take it out of the Procfile. Other than that, I added basicauth support with this patch as well and tested it out. It's pretty cool to deploy pgweb with a single click! I wish Heroku had some way of pulling in a DATABASE_URL from some other app by default but a user will still have to configure that for themselves right now. So it goes.</p>\n<p>Anyway, let me know if you want any other changes to this PR.</p>", "<p>You can probably use <code>--bind=0.0.0.0</code> instead ?</p>", "<p>Yeah, I just used --bind= but binding to localhost specifically felt really unusual to me for a web service and I assumed that it was an oversight.</p>", "<p>Since we have authentication now, i think i'll set binding to 0.0.0.0 by default</p>", "<p>Cool, I think that makes sense. You wanna merge this thing? I hate having a PR open for a long time. Would it help to decompose it or rebase it or something?</p>", "<p>@pvh Lets get this merged in tonight. Btw, do you have any additional instructions regarding godep ?</p>", "<blockquote>\n<p>I don't see <code>godep</code> being invoked anywhere.</p>\n</blockquote>\n<p>Ah, I see now that the buildpack invokes <code>godep</code>.</p>", "<p>Yusss. Thanks!</p>", "<p>On Nov 6, 2014 1:41 AM, \"Peter van Hardenberg\" notifications@github.com\nwrote:</p>\n<blockquote>\n<p>Yusss. Thanks!</p>\n</blockquote>\n<p>I just tried it and it worked great!</p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/42", "title": "Generate escape sequences for special characters in the query", "status": "closed", "labels": [], "priority": null, "description": ["<p>Fixes https://github.com/sosedoff/pgweb/issues/38</p>", []]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/41", "title": "config file and/or environment variables (avoid leaking credentials to command line / ps)", "status": "closed", "labels": [], "priority": null, "description": ["<p>There should be a way to provide the PG credentials in a config file or in environment variables. The command line is visible to any local user.</p>", ["<p>You can specify connection url via <code>DATABASE_URL</code> environment variable. </p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/40", "title": "Add changelog", "status": "closed", "labels": [], "priority": null, "description": ["", []]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/39", "title": "Changelog.md", "status": "closed", "labels": [], "priority": null, "description": ["<p>Hello, what about creating md document with changes on each version?</p>", ["<p>Yeah, <code>CHANGELOG.md</code> is a good idea.</p>", "<p>@sosedoff :+1: </p>", "<p>You can grab release notes from this page - https://github.com/sosedoff/pgweb/releases</p>", "<p>@sosedoff done :smiley: #40</p>", "<p>Merged. </p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/38", "title": "Export query result that contains wildcard search", "status": "closed", "labels": [], "priority": null, "description": ["<p>Example query: SELECT * FROM table WHERE column LIKE '%word%';</p>\n<p>This breaks the \"Export as CSV\" function, since the query wildcards gets interpreted as escape characters in the URL.</p>", ["<p>Fixed in https://github.com/sosedoff/pgweb/pull/42</p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/37", "title": "Prepopulate SQL Query panel", "status": "closed", "labels": ["enhancement"], "priority": null, "description": ["<p>It would be really nice if the SQL Query panel was automatically populated with the query that you had in the default Content pane.</p>\n<p>e.g. When you click on the table name in the sidebar, it switches to the Content pane and shows the first X rows of the table. Would be great if when you then clicked on SQL Query it showed:</p>\n<p><code>sql\nSELECT a, b, c, ...\nFROM table_name\nORDER BY a\nLIMIT 25</code></p>\n<p>(or whatever the query actually is)</p>\n<hr />\n<p>Looking at the code, I think it's just this: https://github.com/sosedoff/pgweb/blob/master/static/js/app.js#L151</p>", ["<p>+1</p>", "<p>I just experimented with this feature and it could somewhat confusing. </p>\n<p>Say you opened the editor for the first time and you selected a table from sidebar. When you switch to query view, editor will be populated with generic SQL query to get 100 rows. But when you select a different table and switch to query view again, editor will hold previous query since its persistent and does not necessary relate to the selected table. </p>\n<p>Im going to close this unless someone has a better idea. </p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/36", "title": "Implement Ctrl-Enter", "status": "closed", "labels": [], "priority": null, "description": ["<p>This brings along the AngularJS PR, as well as Sorting of columns and + Ctrl-Enter in Query editor.</p>\n<p>Review only commit 59f9143 for the Ctrl-Enter implementation.</p>\n<p>Fixes https://github.com/sosedoff/pgweb/issues/30</p>\n<p>/cc @sosedoff @brianlow</p>", []]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/35", "title": "Error: Database does not have any tables ... but it does", "status": "closed", "labels": [], "priority": null, "description": ["<p>I am trying to connect to a database running on another machine on the network.  When I connect with pgAdmin it works perfectly, so I know that it should work.</p>\n<p>I try to run pgweb with the following command:</p>\n<p><code>pgweb_windows_amd64.exe /url:\"postgres://vagrant:vagrant@192.168.248.33/mydbname\"</code></p>\n<p>Here is the error that it returns:</p>\n<p><code>Connecting to server...\nChecking tables...\nError: Database does not have any tables</code></p>\n<p>I turned on connection logging on the server, and here is what I got:</p>\n<p><code>2014-10-29 01:11:30 GMT 54503ec2.7ee9 vagrant mydbname LOG:  statement: SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' ORDER BY table_schema,table_name;\n2014-10-29 01:11:30 GMT 54503ec2.7ee9 vagrant mydbname LOG:  could not receive data from client: Connection reset by peer</code></p>\n<p>When I run that query (<code>SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' ORDER BY table_schema,table_name;</code>) in pgAdmin, it returns the list of tables, as expected.</p>\n<p>What is causing this?</p>\n<p>Is there any other information that can be used to troubleshoot?</p>", ["<p>Hm, thats strange. Are you running pgAdmin locally or inside vagrant ?</p>", "<p>I'm running pgAdmin on my Windows Host machine, and connecting to the IP address of the Vagrant machine, exactly the same as I'm trying to do with pgweb.</p>", "<p>The Linux version running on the VM does exactly the same thing:</p>\n<p>```\n./pgweb_linux_386 --url=\"postgres://vagrant:vagrant@192.168.248.33/mydbname\"</p>\n<h1>both versions do the same thing</h1>\n<p>./pgweb_linux_amd64 --url=\"postgres://vagrant:vagrant@192.168.248.33/mydbname\"\n```</p>\n<p>shows this:</p>\n<p><code>Connecting to server...\nChecking tables...\nError: Database does not have any tables</code></p>", "<p>Ok, seems like something is broken. Im going to test with vagrant to replicate the issue.</p>", "<p>The Vagrant box is running Ubuntu 14.04 LTS and Postgres 9.3 installed from the package manager.</p>", "<p>Just tested on vagrant box. Works fine. Can you run the following on your host machine:</p>\n<p><code>psql -h 192.168.248.33 -U vagrant -W mydbname</code></p>\n<p>And when connection is established, this:</p>\n<p><code>\\dt</code></p>\n<p>Output should include all available tables in the database. </p>", "<p>Running <code>psql -h 192.168.248.33 -U vagrant -W mydbname</code> and <code>\\dt</code> works perfectly - it lists all of the tables.</p>\n<p>Here is the query shown in the query log when I run <code>\\dt</code>:</p>\n<p><code>2014-10-29 02:58:28 GMT 545057d1.287b vagrant mydbname LOG:  statement: SELECT n.nspname as \"Schema\",\n      c.relname as \"Name\",\n      CASE c.relkind WHEN 'r' THEN 'table' WHEN 'v' THEN 'view' WHEN 'm' THEN 'materialized view' WHEN 'i' THEN 'index' WHEN 'S' THEN 'sequence' WHEN 's' THEN 'special' WHEN 'f' THEN 'foreign table' END as \"Type\",\n      pg_catalog.pg_get_userbyid(c.relowner) as \"Owner\"\n    FROM pg_catalog.pg_class c\n         LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace\n    WHERE c.relkind IN ('r','')\n          AND n.nspname &lt;&gt; 'pg_catalog'\n          AND n.nspname &lt;&gt; 'information_schema'\n          AND n.nspname !~ '^pg_toast'\n      AND pg_catalog.pg_table_is_visible(c.oid)\n    ORDER BY 1,2;</code></p>", "<p>Im not sure what could cause this. Can you try to run pgweb with url from this gist: https://gist.github.com/sosedoff/20f1799215d35e2bfc32\nIts a dummy heroku database with 1 table and no rows. If it does not work i'll probably have to add a bunch of debug statements to see where command/connection fails. </p>", "<p>I am able to run pgweb with that URL, from both my Windows machine and my Vagrant VM.</p>", "<p>I can post my postgresql config files somewhere if that helps.</p>", "<p>Yes please, i would like to see your <code>postgresql.conf</code> and <code>pg_hba.conf</code> configs. Would prefer gists thought. </p>", "<p>Same here.</p>\n<p>Its because of: \n<code>PG_TABLES        = \"SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' ORDER BY table_schema,table_name;\"</code>\nhttps://github.com/sosedoff/pgweb/blob/bf2df4e74f875e1aa3faa392ddde1fc3bcbf6698/client.go#L14</p>\n<p><code>table_schema = 'public'</code> we don't have a schema named <code>public</code></p>\n<p>Also; Why do we need tables to start the UI? Maybe you want to run <code>CREATE TABLE..</code> in the UI?</p>", "<p>@Jellyfrog The default schema is named <code>public</code> - and my database is using the default.  As I mentioned previously, if I run that exact query in pgAdmin on Windows or in psql on Linux, I get the table list as expected.</p>", "<p>Here are my config files: https://gist.github.com/kohenkatz/d53eeafa27e33fb623ed</p>\n<p>Other than adding two access lines in <code>pg_hba.conf</code> and two logging lines in <code>postgresql.conf</code>, the two files are completely Ubuntu default settings, AFAIK.</p>", "<p>I tried turning off SSL on the server so that I could use WireShark on the connection to see if that shows anything.  (This requires adding <code>?sslmode=disable</code> to the end of the connection URL.)</p>\n<p>I'll see if that turns up anything interesting.</p>", "<p>@kohenkatz any luck ?</p>", "<p>I am able to reproduce the problem when I use an user that doesn't have permissions to see the 'public' schema.\nWhen I user 'postgres' user which has the permission, the problem does not occur.\n@kohenkatz do you really see some table(s) when you run</p>\n<p><code>psql -h 192.168.248.33 -U vagrant -W mydbname -c \" SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' ORDER BY table_schema,table_name;\"</code></p>\n<p>Either way, @sosedoff I think it would be better to rewrite the query for schemas and tables, in order to list tables from all available schemas, not only from public (which is not always accessible, as it looks to be the issue here).\nFor example, apart from the 'public' schema with only table 'dual', I have also 2 other schemas with tens of tables in the DB, but in the WebUI I can only see the sad and empty table 'dual'.</p>\n<p>If you already have this on the roadmap or maybe I am doing something wrong, then I apologize, I just stumbled upon this here and had very little time to look around so far ;)</p>", "<p>@fijosh This makes sense, although its not a quick fix and requires a few evenings of work. </p>", "<p>@fijosh Actually, you are right that running that exact command gives no output. The query only returns results when I run it as the <code>postgres</code> user or as the owner of the database (the application-specific user).</p>\n<p>However, it doesn't seem that granting access to the <code>public</code> schema actually fixes this.  I tried all of the following, with no success:\n- <code>GRANT ALL ON SCHEMA public TO vagrant;</code>\n- <code>GRANT USAGE ON SCHEMA information_schema TO vagrant;</code>\n- <code>GRANT USAGE ON SCHEMA pg_catalog TO vagrant;</code></p>\n<p>What I found that I had to do in the end is explicitly set <code>GRANT ALL ON TABLE ______ TO vagrant;</code> where <code>______</code> means doing the same thing for every table in the database.  I would like to think that there's an easier way to do that, but that is all I could find.</p>", "<blockquote>\n<p>I had to do in the end is explicitly set <code>GRANT ALL ON TABLE ______ TO vagrant;</code> where <code>______</code> means doing the same thing for every table in the database. </p>\n</blockquote>\n<p>9.x has <a href=\"http://www.postgresql.org/docs/current/static/sql-grant.html\"><code>ALL TABLES IN SCHEMA schema_name</code></a></p>", "<p>@sosedoff agreed on that, definitely not a small fix, but it will bring so much value to this tool :)\nAnyways I would discard this issue as it seems it was simply an issue with permissions for given user</p>", "<p>Closing this since i was not able to reproduce the issue on most common setups (local and remote).</p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/34", "title": "Sort data tabs", "status": "closed", "labels": [], "priority": null, "description": ["<p>Fixes https://github.com/sosedoff/pgweb/issues/13</p>\n<p>Requires AngularJS PR though.</p>", ["<p>/cc @sosedoff whoops, this PR only adds commit 988996b on top of the other AngularJS PR.</p>", "<p>Can this be part of #32 ?</p>", "<p>What's the status on this?</p>\n<p>I tried the latest binary (0.5.1) and sorting is not available. Do you have a roadmap?</p>", "<p>Closing due to no interest.</p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/33", "title": "Add Dockerfile", "status": "closed", "labels": [], "priority": null, "description": ["<p>Add a Dockerfile for use in Docker.</p>", ["<p>Closing this since there was another PR for docker</p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/32", "title": "AngularJS-ification of the Web front-end.", "status": "closed", "labels": [], "priority": null, "description": ["<p>This seems to bring parity of functionality, with less boilerplate.</p>\n<p>I also took the liberty to change the <code>/query</code> endpoint slightly, to avoid duplicating some logic in there.</p>\n<p>/cc @sosedoff .. btw, thanks for starting this :)</p>", ["<p>So, what do you think ?</p>\n<p>I'd like to continue to implement stuff, but don't want to put too much in a single PR.</p>\n<p>Also,  is there a roadmap or a list of the next things you wanted to work on ?</p>", "<p>I will check out your branch later today. As for the roadmap, i'll write something down and push to the repo. </p>", "<p>So far i have some issues with running this branch (mostly due to conflicts with master). Due to other issues i'll have to postpone angular rollout until v0.5 release. 0.4 release will only include bugfixes and minor changes. I'll give us some time to test everything and make sure there's no breaking changes.  </p>", "<p>Any news ? </p>", "<p>I would go ahead with angular for 0.5.0 release. There's been a lot of changes since this PR was introduced. Would be great if you can go over all the changes (no major backend changes though) and port that into angular app. Im currently working on another major feature to add SSH gateway support. </p>", "<p>@abourget Ping. Would you be interested in updating angular code to reflect all recent changes?\nMost of the ui and api did not change much.</p>", "<p>Are you interested in learning AngularJS ?</p>", "<p>Sure, i've done some simple angular stuff before. </p>", "<p>Is it really a smart idea to couple the view with business logic? Wasn't the whole point of jQuery to write unobtrusive javascript?</p>\n<p><code>js\n&lt;input type=\"button\" id=\"run\" value=\"Run Query\"\n+               ng-click=\"doQuery(query)\"\n+               ng-disabled=\"loading\"\n+               class=\"btn btn-sm btn-primary\" /&gt;</code></p>\n<p>Maybe i'm old fashion but this just seems wrong? Can't you at least use the data- prefix so it's valid html?\n- Edit: if you're going to rewrite this for no reason - why angular? To me the code just looks overly complex for no reason. Just trying to understand but obviously I have no skin in the game.</p>", "<p>Closing due to no interest.</p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/31", "title": "Replace attr with prop for disabled elements", "status": "closed", "labels": [], "priority": null, "description": ["<p>From the jQuery documentation:</p>\n<p><img alt=\"jQuery Prop\" src=\"http://cl.ly/image/2T3h3m0y0g0j/Image%202014-10-28%20at%2010.18.11%20pm.png\" /></p>\n<p>http://api.jquery.com/prop/</p>", ["<p>:thumbsup:</p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/30", "title": "Keyboard support for SQL Query", "status": "closed", "labels": [], "priority": null, "description": ["<p>Ability to work on a sql query with just the keyboard. </p>\n<p>Didn't see a way to submit a query by keyboard shortcut (on OSX).</p>\n<p>Great app by the way. Liking it better than pgAdmin already!</p>", ["<p>Hm, which key binding should it be? </p>", "<p>Ctrl+Enter perhaps.</p>\n<p>It will depend on what key combinations can be captured from the browser. </p>\n<p>jsfiddle.com uses ctrl-enter. Works for me on OSX with Chrome and Safari.</p>", "<p>If it works on all operating systems that would be great.</p>", "<p>Implemented. </p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/29", "title": "Escape table names", "status": "closed", "labels": [], "priority": null, "description": ["<p>We have a table named \"user\" (yeah, not great). Viewing the Content shows the current user name instead of the data in the table.</p>\n<p>e.g.</p>\n<p>select * from user</p>\n<p>vs</p>\n<p>select * from \"user\"</p>", ["<p>This is already fixed in #16, will release a new version today. </p>", "<p>Fixed. </p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/28", "title": "input doesn't focus when clicking SQL query tab", "status": "closed", "labels": [], "priority": null, "description": ["", []]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/27", "title": "Use DATABASE_URL environment variable if no Url is set", "status": "closed", "labels": [], "priority": null, "description": ["<p>Default to <code>DATABASE_URL</code> if no <code>options.Url</code> is set. </p>\n<p>If <code>DATABASE_URL</code> is set, any <code>--host</code> or other parameters are ignored.</p>", ["<p>Thanks!</p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/26", "title": "Overlap between table names in the \"Database Tables\" left column", "status": "closed", "labels": ["bug"], "priority": null, "description": ["<p>There is an overlap of table names when there are table names that contains hypens, whitespaces, underscores, start with upper case letters, or contain upper case letters\nor when the table names are longer that the width of the left box where the table names are displayed.</p>", ["<p>Can you please provide a screenshot?</p>", "<p><img alt=\"pg_web_overlap\" src=\"https://cloud.githubusercontent.com/assets/528448/4839396/38e31c7e-5ffe-11e4-8c18-9cbc76b9fdf7.png\" /></p>\n<p><img alt=\"overlap_test_tables\" src=\"https://cloud.githubusercontent.com/assets/528448/4839401/47ed7886-5ffe-11e4-8c96-b9b40f4b8293.png\" /></p>", "<p>This should be fixed in master now. </p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/25", "title": "Content tab is not usable when table name contains hypen characters, underscores, whitespaces", "status": "closed", "labels": [], "priority": null, "description": ["<p>I have table names with hypens, underscores, whitespace, etc. in them and I get the following error after starting pgweb, selecting a table with such characters in its name from the left column with \"Database Tables\" and clicking on the Content tab.</p>\n<p>The following errors is displayed: <strong>ERROR: pq: syntax error at or near \"-\"</strong></p>\n<p>The table name and schema names should be quoted with double quotes \" in PostgreSQL to denote identifiers.</p>\n<p>See: http://www.postgresql.org/docs/9.3/static/sql-syntax-lexical.html</p>\n<p>```\nThere is a second kind of identifier: the delimited identifier or quoted identifier. It is formed by enclosing an arbitrary sequence of characters in double-quotes (\"). </p>\n<p>A delimited identifier is always an identifier, never a key word. </p>\n<p>So \"select\" could be used to refer to a column or table named \"select\", whereas an unquoted select would be taken as a key word and would therefore provoke a parse error when used where a table or column name is expected. </p>\n<p>The example can be written with quoted identifiers like this:</p>\n<p>UPDATE \"my_table\" SET \"a\" = 5;</p>\n<p><strong>Quoted identifiers can contain any character, except the character with code zero</strong>. (To include a double quote, write two double quotes.) </p>\n<p>This allows constructing table or column names that would otherwise not be possible, such as ones containing spaces or ampersands. </p>\n<p>The length limitation still applies.\n```</p>", ["<p>Related with #21 </p>", "<p>See #16 </p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/24", "title": "Listen IP", "status": "closed", "labels": ["enhancement"], "priority": null, "description": ["<p>Hi, I'm trying to create a Dockerfile / Docker container to run pgweb in. My problem is that pgweb seems to bind to localhost and that there is no way to change this at the moment.</p>\n<p>Would be great if you could specify listen port and listen IP to bind it to an IP.</p>", ["<p>@donnex Server is started on 0.0.0.0, not on localhost, see here - https://github.com/sosedoff/pgweb/blob/master/main.go#L102\nAnd you can specify server port with <code>--listen</code> flag. </p>", "<p>Ah nice, I forgot to use the boot2docker IP when trying to reach my Docker container. It bind to all interfaces just as you said.</p>\n<p>I think it would be better to bind to localhost default and allow the users to override the listen adress. This way you don't leave it open by accident without knowing what IP it listens to.</p>\n<p>The message says \"To view database open http://localhost:8081 in browser\", that made me believe it listened to localhost only per default.</p>\n<p>For example the Django does it this way. Default to only bind to localhost and allow override if needed.</p>", "<p>Yeah, using <code>localhost</code> as a default bind interface it a good idea. Thanks. </p>", "<p>Implemented in https://github.com/sosedoff/pgweb/commit/d325527aa642a89a1a9c9ae972dbe40f1045d8d0</p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/23", "title": "--ssl disable does not work", "status": "closed", "labels": ["bug"], "priority": null, "description": ["<p>Maybe there is something wrong in the syntax, but this does not work</p>\n<p><code>shell\n$ pgweb --ssl disable --url postgres://vc:vc@172.17.12.4:5432/my_db\nConnecting to server...\nError: pq: SSL is not enabled on the server</code></p>\n<p>I'm using 0.3.0, Mac OS X</p>", ["<p>I agree with @gglanzani </p>", "<p>I had the same problem, try to use --host --db etc. instead of URL. At least that workaround fixed my problem.</p>", "<p>@donnex I have been using the --host variant :)</p>", "<p>The issue is with <code>--url</code> flag. Once set, any other flags like <code>--ssl</code> are ignored. Its a bug. </p>", "<p>@donnex how did you set password without url option? ;)</p>", "<p>Before this is fixed, appending <code>?sslmode=disable</code> to the url seems to work fine for me on Postgres 9.3, like:</p>\n<p><code>pgweb --url postgres://postgres:postgres@localhost:5432/db?sslmode=disable</code></p>", "<p>@rainbow-workspace thx, it works well :)</p>", "<p>Fixed in master.</p>", "<p>I can't get <code>-ssl disable</code> to work either in the CLI but does work in the web app.</p>\n<p><code>$ pgweb --ssl disable --host=(boot2docker ip ^&amp;-) --user=postgress --port=5432\nPgweb version 0.4.1\nConnecting to server...\nError: pq: SSL is not enabled on the server</code></p>", "<p>Can you try running the same command, but set <code>--ssl</code> flag to <code>foobar</code> ? Server should respond\nwith error stating that sslmode is invalid. This should verify if sslmode is properly passed into the server connection string. </p>", "<p>no error when passing foobar</p>\n<p><code>bash\n$ gweb --ssl foobar\nPgweb version 0.4.1\nStarting server...\nTo view database open http://localhost:8080 in browser\n[GIN] 2014/12/12 - 18:05:59 | 200 |     267.56us | 127.0.0.1:57641  GET /\n[GIN] 2014/12/12 - 18:05:59 | 200 |   2.383953ms | 127.0.0.1:57641  GET /static/css/bootstrap.css\n[GIN] 2014/12/12 - 18:05:59 | 200 |   1.556328ms | 127.0.0.1:57646  GET /static/js/ace-pgsql.js\n[GIN] 2014/12/12 - 18:05:59 | 200 |   9.165307ms | 127.0.0.1:57645  GET /static/js/ace.js\n[GIN] 2014/12/12 - 18:05:59 | 200 |   3.285483ms | 127.0.0.1:57644  GET /static/js/jquery.js\n[GIN] 2014/12/12 - 18:05:59 | 200 |    260.692us | 127.0.0.1:57643  GET /static/css/app.css\n[GIN] 2014/12/12 - 18:05:59 | 200 |    633.444us | 127.0.0.1:57642  GET /static/css/font-awesome.css\n[GIN] 2014/12/12 - 18:05:59 | 200 |    370.716us | 127.0.0.1:57641  GET /static/js/app.js\n[GIN] 2014/12/12 - 18:05:59 | 400 |     80.391us | 127.0.0.1:57641  GET /info\nexit\n^C\u23ce</code></p>", "<p>I think i might have found the issue. Will test more.</p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/22", "title": "add Dockerfile", "status": "closed", "labels": [], "priority": null, "description": ["<p>Adds a Dockerfile which can be used to create a docker image.</p>", ["<p>Im not sure how binary gets executed. Dockerfile lists <code>/go/bin/app</code> as executable, but <code>make dev</code> only produces <code>pgweb</code> file. Also, It makes more sense to have <code>CMD</code> like this:</p>\n<p><code>CMD pgweb --host $PGHOST --port $PGPORT --user $PGUSER --db $PGDATABASE</code></p>\n<p>Thoughts?</p>", "<p>Never mind, i missed the part where you set directory for the app. Anyways, having <code>pgweb</code> as entry point still makes more sense to me.</p>", "<p>The golang parent image is set up in such a way that it is naming the binary after the directory it is produced in. I changed the working directory to /go/src/pgweb, and as a consequence, now the command calls \"pgweb\".</p>", "<p>Turns out this works, but it seems kind of pointless to use CMD and env variables when you could have simply used entrypoint to set flags. </p>", "<h1>33</h1>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/21", "title": "Tables with name uppercase", "status": "closed", "labels": [], "priority": null, "description": ["<p>There is a table for example \"COM_Abonent\", when I click on it\n<strong>Expected</strong>:\nto see data\n<strong>Real result</strong>:\n\"ERROR: pq: relation \"com_abonent\" does not exist\"\n<strong>Comment</strong>:\nWhen I run query:\nselect * from \"COM_Abonent\";\nI see data from this table</p>", ["<p>I'll release a new version today with a fix. </p>", "<p>See #16 </p>", "<p>Fixed. </p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/20", "title": "Installing via brew", "status": "closed", "labels": [], "priority": null, "description": ["<p>What do you think about creating a homebrew formulae  to more convinient installing on mac os?</p>\n<p>Great project! :smiley: :+1: </p>", ["<p>see #9 </p>", "<p>Yeah, thanks</p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/19", "title": "Authentication", "status": "closed", "labels": ["enhancement"], "priority": null, "description": ["<p>I would like to host this on heroku, so I need to have at least basic http password authentication.</p>", ["<p>Thats possible, gin has BasicAuth middleware - https://github.com/gin-gonic/gin#using-basicauth-middleware</p>", "<p>See #44 </p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/18", "title": "added password argument", "status": "closed", "labels": [], "priority": null, "description": ["<p>Allows for passing in a password as an argument.</p>", ["<p>Does it work with blank password ?</p>", "<p>Yes, it defaults the password to the empty string and it works for users without passwords on my machine.\nFeel free to test it out yourself before merging.</p>", "<p>There's a breaking change now, which results in <code>Error: pq: SSL is not enabled on the server</code>. Please make sure that your changes are compatible with existing implementation. </p>", "<p>Just to clarify, default OSX postgresql installation with homebrew has ssl mode set to <code>disabled</code>.</p>", "<p>Should have the proper behavior now</p>", "<p>It's not needed I guess. You can prepend your command with <code>PGPASSWORD</code> and it will do the trick\n <code>PGPASSWORD=mypass ./pgweb --user myuser --db mydb</code></p>", "<p>Fair enough. Using the URL argument would also work. I felt an additional argument would make things more explicit to the end user.</p>", "<p>I somehow forgot to add <code>pass</code> flag. </p>", "<p>I think username/password as well as database selection should be done through the GUI.  Somewhat like phpMyAdmin, or any other GUI for databases.  What do you think ?</p>\n<p>I could work on that later tonight, if the AngularJS branch gets merged.  It'd be slicker I think.</p>", "<p>@abourget yes, i want to implement database connection screen via web. Its not a top priority right now, but i'll work on it when i fix all other bugs. </p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/17", "title": "Switch to go-rice ?", "status": "closed", "labels": [], "priority": null, "description": ["<p>Hi @sosedoff great initiative with this app.</p>\n<p>Wondered if you'd switch to go-rice instead of go-bindata ?  go-rice allows you to read files from the current dir, or bundle them as a .zip .. and doesn't need a build step to update files.. as it only points to a directory, and serves everything underneath.</p>\n<p>https://github.com/GeertJohan/go.rice</p>\n<p>I have an app that works that way, I could help out</p>", ["<p>I've seen that repo but haven't played with it yet. Lets hold for now, thanks for suggestion. </p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/16", "title": "Content tab doesn't double-quote table in query", "status": "closed", "labels": ["bug"], "priority": null, "description": ["<p>In postgres, identifiers need to be named with double-quotes if they're not all lowercase. For example, I have a table <code>Accounts</code>, and when I click the \"content\" tab, I see:</p>\n<p><code>ERROR: pq: relation \"account\" does not exist</code></p>\n<p>because the query issued was</p>\n<p><code>SELECT * FROM Account LIMIT 100;</code></p>\n<p>with <code>Account</code> not double-quoted.</p>", ["<p>Good catch @bblack! Will fix</p>", "<p>I noticed the same bug in the last two pgweb versions. My table is called \"Client\", but when I click on it in the sidebar, the \"Rows\" window shows the following error:</p>\n<blockquote>\n<p>ERROR: pq: relation \"xyz.client\" does not exist</p>\n</blockquote>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/15", "title": "AngularJS ?", "status": "closed", "labels": [], "priority": null, "description": ["<p>I was thinking of angularifying the app, I think it would scale better. Would you be opposed ?</p>", ["<p>Im open to pretty much any web framework that would simplify development. Currently there's \nbunch of jquery code that works, but at some point it will be painful to add new features. </p>", "<p>So I was thinking of following in the lead of the Google Web Starter Kit, with some Gulp goodness, angular and following the Google best practices for Angular (there's a Google Doc about it somewhere).</p>\n<p>I'm so tired of using pgadmin3 and I think you've found a sweet spot with Go and bindata :-)</p>", "<p>Great, you can just fork repo and start building up the app. Let me know when you have something to look at. </p>", "<p>That would add npm and node as a development dependency.  We can still package the whole thing in one executable.. which is so sweet :)</p>", "<p>I would prefer to have a very minimal amount of dependencies if possible. </p>", "<p>ok, so you don't want any of npm/node stuff in there ?</p>", "<p>I'll start without</p>", "<p>I dont mind, just keep number of dependencies as low as possible. </p>", "<p>Want to vendor in the angularjs dependencies or use CDNs ?</p>", "<p>Also, which browsers do you want to support ?</p>", "<p>I guess you're okay with A-grade browsers, as you used jQuery 2+</p>", "<p>We cant really use CDN as it would break app without internet connection. \nBrowsers: chrome, safari, firefox and ie. App should be simple enough to work on \nlast 2 major revisions. </p>", "<p>Got it</p>", "<p>With the recent announcements regarding AngularJS 2, I think EmberJS is a safer choice.\nThere will be no migration path between Angular versions.</p>\n<p>Just a heads up. It might be worth to wait for Angular 2 as well.</p>", "<p>Guys it's all done.. we just need to merge it.  Angular is a fine framework, has massive adoption and talent around it. Don't see why we'd need to rewrite it at this point.</p>\n<p>https://github.com/sosedoff/pgweb/pull/32</p>\n<p>We can migrate to AngularJS 2 when we want.</p>", "<p>What is that recent announcement ?</p>", "<p>This will be merged in for 0.5 release. I'd say this could happen in the next couple of weeks.</p>", "<p>@abourget Check http://jaxenter.com/angular-2-0-112094.html</p>\n<p>tl;dr:</p>\n<blockquote>\n<p>It\u2019s also been confirmed that there will be no migration path from Angular 1.X to 2.0.</p>\n</blockquote>\n<p>I come from an EmberJS background and I was astonished by this announcement. Ember community also puts migration and incremental updates at first.</p>\n<p>So, it looks like upgrading to AngularJS 2 won't be as easy as \"when we want\".\nBut maybe by then there will be other solutions for that!</p>\n<p>Great job on #32!</p>\n<p>And sorry for not checking the PR's before, I didn't know you already wrote the Angular version!</p>", "<p>It's great that there is innovation on that front, and is yet another reason to learn Angular.</p>\n<p>You prefer frameworks that are stuck in the past ? If Ember doesn't have a path for future greatness, it'll rot and become obsolete, along with your knowledge of it.  I prefer investing my time learning things that I'll be able to use and reuse for many years, even if that means some work at some point.</p>\n<p>AngularJS 1.X won't disappear (the just released Angular 1.3 is already years ahead anyway), but at least there's going to be hope that we can migrate to something even more excellent in the future.. </p>", "<p>@abourget </p>\n<p>First of all, I absolutely <strong>DIDN'T</strong> mean to turn this into a silly Ember vs Angular discussion. I'm definitely not a fanboy of anything, so I really feel my opinion is unbiased.</p>\n<p>Both frameworks are really really awesome, but they're also different. I see frameworks, libraries, operating systems, etc, as tools. You wouldn't fasten a nail with a screwdriver, right? This happens in developers everyday lives as well. Angular and Ember must have their own set of problems and users.\nI like Angular, just didn't like that announcement of Angular 2. And many people using angular in production or OSS projects like pgweb didn't like this as well...</p>\n<p>However, I must disagree in one thing. Ember isn't <strong>at all</strong> stuck in the past. There is a difference between <strong>stability</strong> and <strong>stagnation</strong> that people don't seem to understand. Ember is stable, but not stalled. Ember's motivation is <em>Stability without Stagnation</em> (credits to @tomdale on this one :D).\nConsider reading the brand new <a href=\"https://github.com/emberjs/rfcs/pull/15\">Ember 2.0 plan</a> and see the differences for yourself. Also, it is known that Angular will implement features as routing, es6, etc, that Ember is supporting right now.\nEmber is now looking at things like Virtual DOM (definitely isn't \"past\") and borrowing things from React and Angular itself.</p>\n<p>I wouldn't say Ember is ahead of Angular and neither vice-versa. They've just taken different paths.</p>\n<p>Anyway, my point was to add something of value to this project. And I said that without seeing your PR, and I'm terribly sorry for that!\nI seriously believe pgweb is very well served with your hard work at #32! I didn't mean to devalue your work, sorry!</p>", "<p>heeheh, sorry @miguelcobain didn't want to irritate.. guess I failed.  Shouldn't have said <em>stuck in the past</em>, should've delayed my response too :) .  Thanks for pointing the Ember 2.0 roadmap.  I actually don't know much about Ember, and I get pretty excited for Angular related stuff. I ask for your forgiveness.</p>", "<p>Is this conversion still in progress? ReactJS has taken the JS community by storm, and is a very maintainable way to build front-end apps.</p>", "<p>I'm doing more Polymer these days :) You're free to pitch it what you want.. I think we should close this one.</p>\n<p>Someone else will take leadership in doing a solid UI..</p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/14", "title": "schema support?", "status": "closed", "labels": [], "priority": null, "description": ["<p>I can 'set search_path= schema' and run the query through the browsers, but the tables names show in the left do not change. </p>\n<p>thanks.</p>", ["<p>I think we should support multiple schemata. The simplest approach would be to show all of them all the time.</p>\n<p>Something nicer may be to show those for which the current user has <code>USAGE</code> privilege. This could change with a <code>SET ROLE</code> statement, so maybe a button to refresh on demand.</p>\n<p>Basing the list on <code>search_path</code> also makes a lot of sense. Again, this could change, so a refresh button may be appropriate.</p>", "<p>This is an important feature, it is very rare in my experience that I see tables in the default public schema. </p>\n<p>Usually they are in different schemas with different security definers / policies in place where everything in public schema is the API.\nEverything else (tables, internal functions, triggers, views, etc.) is visibile only to a particular user or group of users that are connecting from the backend service to a certain schema name.</p>", "<p>:+1: </p>", "<p>:+1: </p>", "<p>:+1:</p>", "<p>I just ran into this problem also.  My database doesn't use the public schema, so I can run queries but cannot select any tables.</p>", "<p>yeah,I just ran into this problem also. My database doesn't use the public schema, so I can run queries but cannot select any tables.</p>", "<p>Does this proble solved? \nI use pgweb_windows_386 version 0.5.0, schema support?</p>", "<p>Is this also the reason why I cannot see materialized views?</p>", "<p>:+1: </p>", "<p>:+1: I just ran into this problem also. My database doesn't use the public schema, so I can run queries but cannot select any tables.</p>", "<p>hang tight, im working on it. </p>", "<p>:+1:  if you want help push the branch with your progress or your idea how would you like to implement it, \nI really would like to see this feature, wouldn't mind to help. \nthanks for your effort! I use this tool every day. :) </p>", "<p>:+1: Would like this schema support. Willing to help.</p>", "<p>+1</p>", "<p>Implemented in master</p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/13", "title": "Cannot sort tables", "status": "closed", "labels": ["enhancement"], "priority": null, "description": ["<p>When clicking on a column header, the table needs to be sorted by that header, and pressing again should invert the sort direction.</p>\n<p>Also there should be a GUI to define multi-column sorting.</p>", ["<p>Column sorting is planned. See <code>TODO</code>. </p>", "<p>@bill-myers you mean in the \"Content\" view ?</p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/12", "title": "Extra scrollbars", "status": "closed", "labels": ["enhancement"], "priority": null, "description": ["<p>In both Firefox and Chrome, extra scrollbars and shown in all panes, which look horrible.</p>\n<p>The problem is that you are setting \"overflow: scroll\" on all the divs, which is dumb.</p>\n<p>You should use \"overflow: auto\" instead.</p>", ["<p>Good catch. This has to do with my local OSX settings where scrollbars are only visible during scrolling. </p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/11", "title": "Missing hyperlinks on foreign key", "status": "closed", "labels": ["enhancement"], "priority": null, "description": ["<p>This project is missing the most important feature of a database GUI: the ability to view related records...</p>\n<p>Basically whenever a foreign key is defined, the value should be linked to the row in the referenced table. Also, ideally, there should be a button to automatically join on foreign keys.</p>\n<p>Without this feature, easy navigation is impossible.</p>", ["<p>And in fact, even if there are no foreign keys, it should probably look for a table called \"foos\" given a column called \"foo_id\", since things like Rails have a broken default setup that doesn't setup foreign keys.</p>", "<p>Foreign keys seems reasonable. +1</p>\n<p>Guessing foreign references sounds less good. -1</p>", "<p>I agree with cbandy.\nOn the same subject, what about an option to navigate in the other direction?\nYou click on the id of an entity and it shows a list of every linked table. Selecting a linked table would show it filtered with every element referening the entity.</p>", "<p>Closing this issue unless anyone is interested on working on the feature  / @cbandy @bill-myers </p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/10", "title": "Kill a running query", "status": "closed", "labels": ["enhancement"], "priority": null, "description": ["<p>Nice application, </p>\n<p>I have an enhancement suggestion. You can add an option in order to kill a running query.</p>\n<p>Have a nice day</p>", ["<p>This seems to be interesting, however i'm not planning on getting this implemented in the next releases.</p>", "<p>It'd also be useful to know how long an ongoing query has been running. A simple javascript timer on the page would suffice for this purpose.</p>", "<p>@kespindler javascript timer would be irrelevant in case if you run a query on non-local servers. Results\ntable also takes some time. So if we want to have query execution time, it has to be done via backend. </p>", "<p>Stopping a running query is currently in works.</p>", "<p>Is it possible to use pgweb as a service? Or what should be the proper way to deploy it? </p>", "<p>+1</p>", "<p>I think this should be pretty easy to make.</p>\n<p>You already made the Activity tab, it has which one is active and what's the pid.\nI imagine active queries having a \"kill\" button that executes this:</p>\n<p><code>sql\nSELECT pg_cancel_backend(pid);</code></p>\n<p>And Activity tab is refreshed. That should do no?</p>", "<p>Implemented in master</p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/9", "title": "Brew installing", "status": "closed", "labels": [], "priority": null, "description": ["<p>Could it be possible to install (and keep updated) via homebrew?</p>\n<p>Would be awesome to not depend on checking out Github from time to time for updating. </p>", ["<p>@jonathanwiesel yeah, thats possible. i'm exploring this possibility, homebrew does not allow binary releases in the main repo, they have homebrew-bin repo for that.</p>", "<p>how about <a href=\"https://github.com/caskroom/homebrew-cask\">homebrew-cask</a>?</p>", "<p>thats also an option. are you interested in working on homebrew integration ?</p>", "<p>seems like homebrew-cask is for GUI applications</p>", "<p>@sosedoff it also works for different kind of applications, would work on it and update this issue when done :wink: </p>", "<p>Done. The only issue is that, because the way Github builds release urls, there's not a fixed <code>latest</code> download URL, so the cask definition will need to be updated manually every time there's a new version indicating the version number and the zip's sha256 hash.</p>", "<p>I think github releases is fine for now. As an alternative we could use https://bintray.com/ to host binary releases. </p>", "<p>I would recommend SourceForge, but like you said, for now Github is fine. Either way, this nice project is now installable through Homebrew Cask, I hope more people will adopt it. Keep up the good work :wink: </p>", "<p>Good work @jonathanwiesel :+1: </p>", "<p>Actually homebrew has a binary tap: https://github.com/Homebrew/homebrew-binary (this is what projects like packer.io are using).</p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/8", "title": "how can I set password for connection?", "status": "closed", "labels": [], "priority": null, "description": ["<p><code>bash\nmax@max-linux:~/Codes/go/pgweb$ pgweb --url postgresql://max:pass@localhost:5432/postgres\nConnecting to server...\nError: missing \"=\" after \"postgresql://max:pass@localhost:5432/postgres\" in connection info string\"</code></p>", ["<p>Connection string format:</p>\n<p><code>postgres://user:password@host:port/database</code></p>\n<p>Notice that you have <code>postgresql</code> instead of <code>postgres</code> </p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/7", "title": "added Pgweb listener port setting", "status": "closed", "labels": [], "priority": null, "description": ["<p>This feature is included your TODO.\nPgweb runs only port 8080.\nIf you want to run multiple pgweb, add run option --httpPort 8090</p>", []]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/6", "title": "Fixed typo in connection string example", "status": "closed", "labels": [], "priority": null, "description": ["<p>Previous --url example has a typo that causes an error. \nCorrect syntax is 'postgres' not 'postgresql'.</p>", []]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/5", "title": "added Pgweb listener port setting", "status": "closed", "labels": [], "priority": null, "description": ["<p>This feature is included your TODO.\nPgweb runs  only port 8080.\nIf you want to run multiple pgweb, add run option <code>--httpPort 8090</code> </p>", ["<p><code>8080</code> is referenced other places. See e80b90710b2d96b13ff2774a19ae956b77c00e31.</p>", "<p>ok,I'll fix soon.</p>", "<p>I am  github newbie,therefore cant resolved merge confilcts.\nso,I closed pull request, and do again.sorry</p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/4", "title": "Bug Fix Issue #2 - 'make deps' fails", "status": "closed", "labels": [], "priority": null, "description": ["<p>Fix Issue 2 - 'make deps' fails with 'undefined Asset'. \nAdd bindata.go file.\nRemove bindata.go from .gitignore and 'make clean'.</p>", []]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/3", "title": "Bug Fix : Issue #2", "status": "closed", "labels": [], "priority": null, "description": ["<p>Fixes Issue #2 - make deps fails with 'undefined: Asset'. \nChanged deps target to build out required bindata.go before doing 'go get'.</p>", ["<p>:-1:</p>\n<p>This repo is not <a href=\"http://blog.golang.org/organizing-go-code\">\"go get\"-able</a> unless it commits all generated files.</p>\n<p>The proper fix is to either:\n1. Stop using <code>go get</code> to fetch its own dependencies.\n2. Commit <code>bindata.go</code> so that a fresh checkout contains code that compiles.</p>", "<p>Alright, that makes sense. I was originally thinking that adding bindata.go would be the best, but then I changed my mind.</p>", "<p>@cbandy if you commit <code>bindata.go</code> it will include environment-specific constants, which is why file was excluded from repo.</p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/issues/2", "title": "'make deps' fails due to undefined Asset in api.go", "status": "closed", "labels": [], "priority": null, "description": ["<p>Hello,\nI get the following error when trying to run 'make deps' on a fresh checkout.</p>\n<p>go get</p>\n<h1>github.com/pgweb</h1>\n<p>./api.go:27: undefined: Asset\n./api.go:156: undefined: Asset\nmake: *** [deps] Error 2</p>\n<p>The issue is that Asset doesn't get defined until after running 'go-bindata ...' to generate the bindata.go file.</p>\n<p>If you include the bindata.go that is generated from 'go-bindata -debug ...' in your project then everything will work and subsequent calls to 'make dev' or 'make build' will overwrite as expected. </p>\n<p>Alternatively, you could include the 'go-bindata ... ' call as part of 'make deps', but then 'go get' will need to move down the chain.</p>", ["<p>@stevencothren check master, i made a tweak to the makefile, it should not fail on fresh checkout now. </p>", "<p>Ok. This is the change I made previously here : https://github.com/sosedoff/pgweb/pull/3\nIt was pointed out there that this change results in the repository still not being 'go get\"-able.</p>\n<p>I see now that you replied there too.</p>\n<p>Is there no way to resolve both issues? Just curious</p>", "<p>thats alright for now</p>\n<p>\u2014\nSent from Mailbox</p>\n<p>On Fri, Oct 24, 2014 at 9:06 PM, Steven Cothren notifications@github.com\nwrote:</p>\n<blockquote>\n<p>Ok. This is the change I made previously here : https://github.com/sosedoff/pgweb/pull/3</p>\n<h2>It was pointed out there that this change results in the repository still not being 'go get\"-able.</h2>\n<p>Reply to this email directly or view it on GitHub:\nhttps://github.com/sosedoff/pgweb/issues/2#issuecomment-60468431</p>\n</blockquote>", "<p>It actually looks like the absolute paths are only included when go-bindata is run with -debug option.</p>\n<p>What do you think about including the non-debug version in the repository? </p>\n<p>Alternatively, I have been looking at adding an option to go-bindata to use relative paths, which would mean you could include the debug version along with that option.</p>\n<p>Thoughts?</p>", "<p>Im not sure about release assets being included in the repo, feels like duplication to me. Compiling\nassets is only required for development purposes, people can download binary releases for general purpose usage in this case and they don't have to compile anything at all. For local development you'll have to install all dependencies anyway. </p>\n<p>I'm okay with updated <code>go-bindata</code> package that can support non-absolute paths in the <code>bindata.go</code> file.</p>"]]}, {"subject": "pgweb", "link": "/sosedoff/pgweb/pull/1", "title": "Expose all constant queries as Client functions", "status": "closed", "labels": [], "priority": null, "description": ["<p>Rather than have consumers call <code>Sprintf</code> directly.</p>", ["<p>Thanks!</p>"]]}]